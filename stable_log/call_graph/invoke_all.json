{
    "invoke.terminals": ["contextlib.contextmanager"],
    "invoke.terminals.pty_size": [
        "invoke.terminals._pty_size",
        "invoke.terminals._win_pty_size",
    ],
    "invoke.terminals._pty_size": ["struct.pack", "fcntl.ioctl", "struct.unpack"],
    "invoke.terminals._win_pty_size": [
        "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
        "ctypes.Structure.__init__",
        "ctypes.POINTER",
        "ctypes.byref",
        "ctypes.windll.kernel32.GetStdHandle",
    ],
    "struct.pack": [],
    "fcntl.ioctl": [],
    "struct.unpack": [],
    "ctypes.POINTER": [],
    "ctypes.windll.kernel32.GetStdHandle": [],
    "ctypes.Structure.__init__": [],
    "ctypes.byref": [],
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo": [],
    "invoke.terminals.stdin_is_foregrounded_tty": [
        "os.tcgetpgrp",
        "os.getpgrp",
        "invoke.util.has_fileno",
    ],
    "invoke.util.has_fileno": ["<builtin>.isinstance", "sys.stdin.fileno"],
    "os.getpgrp": [],
    "os.tcgetpgrp": [],
    "invoke.terminals.cbreak_already_set": [
        "termios.tcgetattr",
        "<builtin>.all",
        "<builtin>.bool",
    ],
    "termios.tcgetattr": [],
    "<builtin>.bool": [],
    "<builtin>.all": [],
    "contextlib.contextmanager": [],
    "invoke.terminals.character_buffered": [
        "tty.setcbreak",
        "invoke.terminals.cbreak_already_set",
        "termios.tcgetattr",
        "invoke.terminals.stdin_is_foregrounded_tty",
        "termios.tcsetattr",
        "invoke.util.isatty",
    ],
    "invoke.util.isatty": [
        "<builtin>.callable",
        "os.isatty",
        "<builtin>.hasattr",
        "invoke.util.has_fileno",
    ],
    "tty.setcbreak": [],
    "termios.tcsetattr": [],
    "invoke.terminals.ready_for_reading": [
        "msvcrt.kbhit",
        "invoke.util.has_fileno",
        "<builtin>.bool",
        "select.select",
    ],
    "msvcrt.kbhit": [],
    "select.select": [],
    "invoke.terminals.bytes_to_read": [
        "struct.unpack",
        "fcntl.ioctl",
        "invoke.util.has_fileno",
        "invoke.util.isatty",
    ],
    "invoke.util": [
        "contextlib.contextmanager",
        "collections.namedtuple",
        "<builtin>.globals",
        "invoke.util.enable_logging",
        "<builtin>.getattr",
        "os.environ.get",
        "logging.getLogger",
    ],
    "invoke.util.enable_logging": ["logging.basicConfig"],
    "logging.basicConfig": [],
    "os.environ.get": [],
    "logging.getLogger": [],
    "<builtin>.globals": [],
    "<builtin>.getattr": [],
    "invoke.util.task_name_sort_key": [],
    "invoke.util.cd": ["os.getcwd", "os.chdir"],
    "os.getcwd": [],
    "os.chdir": [],
    "sys.stdin.fileno": [],
    "<builtin>.isinstance": [],
    "<builtin>.hasattr": [],
    "<builtin>.callable": [],
    "os.isatty": [],
    "invoke.util.encode_output": [],
    "invoke.util.helpline": ["<builtin>.type"],
    "<builtin>.type": [],
    "invoke.util.ExceptionHandlingThread.__init__": ["<builtin>.super"],
    "<builtin>.super": [],
    "invoke.util.ExceptionHandlingThread.run": [
        "<builtin>.callable",
        "<builtin>.hasattr",
        "<builtin>.super",
        "sys.exc_info",
        "threading.Thread._run",
    ],
    "threading.Thread._run": [],
    "sys.exc_info": [],
    "invoke.util.ExceptionHandlingThread.exception": ["collections.namedtuple"],
    "collections.namedtuple": [],
    "invoke.util.ExceptionHandlingThread.is_dead": ["threading.Thread.is_alive"],
    "threading.Thread.is_alive": [],
    "invoke.util.ExceptionHandlingThread.__repr__": [],
    "invoke.vendor.lexicon": [],
    "invoke.vendor.lexicon.Lexicon.__init__": [],
    "invoke.vendor.lexicon.Lexicon.__getattr__": ["<builtin>.super"],
    "invoke.vendor.lexicon.alias_dict": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__init__": ["<builtin>.super"],
    "invoke.vendor.lexicon.alias_dict.AliasDict.alias": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.unalias": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.aliases_of": ["six.iteritems"],
    "six.iteritems": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict._handle": [
        "invoke.vendor.lexicon.alias_dict.AliasDict.__setitem__.unaliased",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__setitem__.single",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__.single",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__.unaliased",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__.unaliased",
        "<builtin>.isinstance",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__.multi",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__.multi",
        "<builtin>.getattr",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__delitem__.unaliased",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__delitem__.single",
        "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__.single",
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__setitem__.single": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__delitem__.single": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__.single": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__.single": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__.multi": [
        "<builtin>.ValueError"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__.multi": ["<builtin>.all"],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__setitem__.unaliased": [
        "<builtin>.super"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__delitem__.unaliased": [
        "<builtin>.super"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__.unaliased": [
        "<builtin>.super"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__.unaliased": [
        "<builtin>.super"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict._single": ["<builtin>.isinstance"],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__setitem__": [
        "invoke.vendor.lexicon.alias_dict.AliasDict._handle"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__getitem__": [
        "invoke.vendor.lexicon.alias_dict.AliasDict._handle"
    ],
    "<builtin>.ValueError": [],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__contains__": [
        "invoke.vendor.lexicon.alias_dict.AliasDict._handle"
    ],
    "invoke.vendor.lexicon.alias_dict.AliasDict.__delitem__": [
        "invoke.vendor.lexicon.alias_dict.AliasDict._handle"
    ],
    "invoke.vendor.lexicon.attribute_dict": [],
    "invoke.vendor.lexicon.attribute_dict.AttributeDict.__getattr__": [
        "<builtin>.AttributeError"
    ],
    "<builtin>.AttributeError": [],
    "invoke.vendor.lexicon.attribute_dict.AttributeDict.__setattr__": [],
    "invoke.vendor.lexicon.attribute_dict.AttributeDict.__delattr__": [],
    "invoke.vendor": [],
    "invoke.vendor.yaml3": [],
    "invoke.vendor.yaml3.scan": ["invoke.vendor.yaml3.loader.Loader.__init__"],
    "invoke.vendor.yaml3.loader.Loader.__init__": [
        "invoke.vendor.yaml3.parser.Parser.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.__init__",
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.constructor.BaseConstructor.__init__",
        "invoke.vendor.yaml3.composer.Composer.__init__",
        "invoke.vendor.yaml3.reader.Reader.__init__",
    ],
    "invoke.vendor.yaml3.parse": ["invoke.vendor.yaml3.loader.Loader.__init__"],
    "invoke.vendor.yaml3.compose": ["invoke.vendor.yaml3.loader.Loader.__init__"],
    "invoke.vendor.yaml3.compose_all": ["invoke.vendor.yaml3.loader.Loader.__init__"],
    "invoke.vendor.yaml3.load": [
        "invoke.vendor.yaml3.loader.SafeLoader.__init__",
        "invoke.vendor.yaml3.loader.Loader.__init__",
    ],
    "invoke.vendor.yaml3.loader.SafeLoader.__init__": [
        "invoke.vendor.yaml3.parser.Parser.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.__init__",
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.constructor.BaseConstructor.__init__",
        "invoke.vendor.yaml3.composer.Composer.__init__",
        "invoke.vendor.yaml3.reader.Reader.__init__",
    ],
    "invoke.vendor.yaml3.load_all": [
        "invoke.vendor.yaml3.loader.SafeLoader.__init__",
        "invoke.vendor.yaml3.loader.Loader.__init__",
    ],
    "invoke.vendor.yaml3.safe_load": ["invoke.vendor.yaml3.load"],
    "invoke.vendor.yaml3.safe_load_all": ["invoke.vendor.yaml3.load_all"],
    "invoke.vendor.yaml3.emit": [
        "io.StringIO.getvalue",
        "invoke.vendor.yaml3.dumper.Dumper.__init__",
        "io.StringIO",
        "io.BytesIO.getvalue",
    ],
    "io.StringIO": [],
    "invoke.vendor.yaml3.dumper.Dumper.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.__init__",
        "invoke.vendor.yaml3.emitter.Emitter.__init__",
        "invoke.vendor.yaml3.serializer.Serializer.__init__",
    ],
    "io.StringIO.getvalue": [],
    "io.BytesIO.getvalue": [],
    "invoke.vendor.yaml3.serialize_all": [
        "invoke.vendor.yaml3.dumper.Dumper.__init__",
        "io.BytesIO",
        "io.StringIO.getvalue",
        "io.BytesIO.getvalue",
        "io.StringIO",
    ],
    "io.BytesIO": [],
    "invoke.vendor.yaml3.serialize": ["invoke.vendor.yaml3.serialize_all"],
    "invoke.vendor.yaml3.dump_all": [
        "invoke.vendor.yaml3.dumper.SafeDumper.__init__",
        "invoke.vendor.yaml3.dumper.Dumper.__init__",
        "io.BytesIO",
        "io.StringIO.getvalue",
        "io.BytesIO.getvalue",
        "io.StringIO",
    ],
    "invoke.vendor.yaml3.dumper.SafeDumper.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.__init__",
        "invoke.vendor.yaml3.emitter.Emitter.__init__",
        "invoke.vendor.yaml3.serializer.Serializer.__init__",
    ],
    "invoke.vendor.yaml3.dump": ["invoke.vendor.yaml3.dump_all"],
    "invoke.vendor.yaml3.safe_dump_all": ["invoke.vendor.yaml3.dump_all"],
    "invoke.vendor.yaml3.safe_dump": ["invoke.vendor.yaml3.dump_all"],
    "invoke.vendor.yaml3.add_implicit_resolver": [
        "invoke.vendor.yaml3.resolver.BaseResolver.add_implicit_resolver"
    ],
    "invoke.vendor.yaml3.resolver.BaseResolver.add_implicit_resolver": [],
    "invoke.vendor.yaml3.add_path_resolver": [
        "invoke.vendor.yaml3.resolver.BaseResolver.add_path_resolver"
    ],
    "invoke.vendor.yaml3.resolver.BaseResolver.add_path_resolver": [
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.add_constructor": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.add_constructor"
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.add_constructor": [],
    "invoke.vendor.yaml3.add_multi_constructor": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.add_multi_constructor"
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.add_multi_constructor": [],
    "invoke.vendor.yaml3.add_representer": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.add_representer"
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.add_representer": [],
    "invoke.vendor.yaml3.add_multi_representer": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.add_multi_representer"
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.add_multi_representer": [],
    "invoke.vendor.yaml3.YAMLObjectMetaclass.__init__": ["<builtin>.super"],
    "invoke.vendor.yaml3.YAMLObject.from_yaml": [],
    "invoke.vendor.yaml3.YAMLObject.to_yaml": [],
    "invoke.vendor.yaml3.events": [],
    "invoke.vendor.yaml3.events.Event.__init__": [],
    "invoke.vendor.yaml3.events.Event.__repr__": [
        "<builtin>.getattr",
        "<builtin>.hasattr",
    ],
    "invoke.vendor.yaml3.events.NodeEvent.__init__": [],
    "invoke.vendor.yaml3.events.CollectionStartEvent.__init__": [],
    "invoke.vendor.yaml3.events.StreamStartEvent.__init__": [],
    "invoke.vendor.yaml3.events.DocumentStartEvent.__init__": [],
    "invoke.vendor.yaml3.events.DocumentEndEvent.__init__": [],
    "invoke.vendor.yaml3.events.ScalarEvent.__init__": [],
    "invoke.vendor.yaml3.cyaml": [],
    "invoke.vendor.yaml3.cyaml.CBaseLoader.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.constructor.BaseConstructor.__init__",
        "_yaml.CParser.__init__",
    ],
    "_yaml.CParser.__init__": [],
    "invoke.vendor.yaml3.constructor.BaseConstructor.__init__": [],
    "invoke.vendor.yaml3.resolver.BaseResolver.__init__": [],
    "invoke.vendor.yaml3.cyaml.CSafeLoader.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.constructor.BaseConstructor.__init__",
        "_yaml.CParser.__init__",
    ],
    "invoke.vendor.yaml3.cyaml.CLoader.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.constructor.BaseConstructor.__init__",
        "_yaml.CParser.__init__",
    ],
    "invoke.vendor.yaml3.cyaml.CBaseDumper.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "_yaml.CEmitter.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.__init__",
    ],
    "_yaml.CEmitter.__init__": [],
    "invoke.vendor.yaml3.representer.BaseRepresenter.__init__": [],
    "invoke.vendor.yaml3.cyaml.CSafeDumper.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "_yaml.CEmitter.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.__init__",
    ],
    "invoke.vendor.yaml3.cyaml.CDumper.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "_yaml.CEmitter.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.__init__",
    ],
    "invoke.vendor.yaml3.nodes": [],
    "invoke.vendor.yaml3.nodes.Node.__init__": [],
    "invoke.vendor.yaml3.nodes.Node.__repr__": ["<builtin>.repr"],
    "<builtin>.repr": [],
    "invoke.vendor.yaml3.nodes.ScalarNode.__init__": [],
    "invoke.vendor.yaml3.nodes.CollectionNode.__init__": [],
    "invoke.vendor.yaml3.error": [],
    "invoke.vendor.yaml3.error.Mark.__init__": [],
    "invoke.vendor.yaml3.error.Mark.get_snippet": ["<builtin>.len"],
    "<builtin>.len": [],
    "invoke.vendor.yaml3.error.Mark.__str__": [
        "invoke.vendor.yaml3.error.Mark.get_snippet"
    ],
    "invoke.vendor.yaml3.error.MarkedYAMLError.__init__": [],
    "invoke.vendor.yaml3.error.MarkedYAMLError.__str__": ["<builtin>.str"],
    "<builtin>.str": [],
    "invoke.vendor.yaml3.loader": [],
    "invoke.vendor.yaml3.loader.BaseLoader.__init__": [
        "invoke.vendor.yaml3.parser.Parser.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.__init__",
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.constructor.BaseConstructor.__init__",
        "invoke.vendor.yaml3.composer.Composer.__init__",
        "invoke.vendor.yaml3.reader.Reader.__init__",
    ],
    "invoke.vendor.yaml3.reader.Reader.__init__": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.reader.Reader.determine_encoding",
        "<builtin>.getattr",
        "invoke.vendor.yaml3.reader.Reader.check_printable",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.__init__": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_stream_start"
    ],
    "invoke.vendor.yaml3.parser.Parser.__init__": [],
    "invoke.vendor.yaml3.composer.Composer.__init__": [],
    "invoke.vendor.yaml3.composer": [],
    "invoke.vendor.yaml3.composer.Composer.check_node": [],
    "invoke.vendor.yaml3.composer.Composer.get_node": [
        "invoke.vendor.yaml3.composer.Composer.compose_document"
    ],
    "invoke.vendor.yaml3.composer.Composer.compose_document": [
        "invoke.vendor.yaml3.composer.Composer.compose_node"
    ],
    "invoke.vendor.yaml3.composer.Composer.get_single_node": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.composer.Composer.compose_document",
    ],
    "invoke.vendor.yaml3.composer.Composer.compose_node": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.composer.Composer.compose_mapping_node",
        "invoke.vendor.yaml3.composer.Composer.compose_scalar_node",
        "invoke.vendor.yaml3.composer.Composer.compose_sequence_node",
    ],
    "invoke.vendor.yaml3.composer.Composer.compose_scalar_node": [
        "invoke.vendor.yaml3.nodes.ScalarNode.__init__"
    ],
    "invoke.vendor.yaml3.composer.Composer.compose_sequence_node": [
        "invoke.vendor.yaml3.composer.Composer.compose_node",
        "invoke.vendor.yaml3.nodes.CollectionNode.__init__",
    ],
    "invoke.vendor.yaml3.composer.Composer.compose_mapping_node": [
        "invoke.vendor.yaml3.composer.Composer.compose_node",
        "invoke.vendor.yaml3.nodes.CollectionNode.__init__",
    ],
    "invoke.vendor.yaml3.resolver": [
        "re.compile",
        "<builtin>.list",
        "invoke.vendor.yaml3.resolver.BaseResolver.add_implicit_resolver",
    ],
    "<builtin>.tuple": [],
    "invoke.vendor.yaml3.resolver.BaseResolver.descend_resolver": [
        "invoke.vendor.yaml3.resolver.BaseResolver.check_resolver_prefix",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.resolver.BaseResolver.check_resolver_prefix": [
        "<builtin>.isinstance"
    ],
    "invoke.vendor.yaml3.resolver.BaseResolver.ascend_resolver": [],
    "invoke.vendor.yaml3.resolver.BaseResolver.resolve": [],
    "re.compile": [],
    "<builtin>.list": [],
    "invoke.vendor.yaml3.scanner": [],
    "invoke.vendor.yaml3.scanner.SimpleKey.__init__": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_stream_start": [
        "invoke.vendor.yaml3.tokens.StreamStartToken.__init__"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_token": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.scanner.Scanner.need_more_tokens",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_more_tokens",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.need_more_tokens": [
        "invoke.vendor.yaml3.scanner.Scanner.next_possible_simple_key",
        "invoke.vendor.yaml3.scanner.Scanner.stale_possible_simple_keys",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_more_tokens": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_folded",
        "invoke.vendor.yaml3.scanner.Scanner.check_document_end",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_directive",
        "invoke.vendor.yaml3.scanner.Scanner.check_directive",
        "invoke.vendor.yaml3.scanner.Scanner.unwind_indent",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_mapping_start",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_key",
        "invoke.vendor.yaml3.scanner.Scanner.check_value",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_alias",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_stream_end",
        "invoke.vendor.yaml3.scanner.Scanner.scan_to_next_token",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_document_start",
        "invoke.vendor.yaml3.scanner.Scanner.check_document_start",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_sequence_start",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_block_entry",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_single",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_document_end",
        "invoke.vendor.yaml3.scanner.Scanner.check_plain",
        "invoke.vendor.yaml3.scanner.Scanner.stale_possible_simple_keys",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_entry",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_value",
        "invoke.vendor.yaml3.scanner.Scanner.check_block_entry",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_sequence_end",
        "invoke.vendor.yaml3.scanner.Scanner.check_key",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_tag",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_double",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_plain",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_anchor",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_literal",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_mapping_end",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.peek_token": [
        "invoke.vendor.yaml3.scanner.Scanner.need_more_tokens",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_more_tokens",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.get_token": [
        "invoke.vendor.yaml3.scanner.Scanner.need_more_tokens",
        "invoke.vendor.yaml3.scanner.Scanner.fetch_more_tokens",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.stale_possible_simple_keys": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "<builtin>.list",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.next_possible_simple_key": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_to_next_token": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.unwind_indent": [
        "invoke.vendor.yaml3.tokens.Token.__init__"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_stream_end": [
        "invoke.vendor.yaml3.scanner.Scanner.unwind_indent",
        "invoke.vendor.yaml3.tokens.Token.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_directive": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_directive": [
        "invoke.vendor.yaml3.scanner.Scanner.unwind_indent",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
        "invoke.vendor.yaml3.scanner.Scanner.scan_directive",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_document_start": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_document_start": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_document_indicator"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_document_end": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_document_end": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_document_indicator"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_sequence_start": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_collection_start"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_mapping_start": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_collection_start"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_sequence_end": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_collection_end"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_mapping_end": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_collection_end"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_entry": [
        "invoke.vendor.yaml3.tokens.Token.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_block_entry": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_block_entry": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.add_indent",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
        "invoke.vendor.yaml3.tokens.Token.__init__",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_key": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_key": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.add_indent",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
        "invoke.vendor.yaml3.tokens.Token.__init__",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_value": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_value": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.tokens.Token.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
        "invoke.vendor.yaml3.scanner.Scanner.add_indent",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_alias": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_anchor",
        "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_anchor": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_anchor",
        "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_tag": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag",
        "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_literal": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_block_scalar"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_folded": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_block_scalar"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_single": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_scalar"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_double": [
        "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_scalar"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.check_plain": [],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_plain": [
        "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key",
        "invoke.vendor.yaml3.scanner.Scanner.scan_plain",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key": [
        "invoke.vendor.yaml3.scanner.SimpleKey.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__"
    ],
    "invoke.vendor.yaml3.tokens.Token.__init__": [],
    "invoke.vendor.yaml3.scanner.Scanner.add_indent": [],
    "invoke.vendor.yaml3.tokens.StreamStartToken.__init__": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_directive": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_directive_ignored_line",
        "invoke.vendor.yaml3.scanner.Scanner.scan_directive_name",
        "invoke.vendor.yaml3.scanner.Scanner.scan_yaml_directive_value",
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_directive_value",
        "invoke.vendor.yaml3.tokens.DirectiveToken.__init__",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_document_indicator": [
        "invoke.vendor.yaml3.scanner.Scanner.unwind_indent",
        "invoke.vendor.yaml3.tokens.Token.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_collection_start": [
        "invoke.vendor.yaml3.tokens.Token.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_collection_end": [
        "invoke.vendor.yaml3.tokens.Token.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_anchor": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_tag": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_uri",
        "invoke.vendor.yaml3.tokens.TagToken.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_handle",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_block_scalar": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar",
        "invoke.vendor.yaml3.scanner.Scanner.remove_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_breaks",
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break",
        "invoke.vendor.yaml3.tokens.ScalarToken.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_ignored_line",
        "<builtin>.max",
        "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_indicators",
        "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_indentation",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.fetch_flow_scalar": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar",
        "invoke.vendor.yaml3.scanner.Scanner.save_possible_simple_key",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_spaces",
        "invoke.vendor.yaml3.tokens.ScalarToken.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_non_spaces",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_plain": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.tokens.ScalarToken.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_plain_spaces",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_line_break": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_directive_name": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_yaml_directive_value": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_yaml_directive_number",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_tag_directive_value": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_directive_prefix",
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_directive_handle",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_directive_ignored_line": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break",
    ],
    "invoke.vendor.yaml3.tokens.DirectiveToken.__init__": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_yaml_directive_number": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "<builtin>.int",
    ],
    "<builtin>.int": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_tag_directive_handle": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_handle",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_tag_directive_prefix": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_tag_uri",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_tag_handle": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_tag_uri": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_uri_escapes",
    ],
    "invoke.vendor.yaml3.tokens.TagToken.__init__": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_indicators": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "<builtin>.int",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_ignored_line": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_indentation": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break"
    ],
    "<builtin>.max": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_block_scalar_breaks": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break"
    ],
    "invoke.vendor.yaml3.tokens.ScalarToken.__init__": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_non_spaces": [
        "<builtin>.range",
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break",
        "<builtin>.int",
        "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_breaks",
        "<builtin>.chr",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_spaces": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break",
        "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_breaks",
    ],
    "<builtin>.range": [],
    "<builtin>.chr": [],
    "invoke.vendor.yaml3.scanner.Scanner.scan_flow_scalar_breaks": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break",
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_plain_spaces": [
        "invoke.vendor.yaml3.scanner.Scanner.scan_line_break"
    ],
    "invoke.vendor.yaml3.scanner.Scanner.scan_uri_escapes": [
        "<builtin>.range",
        "<builtin>.int",
        "<builtin>.str",
        "<builtin>.bytes",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "<builtin>.bytes": [],
    "invoke.vendor.yaml3.constructor": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.add_constructor",
        "invoke.vendor.yaml3.constructor.BaseConstructor.add_multi_constructor",
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.check_data": [],
    "invoke.vendor.yaml3.constructor.BaseConstructor.get_data": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_document"
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.construct_document": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object"
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.get_single_data": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_document"
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "<builtin>.next",
        "<builtin>.len",
        "<builtin>.isinstance",
    ],
    "<builtin>.next": [],
    "invoke.vendor.yaml3.constructor.BaseConstructor.construct_scalar": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.construct_sequence": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.construct_mapping": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.BaseConstructor.construct_pairs": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar": [
        "<builtin>.isinstance",
        "<builtin>.super",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.flatten_mapping": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.SafeConstructor.flatten_mapping",
        "<builtin>.len",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_mapping": [
        "<builtin>.isinstance",
        "<builtin>.super",
        "invoke.vendor.yaml3.constructor.SafeConstructor.flatten_mapping",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_null": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar"
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_bool": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar"
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_int": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
        "<builtin>.int",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_float": [
        "<builtin>.float",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
    ],
    "<builtin>.float": [],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_binary": [
        "<builtin>.hasattr",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
        "base64.decodestring",
        "base64.decodebytes",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "base64.decodebytes": [],
    "base64.decodestring": [],
    "invoke.vendor.yaml3.constructor.SafeConstructor": ["re.compile"],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_timestamp": [
        "re.compile.match",
        "<builtin>.len",
        "re.compile.match.groupdict",
        "datetime.date",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
        "<builtin>.int",
        "datetime.datetime",
        "datetime.timedelta",
    ],
    "re.compile.match": [],
    "re.compile.match.groupdict": [],
    "datetime.date": [],
    "datetime.timedelta": [],
    "datetime.datetime": [],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_omap": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object",
        "<builtin>.len",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_pairs": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_object",
        "<builtin>.len",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_set": [
        "<builtin>.set",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_mapping",
    ],
    "<builtin>.set": [],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_str": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar"
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_seq": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_sequence"
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_map": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_mapping"
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_object": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_mapping",
        "<builtin>.hasattr",
    ],
    "invoke.vendor.yaml3.constructor.SafeConstructor.construct_undefined": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__"
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_str": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar"
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_unicode": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar"
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_bytes": [
        "<builtin>.hasattr",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
        "base64.decodestring",
        "base64.decodebytes",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_long": [
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_yaml_int"
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_complex": [
        "<builtin>.complex",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
    ],
    "<builtin>.complex": [],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_tuple": [
        "<builtin>.tuple",
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_sequence",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.find_python_module": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "<builtin>.__import__",
    ],
    "<builtin>.__import__": [],
    "invoke.vendor.yaml3.constructor.Constructor.find_python_name": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "<builtin>.getattr",
        "<builtin>.hasattr",
        "<builtin>.__import__",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_name": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
        "invoke.vendor.yaml3.constructor.Constructor.find_python_name",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_module": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_scalar",
        "invoke.vendor.yaml3.constructor.Constructor.find_python_module",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.make_python_instance": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.Constructor.find_python_name",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.set_python_instance_state": [
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "<builtin>.len",
        "<builtin>.setattr",
    ],
    "<builtin>.setattr": [],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_object": [
        "invoke.vendor.yaml3.constructor.Constructor.make_python_instance",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_mapping",
        "<builtin>.hasattr",
        "invoke.vendor.yaml3.constructor.Constructor.set_python_instance_state",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_object_apply": [
        "invoke.vendor.yaml3.constructor.BaseConstructor.construct_sequence",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.constructor.Constructor.make_python_instance",
        "invoke.vendor.yaml3.constructor.SafeConstructor.construct_mapping",
        "invoke.vendor.yaml3.constructor.Constructor.set_python_instance_state",
    ],
    "invoke.vendor.yaml3.constructor.Constructor.construct_python_object_new": [
        "invoke.vendor.yaml3.constructor.Constructor.construct_python_object_apply"
    ],
    "invoke.vendor.yaml3.parser": [],
    "invoke.vendor.yaml3.parser.Parser.dispose": [],
    "invoke.vendor.yaml3.parser.Parser.check_event": [
        "invoke.vendor.yaml3.parser.Parser.parse_indentless_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_entry",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.parser.Parser.parse_block_node",
        "invoke.vendor.yaml3.parser.Parser.parse_stream_start",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_first_key",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_document_start",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_first_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_first_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_document_content",
        "invoke.vendor.yaml3.parser.Parser.parse_implicit_document_start",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_end",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_first_key",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_document_start": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.parser.Parser.process_directives",
        "invoke.vendor.yaml3.events.Event.__init__",
        "invoke.vendor.yaml3.events.DocumentStartEvent.__init__",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_indentless_sequence_entry": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.parser.Parser.parse_block_node",
        "invoke.vendor.yaml3.events.Event.__init__",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_key": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.events.Event.__init__",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_node",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_key": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_node",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_value": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_node",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_entry": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.parser.Parser.parse_block_node",
        "invoke.vendor.yaml3.events.Event.__init__",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_first_entry": [
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_value": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_node",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.events.Event.__init__",
        "invoke.vendor.yaml3.events.CollectionStartEvent.__init__",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_node",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_first_entry": [
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_entry"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_key": [
        "invoke.vendor.yaml3.parser.Parser.parse_block_node_or_indentless_sequence",
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.events.Event.__init__",
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_document_content": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
        "invoke.vendor.yaml3.parser.Parser.parse_block_node",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_node": [
        "invoke.vendor.yaml3.parser.Parser.parse_node"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_stream_start": [
        "invoke.vendor.yaml3.events.StreamStartEvent.__init__"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_end": [
        "invoke.vendor.yaml3.events.Event.__init__"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_first_key": [
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_key"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_implicit_document_start": [
        "invoke.vendor.yaml3.parser.Parser.parse_document_start",
        "invoke.vendor.yaml3.events.DocumentStartEvent.__init__",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_value": [
        "invoke.vendor.yaml3.parser.Parser.parse_block_node_or_indentless_sequence",
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_first_key": [
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_key"
    ],
    "invoke.vendor.yaml3.parser.Parser.peek_event": [
        "invoke.vendor.yaml3.parser.Parser.parse_indentless_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_node",
        "invoke.vendor.yaml3.parser.Parser.parse_stream_start",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_first_key",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_document_start",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_first_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_first_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_document_content",
        "invoke.vendor.yaml3.parser.Parser.parse_implicit_document_start",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_end",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_first_key",
    ],
    "invoke.vendor.yaml3.parser.Parser.get_event": [
        "invoke.vendor.yaml3.parser.Parser.parse_indentless_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_node",
        "invoke.vendor.yaml3.parser.Parser.parse_stream_start",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_first_key",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_document_start",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_first_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_value",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_sequence_first_entry",
        "invoke.vendor.yaml3.parser.Parser.parse_block_mapping_key",
        "invoke.vendor.yaml3.parser.Parser.parse_document_content",
        "invoke.vendor.yaml3.parser.Parser.parse_implicit_document_start",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_sequence_entry_mapping_end",
        "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_first_key",
    ],
    "invoke.vendor.yaml3.parser.Parser.process_directives": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_document_end": [
        "invoke.vendor.yaml3.events.DocumentEndEvent.__init__"
    ],
    "invoke.vendor.yaml3.parser.Parser.process_empty_scalar": [
        "invoke.vendor.yaml3.events.ScalarEvent.__init__"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_node": [
        "invoke.vendor.yaml3.error.MarkedYAMLError.__init__",
        "invoke.vendor.yaml3.events.NodeEvent.__init__",
        "invoke.vendor.yaml3.events.CollectionStartEvent.__init__",
        "invoke.vendor.yaml3.events.ScalarEvent.__init__",
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_node": [
        "invoke.vendor.yaml3.parser.Parser.parse_node"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_block_node_or_indentless_sequence": [
        "invoke.vendor.yaml3.parser.Parser.parse_node"
    ],
    "invoke.vendor.yaml3.parser.Parser.parse_flow_mapping_empty_value": [
        "invoke.vendor.yaml3.parser.Parser.process_empty_scalar"
    ],
    "invoke.vendor.yaml3.reader": [],
    "invoke.vendor.yaml3.reader.ReaderError.__init__": [],
    "invoke.vendor.yaml3.reader.ReaderError.__str__": [
        "<builtin>.isinstance",
        "<builtin>.ord",
    ],
    "<builtin>.ord": [],
    "invoke.vendor.yaml3.reader.Reader.check_printable": [
        "re.compile.search",
        "re.compile.search.group",
        "invoke.vendor.yaml3.reader.ReaderError.__init__",
        "<builtin>.len",
        "re.compile.search.start",
        "<builtin>.ord",
    ],
    "invoke.vendor.yaml3.reader.Reader.determine_encoding": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.reader.Reader.update_raw",
        "<builtin>.len",
        "invoke.vendor.yaml3.reader.Reader.update",
    ],
    "invoke.vendor.yaml3.reader.Reader.peek": [
        "invoke.vendor.yaml3.reader.Reader.update"
    ],
    "invoke.vendor.yaml3.reader.Reader.update": [
        "invoke.vendor.yaml3.reader.ReaderError.__init__",
        "invoke.vendor.yaml3.reader.Reader.update_raw",
        "<builtin>.len",
        "codecs.utf_16_le_decode",
        "codecs.utf_8_decode",
        "codecs.utf_16_be_decode",
        "invoke.vendor.yaml3.reader.Reader.check_printable",
    ],
    "invoke.vendor.yaml3.reader.Reader.prefix": [
        "<builtin>.len",
        "invoke.vendor.yaml3.reader.Reader.update",
    ],
    "invoke.vendor.yaml3.reader.Reader.forward": [
        "<builtin>.len",
        "invoke.vendor.yaml3.reader.Reader.update",
    ],
    "invoke.vendor.yaml3.reader.Reader.get_mark": [
        "invoke.vendor.yaml3.error.Mark.__init__"
    ],
    "invoke.vendor.yaml3.reader.Reader.update_raw": ["<builtin>.len"],
    "invoke.vendor.yaml3.reader.Reader": ["re.compile"],
    "re.compile.search": [],
    "re.compile.search.group": [],
    "re.compile.search.start": [],
    "codecs.utf_16_be_decode": [],
    "codecs.utf_16_le_decode": [],
    "codecs.utf_8_decode": [],
    "invoke.vendor.yaml3.tokens": [],
    "invoke.vendor.yaml3.tokens.Token.__repr__": ["<builtin>.getattr"],
    "invoke.vendor.yaml3.tokens.AliasToken.__init__": [],
    "invoke.vendor.yaml3.tokens.AnchorToken.__init__": [],
    "invoke.vendor.yaml3.dumper": [],
    "invoke.vendor.yaml3.dumper.BaseDumper.__init__": [
        "invoke.vendor.yaml3.resolver.BaseResolver.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.__init__",
        "invoke.vendor.yaml3.emitter.Emitter.__init__",
        "invoke.vendor.yaml3.serializer.Serializer.__init__",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.__init__": [],
    "invoke.vendor.yaml3.serializer.Serializer.__init__": [],
    "invoke.vendor.yaml3.representer": [
        "<builtin>.type",
        "invoke.vendor.yaml3.representer.BaseRepresenter.add_multi_representer",
        "invoke.vendor.yaml3.representer.BaseRepresenter.add_representer",
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.represent": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_data"
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.represent_data": [
        "<builtin>.type",
        "<builtin>.id",
        "invoke.vendor.yaml3.representer.BaseRepresenter.ignore_aliases",
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.ignore_aliases": [],
    "<builtin>.id": [],
    "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar": [
        "invoke.vendor.yaml3.nodes.ScalarNode.__init__"
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.represent_sequence": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.nodes.CollectionNode.__init__",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_data",
    ],
    "invoke.vendor.yaml3.representer.BaseRepresenter.represent_mapping": [
        "<builtin>.hasattr",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_data",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.nodes.CollectionNode.__init__",
        "<builtin>.sorted",
        "<builtin>.list",
    ],
    "<builtin>.sorted": [],
    "invoke.vendor.yaml3.representer.SafeRepresenter.ignore_aliases": [
        "<builtin>.isinstance"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_none": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_str": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_binary": [
        "base64.encodebytes.decode",
        "base64.encodestring.decode",
        "<builtin>.hasattr",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar",
        "base64.encodestring",
        "base64.encodebytes",
    ],
    "base64.encodebytes": [],
    "base64.encodebytes.decode": [],
    "base64.encodestring": [],
    "base64.encodestring.decode": [],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_bool": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_int": [
        "<builtin>.str",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar",
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter": ["<builtin>.repr"],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_float": [
        "<builtin>.repr",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar",
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_list": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_sequence"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_dict": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_mapping"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_set": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_mapping"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_date": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_datetime": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_yaml_object": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_mapping",
        "<builtin>.hasattr",
    ],
    "invoke.vendor.yaml3.representer.SafeRepresenter.represent_undefined": [],
    "invoke.vendor.yaml3.representer.Representer.represent_complex": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.Representer.represent_tuple": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_sequence"
    ],
    "invoke.vendor.yaml3.representer.Representer.represent_name": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.Representer.represent_module": [
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_scalar"
    ],
    "invoke.vendor.yaml3.representer.Representer.represent_object": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "<builtin>.dict",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_sequence",
        "<builtin>.type",
        "invoke.vendor.yaml3.representer.BaseRepresenter.represent_mapping",
        "<builtin>.list",
    ],
    "<builtin>.dict": [],
    "invoke.vendor.yaml3.serializer": [],
    "invoke.vendor.yaml3.serializer.Serializer.open": [
        "invoke.vendor.yaml3.events.StreamStartEvent.__init__"
    ],
    "invoke.vendor.yaml3.serializer.Serializer.close": [
        "invoke.vendor.yaml3.events.Event.__init__"
    ],
    "invoke.vendor.yaml3.serializer.Serializer.serialize": [
        "invoke.vendor.yaml3.events.DocumentEndEvent.__init__",
        "invoke.vendor.yaml3.serializer.Serializer.anchor_node",
        "invoke.vendor.yaml3.serializer.Serializer.serialize_node",
        "invoke.vendor.yaml3.events.DocumentStartEvent.__init__",
    ],
    "invoke.vendor.yaml3.serializer.Serializer.anchor_node": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.serializer.Serializer.generate_anchor",
        "invoke.vendor.yaml3.serializer.Serializer.anchor_node",
    ],
    "invoke.vendor.yaml3.serializer.Serializer.serialize_node": [
        "invoke.vendor.yaml3.events.CollectionStartEvent.__init__",
        "invoke.vendor.yaml3.serializer.Serializer.serialize_node",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.events.ScalarEvent.__init__",
        "invoke.vendor.yaml3.events.NodeEvent.__init__",
        "invoke.vendor.yaml3.events.Event.__init__",
    ],
    "invoke.vendor.yaml3.serializer.Serializer.generate_anchor": [],
    "invoke.vendor.yaml3.emitter": [],
    "invoke.vendor.yaml3.emitter.ScalarAnalysis.__init__": [],
    "invoke.vendor.yaml3.emitter.Emitter.dispose": [],
    "invoke.vendor.yaml3.emitter.Emitter.emit": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_stream_start",
        "invoke.vendor.yaml3.emitter.Emitter.expect_first_block_mapping_key",
        "invoke.vendor.yaml3.emitter.Emitter.expect_first_flow_sequence_item",
        "invoke.vendor.yaml3.emitter.Emitter.expect_document_root",
        "invoke.vendor.yaml3.emitter.Emitter.expect_first_flow_mapping_key",
        "invoke.vendor.yaml3.emitter.Emitter.expect_document_start",
        "invoke.vendor.yaml3.emitter.Emitter.expect_nothing",
        "invoke.vendor.yaml3.emitter.Emitter.expect_first_document_start",
        "invoke.vendor.yaml3.emitter.Emitter.expect_first_block_sequence_item",
        "invoke.vendor.yaml3.emitter.Emitter.need_more_events",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.need_more_events": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.need_events",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_stream_start": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.write_stream_start",
        "<builtin>.hasattr",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_first_block_mapping_key": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_block_mapping_key"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_first_flow_sequence_item": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_document_root": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_node"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_first_flow_mapping_key": [
        "invoke.vendor.yaml3.emitter.Emitter.check_simple_key",
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_document_start": [
        "invoke.vendor.yaml3.emitter.Emitter.prepare_version",
        "invoke.vendor.yaml3.emitter.Emitter.check_empty_document",
        "invoke.vendor.yaml3.emitter.Emitter.write_tag_directive",
        "invoke.vendor.yaml3.emitter.Emitter.prepare_tag_prefix",
        "invoke.vendor.yaml3.emitter.Emitter.write_version_directive",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "invoke.vendor.yaml3.emitter.Emitter.prepare_tag_handle",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "<builtin>.sorted",
        "invoke.vendor.yaml3.emitter.Emitter.write_stream_end",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_nothing": [],
    "invoke.vendor.yaml3.emitter.Emitter.expect_first_document_start": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_document_start"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_first_block_sequence_item": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_block_sequence_item"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.need_events": [
        "<builtin>.isinstance",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.increase_indent": [],
    "invoke.vendor.yaml3.emitter.Emitter.write_stream_start": [],
    "invoke.vendor.yaml3.emitter.Emitter.write_indicator": ["<builtin>.len"],
    "invoke.vendor.yaml3.emitter.Emitter.write_indent": [
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.prepare_version": [],
    "invoke.vendor.yaml3.emitter.Emitter.write_version_directive": [
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.prepare_tag_handle": [],
    "invoke.vendor.yaml3.emitter.Emitter.prepare_tag_prefix": [
        "<builtin>.ord",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_tag_directive": [
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.check_empty_document": [
        "<builtin>.isinstance"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_stream_end": [
        "invoke.vendor.yaml3.emitter.Emitter.flush_stream"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_document_end": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "invoke.vendor.yaml3.emitter.Emitter.flush_stream",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.flush_stream": ["<builtin>.hasattr"],
    "invoke.vendor.yaml3.emitter.Emitter.expect_node": [
        "invoke.vendor.yaml3.emitter.Emitter.process_tag",
        "invoke.vendor.yaml3.emitter.Emitter.expect_block_mapping",
        "invoke.vendor.yaml3.emitter.Emitter.expect_flow_sequence",
        "invoke.vendor.yaml3.emitter.Emitter.expect_flow_mapping",
        "invoke.vendor.yaml3.emitter.Emitter.expect_alias",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.process_anchor",
        "invoke.vendor.yaml3.emitter.Emitter.expect_block_sequence",
        "invoke.vendor.yaml3.emitter.Emitter.check_empty_sequence",
        "invoke.vendor.yaml3.emitter.Emitter.expect_scalar",
        "invoke.vendor.yaml3.emitter.Emitter.check_empty_mapping",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_alias": [
        "invoke.vendor.yaml3.emitter.Emitter.process_anchor"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.process_anchor": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "invoke.vendor.yaml3.emitter.Emitter.prepare_anchor",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.process_tag": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.prepare_tag",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "invoke.vendor.yaml3.emitter.Emitter.choose_scalar_style",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_scalar": [
        "invoke.vendor.yaml3.emitter.Emitter.process_scalar",
        "invoke.vendor.yaml3.emitter.Emitter.increase_indent",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.check_empty_sequence": [
        "<builtin>.isinstance"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_flow_sequence": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "invoke.vendor.yaml3.emitter.Emitter.increase_indent",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_block_sequence": [
        "invoke.vendor.yaml3.emitter.Emitter.increase_indent"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.check_empty_mapping": ["<builtin>.isinstance"],
    "invoke.vendor.yaml3.emitter.Emitter.expect_flow_mapping": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "invoke.vendor.yaml3.emitter.Emitter.increase_indent",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_block_mapping": [
        "invoke.vendor.yaml3.emitter.Emitter.increase_indent"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.process_scalar": [
        "invoke.vendor.yaml3.emitter.Emitter.write_single_quoted",
        "invoke.vendor.yaml3.emitter.Emitter.analyze_scalar",
        "invoke.vendor.yaml3.emitter.Emitter.write_folded",
        "invoke.vendor.yaml3.emitter.Emitter.write_double_quoted",
        "invoke.vendor.yaml3.emitter.Emitter.write_literal",
        "invoke.vendor.yaml3.emitter.Emitter.write_plain",
        "invoke.vendor.yaml3.emitter.Emitter.choose_scalar_style",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_flow_sequence_item": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.check_simple_key": [
        "<builtin>.len",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.prepare_tag",
        "invoke.vendor.yaml3.emitter.Emitter.analyze_scalar",
        "invoke.vendor.yaml3.emitter.Emitter.prepare_anchor",
        "invoke.vendor.yaml3.emitter.Emitter.check_empty_sequence",
        "invoke.vendor.yaml3.emitter.Emitter.check_empty_mapping",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_flow_mapping_key": [
        "invoke.vendor.yaml3.emitter.Emitter.check_simple_key",
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_flow_mapping_simple_value": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_flow_mapping_value": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_block_sequence_item": [
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_block_mapping_key": [
        "invoke.vendor.yaml3.emitter.Emitter.check_simple_key",
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.isinstance",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_block_mapping_simple_value": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.expect_block_mapping_value": [
        "invoke.vendor.yaml3.emitter.Emitter.expect_node",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.prepare_anchor": [],
    "invoke.vendor.yaml3.emitter.Emitter.prepare_tag": [
        "<builtin>.ord",
        "<builtin>.sorted",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.analyze_scalar": [
        "<builtin>.len",
        "invoke.vendor.yaml3.emitter.ScalarAnalysis.__init__",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.choose_scalar_style": [
        "invoke.vendor.yaml3.emitter.Emitter.analyze_scalar"
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_double_quoted": [
        "<builtin>.ord",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_single_quoted": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break",
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_folded": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.len",
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.determine_block_hints",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_literal": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indicator",
        "<builtin>.len",
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break",
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.determine_block_hints",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_plain": [
        "invoke.vendor.yaml3.emitter.Emitter.write_indent",
        "invoke.vendor.yaml3.emitter.Emitter.write_line_break",
        "<builtin>.len",
    ],
    "invoke.vendor.yaml3.emitter.Emitter.write_line_break": [],
    "invoke.vendor.yaml3.emitter.Emitter.determine_block_hints": [
        "<builtin>.str",
        "<builtin>.len",
    ],
    "invoke.vendor.six": [
        "invoke.vendor.six.exec_",
        "<builtin>.globals",
        "invoke.vendor.six._SixMetaPathImporter._add_module",
        "operator.attrgetter",
        "operator.itemgetter",
        "<builtin>.isinstance",
        "sys.meta_path.append",
        "invoke.vendor.six.MovedAttribute.__init__",
        "<builtin>.len",
        "operator.methodcaller",
        "<builtin>.enumerate",
        "<builtin>.setattr",
        "<builtin>.type",
        "<builtin>.getattr",
        "invoke.vendor.six.MovedModule.__init__",
        "struct.Struct",
        "types.ModuleType.__init__",
        "invoke.vendor.six._SixMetaPathImporter.__init__",
        "invoke.vendor.six._add_doc",
        "functools.partial",
        "sys.platform.startswith",
        "<builtin>.int",
        "invoke.vendor.six._LazyModule.__init__",
    ],
    "sys.platform.startswith": [],
    "invoke.vendor.six.X.__len__": [],
    "invoke.vendor.six._add_doc": [],
    "invoke.vendor.six._import_module": ["<builtin>.__import__"],
    "invoke.vendor.six._LazyDescr.__init__": [],
    "invoke.vendor.six._LazyDescr.__get__": [
        "invoke.vendor.six.MovedAttribute._resolve",
        "invoke.vendor.six.MovedModule._resolve",
        "<builtin>.delattr",
        "<builtin>.setattr",
    ],
    "invoke.vendor.six.MovedAttribute._resolve": [
        "<builtin>.getattr",
        "invoke.vendor.six._import_module",
    ],
    "invoke.vendor.six.MovedModule._resolve": ["invoke.vendor.six._import_module"],
    "<builtin>.delattr": [],
    "invoke.vendor.six.MovedModule.__init__": ["<builtin>.super"],
    "invoke.vendor.six.MovedModule.__getattr__": [
        "invoke.vendor.six.MovedModule._resolve",
        "<builtin>.getattr",
        "<builtin>.setattr",
    ],
    "invoke.vendor.six._LazyModule.__init__": ["<builtin>.super"],
    "invoke.vendor.six._LazyModule.__dir__": [],
    "invoke.vendor.six.MovedAttribute.__init__": ["<builtin>.super"],
    "invoke.vendor.six._SixMetaPathImporter.__init__": [],
    "invoke.vendor.six._SixMetaPathImporter._add_module": [],
    "invoke.vendor.six._SixMetaPathImporter._get_module": [],
    "invoke.vendor.six._SixMetaPathImporter.find_module": [],
    "invoke.vendor.six._SixMetaPathImporter.__get_module": ["<builtin>.ImportError"],
    "<builtin>.ImportError": [],
    "invoke.vendor.six._SixMetaPathImporter.load_module": [
        "<builtin>.isinstance",
        "invoke.vendor.six._SixMetaPathImporter.__get_module",
    ],
    "invoke.vendor.six._SixMetaPathImporter.is_package": [
        "<builtin>.hasattr",
        "invoke.vendor.six._SixMetaPathImporter.__get_module",
    ],
    "invoke.vendor.six._SixMetaPathImporter.get_code": [
        "invoke.vendor.six._SixMetaPathImporter.__get_module"
    ],
    "invoke.vendor.six.Module_six_moves_urllib": [
        "invoke.vendor.six._SixMetaPathImporter._get_module"
    ],
    "invoke.vendor.six.Module_six_moves_urllib.__dir__": [],
    "types.ModuleType.__init__": [],
    "invoke.vendor.six.add_move": ["<builtin>.setattr"],
    "invoke.vendor.six.remove_move": ["<builtin>.delattr", "<builtin>.AttributeError"],
    "invoke.vendor.six.advance_iterator": [],
    "invoke.vendor.six.callable": ["<builtin>.type", "<builtin>.any"],
    "<builtin>.any": [],
    "invoke.vendor.six.get_unbound_function": [],
    "invoke.vendor.six.create_unbound_method": ["types.MethodType"],
    "invoke.vendor.six.create_bound_method": ["types.MethodType"],
    "types.MethodType": [],
    "invoke.vendor.six.Iterator.next": ["<builtin>.type"],
    "operator.attrgetter": [],
    "invoke.vendor.six.iterkeys": ["<builtin>.iter"],
    "<builtin>.iter": [],
    "invoke.vendor.six.itervalues": ["<builtin>.iter"],
    "invoke.vendor.six.iteritems": ["<builtin>.iter"],
    "invoke.vendor.six.iterlists": ["<builtin>.iter"],
    "operator.methodcaller": [],
    "invoke.vendor.six.b": [],
    "invoke.vendor.six.u": [],
    "struct.Struct": [],
    "operator.itemgetter": [],
    "invoke.vendor.six.byte2int": ["<builtin>.ord"],
    "invoke.vendor.six.indexbytes": ["<builtin>.ord"],
    "functools.partial": [],
    "invoke.vendor.six.assertCountEqual": ["<builtin>.getattr"],
    "invoke.vendor.six.assertRaisesRegex": ["<builtin>.getattr"],
    "invoke.vendor.six.assertRegex": ["<builtin>.getattr"],
    "invoke.vendor.six.reraise": [],
    "invoke.vendor.six.exec_": ["<builtin>.exec", "sys._getframe"],
    "sys._getframe": [],
    "<builtin>.exec": [],
    "invoke.vendor.six.raise_from": ["invoke.exceptions.AuthFailure.__init__"],
    "invoke.exceptions.AuthFailure.__init__": [],
    "invoke.vendor.six.print_": [
        "invoke.vendor.six.print_",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.enumerate",
        "invoke.vendor.six.print_.write",
    ],
    "invoke.vendor.six.print_.write": [
        "<builtin>.isinstance",
        "<builtin>.str",
        "<builtin>.getattr",
    ],
    "<builtin>.TypeError": [],
    "<builtin>.enumerate": [],
    "invoke.vendor.six.wraps": [],
    "invoke.vendor.six.wraps.wrapper": ["functools.wraps"],
    "functools.wraps": [],
    "invoke.vendor.six.with_metaclass": [],
    "invoke.vendor.six.with_metaclass.metaclass.__new__": [],
    "invoke.vendor.six.add_metaclass": [],
    "invoke.vendor.six.add_metaclass.wrapper": ["<builtin>.isinstance"],
    "invoke.vendor.six.python_2_unicode_compatible": ["<builtin>.ValueError"],
    "invoke.vendor.six.python_2_unicode_compatible.<lambda1>": [],
    "sys.meta_path.append": [],
    "invoke": [],
    "invoke.run": ["invoke.context.Context.__init__", "invoke.context.Context.run"],
    "invoke.context.Context.__init__": [
        "invoke.config.Config.__init__",
        "<builtin>.list",
        "invoke.config.DataProxy._set",
    ],
    "invoke.context.Context.run": ["invoke.context.Context._run"],
    "invoke.sudo": ["invoke.context.Context.__init__", "invoke.context.Context.sudo"],
    "invoke.context.Context.sudo": ["invoke.context.Context._sudo"],
    "invoke.loader": [],
    "invoke.loader.Loader.__init__": ["Config"],
    "Config": [],
    "invoke.loader.Loader.find": [],
    "invoke.loader.Loader.load": [
        "sys.path.insert",
        "invoke.loader.Loader.find",
        "os.path.dirname",
        "imp.load_module",
    ],
    "os.path.dirname": [],
    "sys.path.insert": [],
    "imp.load_module": [],
    "invoke.loader.FilesystemLoader.__init__": ["<builtin>.super"],
    "invoke.loader.FilesystemLoader.start": ["os.getcwd"],
    "invoke.loader.FilesystemLoader.find": [
        "invoke.exceptions.CollectionNotFound.__init__",
        "imp.find_module",
        "os.path.abspath",
        "os.path.dirname",
    ],
    "os.path.abspath": [],
    "imp.find_module": [],
    "invoke.exceptions.CollectionNotFound.__init__": [],
    "invoke.program": [],
    "invoke.program.Program.core_args": ["invoke.parser.argument.Argument.__init__"],
    "invoke.parser.argument.Argument.__init__": [
        "<builtin>.tuple",
        "<builtin>.TypeError",
    ],
    "invoke.program.Program.task_args": ["invoke.parser.argument.Argument.__init__"],
    "invoke.program.Program.__init__": [],
    "invoke.program.Program.create_config": [],
    "invoke.program.Program.update_config": [
        "<builtin>.dict",
        "getpass.getpass",
        "os.environ.get",
    ],
    "getpass.getpass": [],
    "invoke.program.Program.run": [
        "invoke.program.Program.parse_tasks",
        "invoke.program.Program.execute",
        "invoke.program.Program.update_config",
        "<builtin>.isinstance",
        "sys.exit",
        "invoke.program.Program.parse_core",
        "invoke.program.Program.create_config",
        "invoke.program.Program.parse_collection",
        "<builtin>.print",
        "invoke.program.Program.parse_cleanup",
    ],
    "invoke.program.Program.parse_core": [
        "invoke.completion.complete.print_completion_script",
        "invoke.program.Program.parse_core_args",
        "invoke.program.Program.print_version",
        "invoke.util.enable_logging",
        "invoke.program.Program.normalize_argv",
        "invoke.exceptions.Exit.__init__",
    ],
    "invoke.program.Program.parse_collection": [
        "invoke.exceptions.Exit.__init__",
        "invoke.program.Program.print_help",
        "invoke.program.Program.load_collection",
    ],
    "invoke.program.Program.parse_tasks": [
        "invoke.program.Program._update_core_context",
        "Collection.from_module.to_contexts",
        "invoke.parser.parser.Parser.parse_argv",
        "invoke.parser.parser.Parser.__init__",
    ],
    "invoke.program.Program.parse_cleanup": [
        "invoke.completion.complete.complete",
        "invoke.program.Program.no_tasks_given",
        "<builtin>.isinstance",
        "invoke.program.Program.print_help",
        "invoke.exceptions.ParseError.__init__",
        "invoke.program.Program.list_tasks",
        "invoke.program.Program.print_task_help",
        "Collection.from_module.subcollection_from_path",
        "invoke.exceptions.Exit.__init__",
    ],
    "invoke.program.Program.execute": ["importlib.import_module", "<builtin>.getattr"],
    "<builtin>.print": [],
    "sys.exit": [],
    "invoke.program.Program.normalize_argv": ["<builtin>.isinstance", "sys.argv.split"],
    "invoke.program.Program.parse_core_args": [
        "invoke.parser.parser.Parser.parse_argv",
        "invoke.parser.parser.Parser.__init__",
    ],
    "invoke.program.Program.print_version": ["<builtin>.print"],
    "invoke.exceptions.Exit.__init__": [],
    "invoke.completion.complete.print_completion_script": [
        "os.path.dirname",
        "invoke.exceptions.ParseError.__init__",
        "os.path.splitext",
        "os.path.join",
        "<builtin>.open",
        "<builtin>.sorted",
        "os.path.basename",
        "<builtin>.print",
        "glob.glob",
        "os.path.realpath",
    ],
    "invoke.program.Program.print_help": [
        "<builtin>.print",
        "invoke.program.Program.list_tasks",
        "invoke.program.Program.print_columns",
    ],
    "invoke.program.Program.load_collection": [
        "invoke.exceptions.Exit.__init__",
        "Collection.from_module",
    ],
    "invoke.program.Program.print_task_help": [
        "inspect.getdoc",
        "invoke.program.Program.print_columns",
        "inspect.getdoc.splitlines.strip",
        "inspect.getdoc.splitlines",
        "<builtin>.print",
    ],
    "invoke.exceptions.ParseError.__init__": ["<builtin>.super"],
    "Collection.from_module.subcollection_from_path": [],
    "invoke.program.Program.list_tasks": [
        "invoke.exceptions.Exit.__init__",
        "<builtin>.getattr",
    ],
    "invoke.completion.complete.complete": [
        "shlex.split",
        "invoke.parser.parser.Parser.__init__",
        "re.sub",
        "<builtin>.filter",
        "Collection.from_module.to_contexts",
        "<builtin>.print",
        "invoke.exceptions.Exit.__init__",
        "invoke.completion.complete.print_task_names",
        "invoke.parser.parser.Parser.parse_argv",
    ],
    "invoke.program.Program.no_tasks_given": [
        "invoke.exceptions.Exit.__init__",
        "invoke.program.Program.print_help",
    ],
    "importlib.import_module": [],
    "sys.argv.split": [],
    "invoke.program.Program.name": [],
    "invoke.program.Program.called_as": ["os.path.basename"],
    "os.path.basename": [],
    "invoke.program.Program.binary": [],
    "invoke.program.Program.binary_names": [],
    "invoke.program.Program.args": [],
    "invoke.program.Program.initial_context": [
        "invoke.program.Program.core_args",
        "invoke.program.Program.task_args",
        "invoke.parser.context.ParserContext.__init__",
    ],
    "invoke.parser.context.ParserContext.__init__": [
        "lexicon.Lexicon",
        "invoke.vendor.lexicon.Lexicon.__init__",
        "invoke.parser.context.ParserContext.add_arg",
    ],
    "invoke.program.Program.print_columns": [
        "<builtin>.len",
        "<builtin>.max",
        "textwrap.TextWrapper.wrap",
        "<builtin>.print",
        "invoke.terminals.pty_size",
        "textwrap.TextWrapper",
    ],
    "invoke.parser.parser.Parser.__init__": [
        "lexicon.Lexicon",
        "invoke.vendor.lexicon.Lexicon.__init__",
        "invoke.vendor.lexicon.alias_dict.AliasDict.alias",
        "lexicon.Lexicon.alias",
        "<builtin>.ValueError",
    ],
    "invoke.parser.parser.Parser.parse_argv": [
        "shlex.split.index",
        "invoke.parser.parser.ParseMachine.handle",
        "<builtin>.len",
        "invoke.parser.parser.ParseMachine.__init__",
        "<builtin>.enumerate",
        "fluidity.StateMachine.finish",
        "invoke.parser.parser.is_long_flag",
        "invoke.parser.parser.is_flag",
        "<builtin>.reversed",
    ],
    "Collection.from_module": [],
    "invoke.program.Program._update_core_context": [],
    "Collection.from_module.to_contexts": [],
    "inspect.getdoc": [],
    "inspect.getdoc.splitlines": [],
    "inspect.getdoc.splitlines.strip": [],
    "invoke.program.Program.list_flat": [
        "invoke.program.Program.display_with_columns",
        "invoke.program.Program._make_pairs",
    ],
    "invoke.program.Program._make_pairs": [
        "<builtin>.len",
        "<builtin>.list",
        "invoke.program.Program._make_pairs",
        "<builtin>.getattr",
        "invoke.vendor.six.iteritems",
        "<builtin>.sorted",
        "invoke.util.helpline",
        "<builtin>.map",
        "six.iteritems",
    ],
    "invoke.program.Program.display_with_columns": [
        "<builtin>.print",
        "invoke.program.Program.task_list_opener",
        "invoke.program.Program.print_columns",
    ],
    "invoke.program.Program.list_nested": [
        "invoke.program.Program.display_with_columns",
        "invoke.program.Program._make_pairs",
    ],
    "<builtin>.map": [],
    "invoke.program.Program.list_json": [
        "Collection.from_module.serialized",
        "json.dumps",
        "<builtin>.print",
        "invoke.exceptions.Exit.__init__",
        "Collection.from_module.subcollection_from_path.serialized",
    ],
    "Collection.from_module.subcollection_from_path.serialized": [],
    "Collection.from_module.serialized": [],
    "json.dumps": [],
    "invoke.program.Program.task_list_opener": [],
    "textwrap.TextWrapper": [],
    "textwrap.TextWrapper.wrap": [],
    "invoke.completion": [],
    "invoke.completion.complete": [],
    "re.sub": [],
    "shlex.split": [],
    "invoke.completion.complete.complete.<lambda1>": [],
    "<builtin>.filter": [],
    "invoke.completion.complete.print_task_names": [
        "<builtin>.print",
        "<builtin>.sorted",
    ],
    "os.path.splitext": [],
    "os.path.realpath": [],
    "os.path.join": [],
    "glob.glob": [],
    "<builtin>.open": [],
    "invoke.exceptions": [],
    "invoke.exceptions.Failure.__init__": [],
    "invoke.exceptions.Failure.streams_for_display": ["invoke.runners.Result.tail"],
    "invoke.runners.Result.tail": ["<builtin>.getattr", "invoke.util.encode_output"],
    "invoke.exceptions.Failure.__repr__": ["invoke.exceptions.Failure._repr"],
    "invoke.exceptions.Failure._repr": [],
    "invoke.exceptions.UnexpectedExit.__str__": [
        "invoke.exceptions.Failure.streams_for_display"
    ],
    "invoke.exceptions.UnexpectedExit.__repr__": ["invoke.exceptions.Failure._repr"],
    "invoke.exceptions.CommandTimedOut.__init__": ["<builtin>.super"],
    "invoke.exceptions.CommandTimedOut.__repr__": ["invoke.exceptions.Failure._repr"],
    "invoke.exceptions.CommandTimedOut.__str__": [
        "invoke.exceptions.Failure.streams_for_display"
    ],
    "invoke.exceptions.AuthFailure.__str__": [],
    "invoke.exceptions.Exit.code": [],
    "invoke.exceptions._printable_kwargs": [
        "invoke.vendor.six.iteritems",
        "<builtin>.hasattr",
        "<builtin>.len",
        "six.iteritems",
    ],
    "invoke.exceptions.ThreadException": ["<builtin>.tuple"],
    "invoke.exceptions.ThreadException.__init__": ["<builtin>.tuple"],
    "invoke.exceptions.ThreadException.__str__": [
        "invoke.exceptions._printable_kwargs",
        "pprint.pformat",
        "traceback.format_exception",
        "<builtin>.len",
    ],
    "pprint.pformat": [],
    "traceback.format_exception": [],
    "invoke.parser": [],
    "invoke.parser.parser": [],
    "invoke.parser.parser.is_flag": [],
    "invoke.parser.parser.is_long_flag": [],
    "lexicon.Lexicon": [],
    "lexicon.Lexicon.alias": [],
    "invoke.parser.parser.ParseMachine.__init__": [
        "invoke.parser.parser.ParseResult.__init__",
        "copy.deepcopy",
        "<builtin>.super",
    ],
    "shlex.split.index": [],
    "<builtin>.reversed": [],
    "invoke.parser.parser.ParseMachine.handle": [
        "invoke.parser.parser.ParseMachine.switch_to_flag",
        "fluidity.StateMachine.see_context",
        "invoke.parser.parser.ParseMachine.see_value",
        "invoke.parser.parser.ParseMachine.see_positional_arg",
        "invoke.parser.parser.ParseMachine.error",
        "fluidity.StateMachine.see_unknown",
    ],
    "fluidity.StateMachine.finish": [],
    "invoke.parser.parser.ParseMachine": [
        "invoke.vendor.fluidity.machine.state",
        "fluidity.transition",
        "invoke.vendor.fluidity.machine.transition",
        "fluidity.state",
    ],
    "invoke.vendor.fluidity.machine.state": [],
    "fluidity.state": [],
    "fluidity.transition": [],
    "invoke.vendor.fluidity.machine.transition": [],
    "invoke.parser.parser.ParseMachine.changing_state": [],
    "copy.deepcopy": [],
    "invoke.parser.parser.ParseResult.__init__": ["<builtin>.super"],
    "invoke.parser.parser.ParseMachine.waiting_for_flag_value": [],
    "fluidity.StateMachine.see_unknown": [],
    "invoke.parser.parser.ParseMachine.switch_to_flag": [
        "invoke.parser.parser.ParseMachine.complete_flag",
        "invoke.parser.parser.ParseMachine.check_ambiguity",
    ],
    "invoke.parser.parser.ParseMachine.see_value": [
        "invoke.parser.parser.ParseMachine.error",
        "invoke.parser.parser.ParseMachine.check_ambiguity",
    ],
    "invoke.parser.parser.ParseMachine.see_positional_arg": [],
    "fluidity.StateMachine.see_context": [],
    "invoke.parser.parser.ParseMachine.error": [
        "invoke.exceptions.ParseError.__init__"
    ],
    "invoke.parser.parser.ParseMachine.store_only": [],
    "invoke.parser.parser.ParseMachine.complete_context": [
        "invoke.parser.parser.ParseMachine.error"
    ],
    "invoke.parser.parser.ParseMachine.switch_to_context": ["copy.deepcopy"],
    "invoke.parser.parser.ParseMachine.complete_flag": [
        "invoke.parser.parser.ParseMachine.error"
    ],
    "invoke.parser.parser.ParseMachine.check_ambiguity": [
        "invoke.exceptions.ParseError.__init__",
        "<builtin>.any",
    ],
    "invoke.vendor.fluidity": [],
    "invoke.vendor.fluidity.machine": [],
    "invoke.vendor.fluidity.machine.MetaStateMachine.__new__": ["<builtin>.super"],
    "invoke.vendor.fluidity.machine.StateMachine.__init__": [
        "invoke.vendor.fluidity.machine.StateMachine._inject_into_parts",
        "invoke.vendor.fluidity.machine.StateMachine._bring_definitions_to_object_level",
        "invoke.vendor.fluidity.machine.StateMachine._create_state_getters",
        "invoke.vendor.fluidity.machine.StateMachine._state_by_name",
        "invoke.vendor.fluidity.backwardscompat.callable",
        "invoke.vendor.fluidity.machine.StateMachine._validate_machine_definitions",
    ],
    "invoke.vendor.fluidity.machine.StateMachine._bring_definitions_to_object_level": [],
    "invoke.vendor.fluidity.machine.StateMachine._inject_into_parts": [],
    "invoke.vendor.fluidity.machine.StateMachine._validate_machine_definitions": [
        "<builtin>.getattr",
        "<builtin>.len",
    ],
    "invoke.vendor.fluidity.backwardscompat.callable": ["<builtin>.hasattr"],
    "invoke.vendor.fluidity.machine.StateMachine._state_by_name": [
        "invoke.vendor.fluidity.machine.StateMachine._state_objects"
    ],
    "invoke.vendor.fluidity.machine.StateMachine._create_state_getters": [
        "invoke.vendor.fluidity.machine.StateMachine._state_objects",
        "<builtin>.setattr",
    ],
    "invoke.vendor.fluidity.machine.StateMachine.__new__": ["<builtin>.super"],
    "invoke.vendor.fluidity.machine.StateMachine._add_class_state": [
        "invoke.vendor.fluidity.machine._State.__init__"
    ],
    "invoke.vendor.fluidity.machine._State.__init__": [],
    "invoke.vendor.fluidity.machine.StateMachine.add_state": [
        "invoke.vendor.fluidity.machine._State.getter_method",
        "invoke.vendor.fluidity.machine._State.__init__",
        "<builtin>.setattr",
        "invoke.vendor.fluidity.machine._State.getter_name",
    ],
    "invoke.vendor.fluidity.machine._State.getter_name": [],
    "invoke.vendor.fluidity.machine._State.getter_method": [],
    "invoke.vendor.fluidity.machine.StateMachine._current_state_name": [],
    "<builtin>.property": [],
    "invoke.vendor.fluidity.machine.StateMachine": ["<builtin>.property"],
    "invoke.vendor.fluidity.machine.StateMachine.changing_state": [],
    "invoke.vendor.fluidity.machine.StateMachine._new_state": [
        "invoke.vendor.fluidity.machine.StateMachine.changing_state",
        "invoke.parser.parser.ParseMachine.changing_state",
    ],
    "invoke.vendor.fluidity.machine.StateMachine._state_objects": ["<builtin>.list"],
    "invoke.vendor.fluidity.machine.StateMachine.states": [
        "invoke.vendor.fluidity.machine.StateMachine._state_objects"
    ],
    "invoke.vendor.fluidity.machine.StateMachine._add_class_transition": [
        "invoke.vendor.fluidity.machine._Transition.event_method",
        "invoke.vendor.fluidity.machine._listize",
        "invoke.vendor.fluidity.machine._Transition.__init__",
        "<builtin>.setattr",
    ],
    "invoke.vendor.fluidity.machine._listize": ["<builtin>.type"],
    "invoke.vendor.fluidity.machine._Transition.__init__": [
        "invoke.vendor.fluidity.machine._Guard.__init__"
    ],
    "invoke.vendor.fluidity.machine._Transition.event_method": [],
    "invoke.vendor.fluidity.machine.StateMachine.add_transition": [
        "invoke.vendor.fluidity.machine._listize",
        "invoke.vendor.fluidity.machine.StateMachine._state_by_name",
        "<builtin>.setattr",
        "invoke.vendor.fluidity.machine._Transition.event_method",
        "invoke.vendor.fluidity.machine._Transition.__init__",
    ],
    "invoke.vendor.fluidity.machine.StateMachine._process_transitions": [
        "invoke.vendor.fluidity.machine.StateMachine._check_guards",
        "invoke.vendor.fluidity.machine.StateMachine._transitions_by_name",
        "invoke.vendor.fluidity.machine.StateMachine._ensure_from_validity",
    ],
    "invoke.vendor.fluidity.machine.StateMachine._transitions_by_name": [
        "<builtin>.list",
        "<builtin>.filter",
    ],
    "invoke.vendor.fluidity.machine.StateMachine._ensure_from_validity": [
        "<builtin>.list",
        "<builtin>.len",
        "<builtin>.filter",
    ],
    "invoke.vendor.fluidity.machine.StateMachine._check_guards": ["<builtin>.len"],
    "invoke.vendor.fluidity.machine.StateMachine._transitions_by_name.<lambda1>": [],
    "invoke.vendor.fluidity.machine.StateMachine._ensure_from_validity.<lambda1>": [],
    "invoke.vendor.fluidity.machine._Guard.__init__": [],
    "invoke.vendor.fluidity.machine._Transition.event_method.generated_event": [],
    "invoke.vendor.fluidity.machine._Transition.is_valid_from": [
        "invoke.vendor.fluidity.machine._listize"
    ],
    "invoke.vendor.fluidity.machine._Transition.check_guard": [
        "invoke.vendor.fluidity.machine._Guard.check"
    ],
    "invoke.vendor.fluidity.machine._Guard.check": [
        "invoke.vendor.fluidity.machine._listize",
        "invoke.vendor.fluidity.machine._Guard._evaluate",
    ],
    "invoke.vendor.fluidity.machine._Transition.run": [
        "invoke.vendor.fluidity.machine._ActionRunner.run",
        "invoke.vendor.fluidity.machine._ActionRunner.__init__",
    ],
    "invoke.vendor.fluidity.machine._ActionRunner.__init__": [],
    "invoke.vendor.fluidity.machine._ActionRunner.run": [
        "invoke.vendor.fluidity.machine._ActionRunner._run_action",
        "invoke.vendor.fluidity.machine._listize",
    ],
    "invoke.vendor.fluidity.machine._Guard._evaluate": [
        "invoke.vendor.fluidity.backwardscompat.callable",
        "<builtin>.getattr",
    ],
    "invoke.vendor.fluidity.machine._State.getter_method.state_getter": [],
    "invoke.vendor.fluidity.machine._State.run_enter": [
        "invoke.vendor.fluidity.machine._ActionRunner.run",
        "invoke.vendor.fluidity.machine._ActionRunner.__init__",
    ],
    "invoke.vendor.fluidity.machine._State.run_exit": [
        "invoke.vendor.fluidity.machine._ActionRunner.run",
        "invoke.vendor.fluidity.machine._ActionRunner.__init__",
    ],
    "invoke.vendor.fluidity.machine._ActionRunner._run_action": [
        "<builtin>.getattr",
        "invoke.vendor.fluidity.backwardscompat.callable",
        "invoke.vendor.fluidity.machine._ActionRunner._try_to_run_with_args",
    ],
    "invoke.vendor.fluidity.machine._ActionRunner._try_to_run_with_args": [],
    "invoke.vendor.fluidity.backwardscompat": [],
    "invoke.parser.context": [],
    "invoke.parser.context.translate_underscores": [],
    "invoke.parser.context.to_flag": [
        "invoke.parser.context.translate_underscores",
        "<builtin>.len",
    ],
    "invoke.parser.context.sort_candidate": ["<builtin>.sorted", "<builtin>.len"],
    "invoke.parser.context.flag_key": [
        "invoke.parser.context.sort_candidate",
        "<builtin>.len",
    ],
    "invoke.parser.context.ParserContext.add_arg": [
        "invoke.vendor.lexicon.alias_dict.AliasDict.alias",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "lexicon.Lexicon.alias",
        "invoke.parser.argument.Argument.__init__",
        "invoke.parser.context.to_flag",
    ],
    "invoke.parser.context.ParserContext.__repr__": [],
    "invoke.parser.context.ParserContext.missing_positional_args": [],
    "invoke.parser.context.ParserContext.as_kwargs": ["lexicon.Lexicon.values"],
    "lexicon.Lexicon.values": [],
    "invoke.parser.context.ParserContext.names_for": [
        "lexicon.Lexicon.aliases_of",
        "invoke.vendor.lexicon.alias_dict.AliasDict.aliases_of",
        "<builtin>.set",
        "<builtin>.list",
    ],
    "lexicon.Lexicon.aliases_of": [],
    "invoke.parser.context.ParserContext.help_for": [
        "<builtin>.len",
        "<builtin>.ValueError",
        "lexicon.Lexicon.keys",
        "<builtin>.sorted",
        "invoke.parser.context.ParserContext.names_for",
    ],
    "lexicon.Lexicon.keys": [],
    "invoke.parser.context.ParserContext.help_tuples": [
        "<builtin>.map",
        "<builtin>.sorted",
        "<builtin>.list",
        "lexicon.Lexicon.values",
    ],
    "invoke.parser.context.ParserContext.help_tuples.<lambda1>": [
        "invoke.parser.context.to_flag",
        "invoke.parser.context.ParserContext.help_for",
    ],
    "invoke.parser.context.ParserContext.flag_names": [
        "<builtin>.tuple",
        "itertools.chain.from_iterable",
        "<builtin>.sorted",
        "lexicon.Lexicon.values",
        "invoke.parser.context.to_flag",
        "invoke.parser.context.ParserContext.names_for",
    ],
    "itertools.chain.from_iterable": [],
    "invoke.parser.argument": [],
    "invoke.parser.argument.Argument.__repr__": [],
    "invoke.parser.argument.Argument.name": [],
    "invoke.parser.argument.Argument.nicknames": [],
    "invoke.parser.argument.Argument.takes_value": [],
    "invoke.parser.argument.Argument.value": [
        "invoke.parser.argument.Argument.set_value"
    ],
    "invoke.parser.argument.Argument.set_value": [
        "invoke.parser.argument.Argument.set_value.<lambda1>",
        "invoke.parser.argument.Argument.set_value.<lambda3>",
        "invoke.parser.argument.Argument.set_value.<lambda2>",
    ],
    "invoke.parser.argument.Argument.set_value.<lambda1>": [],
    "invoke.parser.argument.Argument.set_value.<lambda2>": [],
    "invoke.parser.argument.Argument.set_value.<lambda3>": [],
    "invoke.parser.argument.Argument.got_value": ["<builtin>.bool"],
    "invoke.executor": [],
    "invoke.executor.Executor.__init__": ["invoke.config.Config.__init__"],
    "invoke.config.Config.__init__": [
        "invoke.config.Config.merge",
        "invoke.config.Config.load_base_conf_files",
        "invoke.config.Config.set_project_location",
        "invoke.config.Config.set_runtime_path",
        "invoke.config.Config.global_defaults",
        "invoke.config.DataProxy._set",
        "invoke.config.copy_dict",
    ],
    "invoke.executor.Executor.execute": [
        "invoke.executor.Executor.normalize",
        "invoke.executor.Executor.expand_calls",
        "invoke.executor.Executor.dedupe",
        "<builtin>.print",
        "<builtin>.list",
    ],
    "invoke.executor.Executor.normalize": [
        "<builtin>.isinstance",
        "invoke.tasks.Call.__init__",
    ],
    "invoke.executor.Executor.expand_calls": [
        "<builtin>.isinstance",
        "invoke.executor.Executor.expand_calls",
        "invoke.tasks.Call.__init__",
    ],
    "invoke.executor.Executor.dedupe": [],
    "invoke.tasks.Call.__init__": ["<builtin>.tuple", "<builtin>.dict"],
    "invoke._version": ["<builtin>.map"],
    "invoke.collection": [],
    "invoke.collection.Collection.__init__": [
        "lexicon.Lexicon",
        "invoke.vendor.lexicon.Lexicon.__init__",
        "<builtin>.isinstance",
        "invoke.collection.Collection.transform",
        "invoke.collection.Collection._add_object",
        "six.iteritems",
        "invoke.vendor.six.iteritems",
        "<builtin>.list",
    ],
    "invoke.collection.Collection.transform": ["<builtin>.enumerate", "<builtin>.len"],
    "invoke.collection.Collection._add_object": [
        "invoke.collection.Collection.add_task",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.type",
        "invoke.collection.Collection.add_collection",
    ],
    "invoke.collection.Collection.add_collection": [
        "<builtin>.isinstance",
        "invoke.collection.Collection.from_module",
        "invoke.collection.Collection.transform",
        "<builtin>.ValueError",
    ],
    "invoke.collection.Collection.add_task": [
        "invoke.vendor.lexicon.alias_dict.AliasDict.alias",
        "<builtin>.hasattr",
        "<builtin>.ValueError",
        "invoke.collection.Collection.transform",
        "lexicon.Lexicon.alias",
        "<builtin>.list",
    ],
    "invoke.collection.Collection.__repr__": [
        "<builtin>.sorted",
        "<builtin>.list",
        "lexicon.Lexicon.keys",
    ],
    "invoke.collection.Collection.__eq__": [],
    "invoke.collection.Collection.__ne__": [],
    "invoke.collection.Collection.__nonzero__": [
        "invoke.collection.Collection.__bool__"
    ],
    "invoke.collection.Collection.__bool__": ["<builtin>.bool"],
    "invoke.collection.Collection.from_module": [
        "invoke.collection.Collection.from_module.instantiate",
        "<builtin>.filter",
        "<builtin>.isinstance",
        "<builtin>.vars",
        "invoke.config.merge_dicts",
        "<builtin>.getattr",
        "invoke.config.copy_dict",
    ],
    "invoke.collection.Collection.from_module.instantiate": [
        "invoke.collection.Collection.__init__",
        "<builtin>.dict",
    ],
    "invoke.config.copy_dict": ["invoke.config.merge_dicts"],
    "invoke.config.merge_dicts": [
        "invoke.config._merge_error",
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "invoke.config.merge_dicts",
        "copy.copy",
        "invoke.config.copy_dict",
    ],
    "invoke.collection.Collection.from_module.<lambda1>": ["<builtin>.isinstance"],
    "<builtin>.vars": [],
    "invoke.collection.Collection._split_path": [],
    "invoke.collection.Collection.subcollection_from_path": [],
    "invoke.collection.Collection.__getitem__": [
        "invoke.collection.Collection.task_with_config"
    ],
    "invoke.collection.Collection.task_with_config": [
        "<builtin>.ValueError",
        "invoke.collection.Collection.transform",
        "invoke.collection.Collection._task_with_merged_config",
        "invoke.collection.Collection.configuration",
        "invoke.collection.Collection._split_path",
    ],
    "invoke.collection.Collection._task_with_merged_config": ["<builtin>.dict"],
    "invoke.collection.Collection.configuration": [
        "invoke.collection.Collection.task_with_config",
        "invoke.config.copy_dict",
    ],
    "invoke.collection.Collection.__contains__": [],
    "invoke.collection.Collection.to_contexts": [
        "invoke.vendor.six.iteritems",
        "six.iteritems",
        "invoke.parser.context.ParserContext.__init__",
    ],
    "invoke.collection.Collection.subtask_name": [],
    "invoke.collection.Collection._transform_lexicon": [
        "lexicon.Lexicon",
        "invoke.vendor.lexicon.Lexicon.__init__",
        "invoke.vendor.lexicon.alias_dict.AliasDict.alias",
        "lexicon.Lexicon.alias",
        "invoke.collection.Collection.transform",
        "invoke.vendor.six.iteritems",
        "copy.deepcopy",
        "six.iteritems",
    ],
    "invoke.collection.Collection.task_names": [
        "<builtin>.list",
        "invoke.vendor.six.iteritems",
        "invoke.collection.Collection.subtask_name",
        "<builtin>.map",
        "six.iteritems",
    ],
    "invoke.collection.Collection.task_names.<lambda1>": [
        "invoke.collection.Collection.subtask_name"
    ],
    "invoke.collection.Collection.configure": ["invoke.config.merge_dicts"],
    "invoke.collection.Collection.serialized": [
        "invoke.collection.Collection.transform",
        "<builtin>.sorted",
        "invoke.util.helpline",
        "lexicon.Lexicon.values",
    ],
    "invoke.collection.Collection.serialized.<dict1>.<lambda1>": [],
    "invoke.collection.Collection.serialized.<dict1>.<lambda2>": [],
    "invoke.tasks": ["<builtin>.object"],
    "<builtin>.object": [],
    "invoke.tasks.Task.__init__": [
        "invoke.tasks.Task.fill_implicit_positionals",
        "<builtin>.getattr",
    ],
    "invoke.tasks.Task.fill_implicit_positionals": ["invoke.tasks.Task.argspec"],
    "invoke.tasks.Task.name": [],
    "invoke.tasks.Task.__repr__": [],
    "invoke.tasks.Task.__eq__": ["six.get_function_code"],
    "six.get_function_code": [],
    "invoke.tasks.Task.__hash__": ["<builtin>.hash"],
    "<builtin>.hash": [],
    "invoke.tasks.Task.__call__": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.type",
    ],
    "invoke.tasks.Task.called": [],
    "invoke.tasks.Task.argspec": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "inspect.getargspec",
        "itertools.izip_longest",
        "<builtin>.dict",
        "itertools.zip_longest",
        "<builtin>.reversed",
    ],
    "inspect.getargspec": [],
    "itertools.zip_longest": [],
    "itertools.izip_longest": [],
    "invoke.tasks.Task.arg_opts": [
        "<builtin>.type",
        "invoke.parser.context.translate_underscores",
    ],
    "invoke.tasks.Task.get_arguments": [
        "invoke.tasks.Task.arg_opts",
        "invoke.tasks.Task.argspec",
        "<builtin>.enumerate",
        "<builtin>.set",
        "<builtin>.reversed",
        "invoke.parser.argument.Argument.__init__",
    ],
    "invoke.tasks.task": [
        "<builtin>.callable",
        "<builtin>.TypeError",
        "<builtin>.len",
        "<builtin>.isinstance",
        "<builtin>.tuple",
    ],
    "invoke.tasks.task.inner": [],
    "invoke.tasks.Call.__getattr__": ["<builtin>.getattr"],
    "invoke.tasks.Call.__deepcopy__": ["invoke.tasks.Call.clone"],
    "invoke.tasks.Call.clone": ["invoke.tasks.Call.clone_data"],
    "invoke.tasks.Call.__repr__": [],
    "invoke.tasks.Call.__eq__": ["<builtin>.getattr"],
    "invoke.tasks.Call.make_context": ["invoke.context.Context.__init__"],
    "invoke.tasks.Call.clone_data": ["copy.deepcopy", "<builtin>.dict"],
    "invoke.tasks.call": ["invoke.tasks.Call.__init__"],
    "invoke.context": [],
    "invoke.config.DataProxy._set": ["invoke.vendor.six.iteritems", "six.iteritems"],
    "invoke.context.Context.config": ["invoke.config.DataProxy._set"],
    "invoke.context.Context._run": ["invoke.context.Context._prefix_commands"],
    "invoke.context.Context._prefix_commands": ["<builtin>.list"],
    "invoke.context.Context._sudo": [
        "six.raise_from",
        "invoke.watchers.FailingResponder.__init__",
        "invoke.vendor.six.raise_from",
        "<builtin>.isinstance",
        "invoke.context.Context._prefix_commands",
        "invoke.exceptions.AuthFailure.__init__",
        "re.escape",
        "<builtin>.list",
    ],
    "re.escape": [],
    "invoke.watchers.FailingResponder.__init__": ["<builtin>.super"],
    "six.raise_from": [],
    "invoke.context.Context": ["contextlib.contextmanager"],
    "invoke.context.Context.prefix": [],
    "invoke.context.Context.cwd": [
        "<builtin>.list",
        "<builtin>.reversed",
        "os.path.join",
        "<builtin>.enumerate",
    ],
    "invoke.context.Context.cd": [],
    "invoke.context.MockContext.__init__": [
        "<builtin>.hasattr",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.super",
        "invoke.config.DataProxy._set",
        "<builtin>.type",
        "invoke.vendor.six.iteritems",
        "six.iteritems",
    ],
    "invoke.context.MockContext._yield_result": [
        "six.raise_from",
        "<builtin>.hasattr",
        "invoke.vendor.six.raise_from",
        "<builtin>.isinstance",
        "<builtin>.delattr",
        "<builtin>.getattr",
    ],
    "invoke.context.MockContext.run": ["invoke.context.MockContext._yield_result"],
    "invoke.context.MockContext.sudo": ["invoke.context.MockContext._yield_result"],
    "invoke.context.MockContext.set_result_for": [
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "<builtin>.TypeError",
    ],
    "invoke.watchers": [],
    "invoke.watchers.StreamWatcher.submit": [],
    "invoke.watchers.Responder.__init__": [],
    "invoke.watchers.Responder.pattern_matches": [
        "re.findall",
        "<builtin>.getattr",
        "<builtin>.len",
        "<builtin>.setattr",
    ],
    "re.findall": [],
    "invoke.watchers.Responder.submit": ["invoke.watchers.Responder.pattern_matches"],
    "invoke.watchers.FailingResponder.submit": [
        "invoke.watchers.Responder.pattern_matches",
        "<builtin>.super",
    ],
    "invoke.config": [],
    "invoke.config.load_source": [
        "imp.load_source",
        "importlib._bootstrap._SourceFileLoader",
        "os.path.exists",
        "importlib._bootstrap._SourceFileLoader.load_module",
        "<builtin>.vars",
        "importlib.machinery.SourceFileLoader",
        "importlib.machinery.SourceFileLoader.load_module",
    ],
    "os.path.exists": [],
    "importlib.machinery.SourceFileLoader": [],
    "importlib._bootstrap._SourceFileLoader": [],
    "importlib.machinery.SourceFileLoader.load_module": [],
    "importlib._bootstrap._SourceFileLoader.load_module": [],
    "imp.load_source": [],
    "invoke.config.DataProxy": ["<builtin>.tuple"],
    "invoke.config.DataProxy.from_data": [],
    "invoke.config.DataProxy.__getattr__": [
        "invoke.config.DataProxy._get",
        "<builtin>.getattr",
        "<builtin>.AttributeError",
        "<builtin>.sorted",
        "<builtin>.dir",
        "<builtin>.list",
    ],
    "invoke.config.DataProxy._get": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "<builtin>.AttributeError",
        "invoke.config.DataProxy.from_data",
    ],
    "<builtin>.dir": [],
    "invoke.config.DataProxy.__setattr__": ["<builtin>.dir", "<builtin>.super"],
    "invoke.config.DataProxy.__iter__": ["<builtin>.iter"],
    "invoke.config.DataProxy.__eq__": ["<builtin>.isinstance", "<builtin>.getattr"],
    "invoke.config.DataProxy.__len__": ["<builtin>.len"],
    "invoke.config.DataProxy.__setitem__": [
        "invoke.config.DataProxy._track_modification_of"
    ],
    "invoke.config.DataProxy._track_modification_of": [
        "<builtin>.tuple",
        "<builtin>.getattr",
        "invoke.config.Config._modify",
    ],
    "invoke.config.DataProxy.__getitem__": ["invoke.config.DataProxy._get"],
    "invoke.config.DataProxy.__repr__": [],
    "invoke.config.DataProxy.__contains__": [],
    "invoke.config.DataProxy._is_leaf": ["<builtin>.hasattr"],
    "invoke.config.DataProxy._is_root": ["<builtin>.hasattr"],
    "invoke.config.DataProxy._track_removal_of": [
        "<builtin>.tuple",
        "<builtin>.getattr",
        "invoke.config.Config._remove",
    ],
    "invoke.config.Config._remove": ["invoke.config.Config.merge", "<builtin>.list"],
    "invoke.config.Config._modify": [
        "invoke.config.excise",
        "invoke.config.Config.merge",
        "<builtin>.list",
    ],
    "invoke.config.DataProxy.__delitem__": [
        "invoke.config.DataProxy._track_removal_of"
    ],
    "invoke.config.DataProxy.__delattr__": [],
    "invoke.config.DataProxy.clear": ["<builtin>.list"],
    "invoke.config.DataProxy.pop": ["invoke.config.DataProxy._track_removal_of"],
    "invoke.config.DataProxy.popitem": ["invoke.config.DataProxy._track_removal_of"],
    "invoke.config.DataProxy.setdefault": [
        "invoke.config.DataProxy._track_modification_of"
    ],
    "invoke.config.DataProxy.update": [
        "<builtin>.isinstance",
        "invoke.vendor.six.iteritems",
        "six.iteritems",
    ],
    "invoke.config.Config.global_defaults": ["os.environ.get"],
    "invoke.config.Config.set_project_location": [
        "os.path.join",
        "invoke.config.DataProxy._set",
    ],
    "invoke.config.Config.set_runtime_path": ["invoke.config.DataProxy._set"],
    "invoke.config.Config.load_base_conf_files": [
        "invoke.config.Config.load_user",
        "invoke.config.Config.load_system",
    ],
    "invoke.config.Config.merge": [
        "invoke.config.Config._merge_file",
        "invoke.config.obliterate",
        "invoke.config.merge_dicts",
        "invoke.config.DataProxy._set",
    ],
    "invoke.config.Config.load_system": ["invoke.config.Config._load_file"],
    "invoke.config.Config.load_user": ["invoke.config.Config._load_file"],
    "invoke.config.Config.load_defaults": [
        "invoke.config.Config.merge",
        "invoke.config.DataProxy._set",
    ],
    "invoke.config.Config.load_overrides": [
        "invoke.config.Config.merge",
        "invoke.config.DataProxy._set",
    ],
    "invoke.config.Config._load_file": [
        "invoke.config.Config.merge",
        "os.path.splitext",
        "invoke.config.DataProxy._set",
        "<builtin>.getattr",
        "os.path.expanduser",
    ],
    "invoke.config.Config.load_project": ["invoke.config.Config._load_file"],
    "invoke.config.Config.load_runtime": ["invoke.config.Config._load_file"],
    "invoke.config.Config.load_shell_env": [
        "invoke.config.Config.merge",
        "invoke.env.Environment.load",
        "invoke.config.DataProxy._set",
        "invoke.env.Environment.__init__",
    ],
    "invoke.env.Environment.__init__": [],
    "invoke.env.Environment.load": [
        "invoke.env.Environment._crawl",
        "invoke.vendor.six.iteritems",
        "invoke.env.Environment._path_set",
        "six.iteritems",
    ],
    "invoke.config.Config.load_collection": [
        "invoke.config.Config.merge",
        "invoke.config.DataProxy._set",
    ],
    "os.path.expanduser": [],
    "invoke.config.Config._load_yaml": [
        "yaml.load",
        "invoke.vendor.yaml3.load",
        "<builtin>.open",
    ],
    "yaml.load": [],
    "invoke.config.Config._load_yml": ["invoke.config.Config._load_yaml"],
    "invoke.config.Config._load_json": ["<builtin>.open", "json.load"],
    "json.load": [],
    "invoke.config.Config._load_py": [
        "<builtin>.isinstance",
        "invoke.vendor.six.iteritems",
        "invoke.config.load_source",
        "six.iteritems",
    ],
    "invoke.config.Config._merge_file": [
        "<builtin>.getattr",
        "invoke.config.merge_dicts",
    ],
    "invoke.config.obliterate": [
        "<builtin>.isinstance",
        "invoke.config.obliterate",
        "invoke.vendor.six.iteritems",
        "six.iteritems",
    ],
    "invoke.config.Config.clone": [
        "invoke.config.Config._clone_init_kwargs",
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "invoke.config.merge_dicts",
        "<builtin>.issubclass",
        "<builtin>.getattr",
        "copy.copy",
    ],
    "<builtin>.issubclass": [],
    "invoke.config.Config._clone_init_kwargs": [
        "<builtin>.dict",
        "invoke.config.merge_dicts",
        "invoke.config.copy_dict",
    ],
    "copy.copy": [],
    "invoke.config.excise": ["<builtin>.list"],
    "invoke.config._merge_error": ["invoke.config._format_mismatch"],
    "invoke.config._format_mismatch": ["<builtin>.type"],
    "invoke.env": [],
    "invoke.env.Environment._crawl": [
        "<builtin>.callable",
        "<builtin>.hasattr",
        "invoke.env.Environment._path_get",
        "<builtin>.dict",
        "invoke.env.Environment._to_env_var",
        "invoke.env.Environment._crawl",
    ],
    "invoke.env.Environment._path_set": [
        "invoke.env.Environment._cast",
        "invoke.env.Environment._path_get",
    ],
    "invoke.env.Environment._path_get": [],
    "invoke.env.Environment._to_env_var": [],
    "invoke.env.Environment._cast": ["<builtin>.isinstance", "<builtin>.type"],
    "invoke.runners": [],
    "invoke.runners.Runner.__init__": ["threading.Event"],
    "threading.Event": [],
    "invoke.runners.Runner.run": [
        "invoke.runners.Runner._run_body",
        "invoke.runners.Runner._stop_everything",
    ],
    "invoke.runners.Runner._run_body": [
        "invoke.runners.Runner.start_timer",
        "invoke.runners.Runner.make_promise",
        "invoke.runners.Runner.start",
        "<builtin>.dict",
        "invoke.runners.Runner._setup",
        "invoke.runners.Runner._finish",
        "invoke.runners.Runner.generate_result",
        "invoke.runners.Runner.create_io_threads",
    ],
    "invoke.runners.Runner._stop_everything": [
        "invoke.runners.Runner.stop_timer",
        "invoke.runners.Runner.stop",
    ],
    "invoke.runners.Runner.stop": [],
    "invoke.runners.Runner.stop_timer": ["threading.Timer.cancel"],
    "invoke.runners.Runner._setup": [
        "<builtin>.dict",
        "invoke.runners.Runner._unify_kwargs_with_config",
        "invoke.runners.Runner.default_encoding",
        "<builtin>.print",
        "invoke.runners.Runner.generate_env",
    ],
    "invoke.runners.Runner._unify_kwargs_with_config": [
        "<builtin>.TypeError",
        "<builtin>.ValueError",
        "<builtin>.list",
        "invoke.runners.Runner.should_use_pty",
        "invoke.vendor.six.iteritems",
        "invoke.runners.normalize_hide",
        "six.iteritems",
    ],
    "invoke.runners.Runner.generate_env": ["<builtin>.dict"],
    "invoke.runners.Runner.default_encoding": [
        "invoke.runners.Runner.default_encoding"
    ],
    "invoke.runners.Runner.generate_result": ["invoke.runners.Result.__init__"],
    "invoke.runners.Runner.start": [],
    "invoke.runners.Runner.start_timer": ["threading.Timer", "threading.Timer.start"],
    "invoke.runners.Runner.create_io_threads": [
        "invoke.vendor.six.iteritems",
        "six.iteritems",
        "invoke.util.ExceptionHandlingThread.__init__",
    ],
    "invoke.runners.Runner.make_promise": ["invoke.runners.Promise.__init__"],
    "invoke.runners.Runner._finish": [
        "threading.Event.set",
        "invoke.runners.Runner.send_interrupt",
        "invoke.runners.Runner._thread_join_timeout",
        "<builtin>.isinstance",
        "invoke.exceptions.Failure.__init__",
        "invoke.vendor.six.iteritems",
        "invoke.exceptions.ThreadException.__init__",
        "invoke.runners.Runner._collate_result",
        "invoke.exceptions.CommandTimedOut.__init__",
        "invoke.runners.Runner.wait",
        "six.iteritems",
    ],
    "invoke.runners.Promise.__init__": ["<builtin>.setattr"],
    "invoke.runners.Runner.wait": ["time.sleep"],
    "invoke.runners.Runner.send_interrupt": ["invoke.runners.Runner.write_proc_stdin"],
    "threading.Event.set": [],
    "invoke.runners.Runner._thread_join_timeout": [],
    "invoke.runners.Runner._collate_result": [
        "invoke.runners.Runner.generate_result",
        "<builtin>.dict",
        "invoke.runners.Runner.returncode",
    ],
    "invoke.runners.normalize_hide": ["<builtin>.tuple", "<builtin>.ValueError"],
    "invoke.runners.Runner.should_use_pty": [],
    "invoke.runners.Runner.returncode": [],
    "invoke.runners.Result.__init__": ["invoke.runners.default_encoding"],
    "invoke.runners.Runner.read_proc_output": ["invoke.runners.Runner.decode"],
    "invoke.runners.Runner.decode": [],
    "invoke.runners.Runner.write_our_output": ["invoke.util.encode_output"],
    "invoke.runners.Runner._handle_output": [
        "invoke.runners.Runner.respond",
        "invoke.runners.Runner.write_our_output",
        "invoke.runners.Runner.read_proc_output",
    ],
    "invoke.runners.Runner.respond": ["invoke.runners.Runner.write_proc_stdin"],
    "invoke.runners.Runner.handle_stdout": ["invoke.runners.Runner._handle_output"],
    "invoke.runners.Runner.handle_stderr": ["invoke.runners.Runner._handle_output"],
    "invoke.runners.Runner.read_our_stdin": [
        "<builtin>.isinstance",
        "invoke.terminals.bytes_to_read",
        "invoke.terminals.ready_for_reading",
        "invoke.runners.Runner.decode",
    ],
    "invoke.runners.Runner.handle_stdin": [
        "invoke.runners.Runner.write_proc_stdin",
        "invoke.runners.Runner.close_proc_stdin",
        "invoke.runners.Runner.should_echo_stdin",
        "invoke.terminals.character_buffered",
        "threading.Event.is_set",
        "invoke.runners.Runner.read_our_stdin",
        "invoke.runners.Runner.write_our_output",
        "time.sleep",
    ],
    "invoke.runners.Runner.write_proc_stdin": [
        "invoke.runners.Runner._write_proc_stdin"
    ],
    "invoke.runners.Runner.should_echo_stdin": ["invoke.util.isatty"],
    "invoke.runners.Runner.close_proc_stdin": [],
    "threading.Event.is_set": [],
    "time.sleep": [],
    "invoke.runners.Runner.has_dead_threads": ["<builtin>.any"],
    "invoke.runners.Runner._write_proc_stdin": [],
    "invoke.runners.Runner.process_is_finished": [],
    "threading.Timer": [],
    "threading.Timer.start": [],
    "invoke.runners.Runner.read_proc_stdout": [],
    "invoke.runners.Runner.read_proc_stderr": [],
    "threading.Timer.cancel": [],
    "invoke.runners.Runner.kill": [],
    "invoke.runners.Runner.timed_out": ["threading.Timer.is_alive"],
    "threading.Timer.is_alive": [],
    "invoke.runners.Local.__init__": ["<builtin>.super"],
    "invoke.runners.Local.should_use_pty": [
        "sys.stderr.write",
        "invoke.util.has_fileno",
    ],
    "sys.stderr.write": [],
    "invoke.runners.Local.read_proc_stdout": [
        "os.read",
        "<builtin>.str",
        "subprocess.Popen.stdout.fileno",
        "<builtin>.any",
    ],
    "os.read": [],
    "subprocess.Popen.stdout.fileno": [],
    "invoke.runners.Local.read_proc_stderr": [
        "os.read",
        "subprocess.Popen.stderr.fileno",
    ],
    "subprocess.Popen.stderr.fileno": [],
    "invoke.runners.Local._write_proc_stdin": [
        "os.write",
        "<builtin>.str",
        "subprocess.Popen.stdin.fileno",
    ],
    "subprocess.Popen.stdin.fileno": [],
    "os.write": [],
    "invoke.runners.Local.close_proc_stdin": ["subprocess.Popen.stdin.close"],
    "subprocess.Popen.stdin.close": [],
    "invoke.runners.Local.start": [
        "fcntl.ioctl",
        "subprocess.Popen",
        "sys.exit",
        "os.execve",
        "struct.pack",
        "pty.fork",
        "invoke.terminals.pty_size",
        "sys.stdout.fileno",
    ],
    "pty.fork": [],
    "sys.stdout.fileno": [],
    "os.execve": [],
    "subprocess.Popen": [],
    "invoke.runners.Local.kill": ["os.kill"],
    "os.kill": [],
    "invoke.runners.Local.process_is_finished": ["subprocess.Popen.poll", "os.waitpid"],
    "os.waitpid": [],
    "subprocess.Popen.poll": [],
    "invoke.runners.Local.returncode": [
        "os.WIFSIGNALED",
        "os.WEXITSTATUS",
        "os.WTERMSIG",
        "os.WIFEXITED",
    ],
    "os.WIFEXITED": [],
    "os.WEXITSTATUS": [],
    "os.WIFSIGNALED": [],
    "os.WTERMSIG": [],
    "invoke.runners.Local.stop": ["os.close"],
    "os.close": [],
    "invoke.runners.default_encoding": [
        "locale.getpreferredencoding",
        "locale.getdefaultlocale",
    ],
    "invoke.runners.Result.return_code": [],
    "invoke.runners.Result.__nonzero__": [],
    "invoke.runners.Result.__bool__": ["invoke.runners.Result.__nonzero__"],
    "invoke.runners.Result.__str__": ["<builtin>.getattr"],
    "invoke.runners.Result.__repr__": [],
    "invoke.runners.Result.ok": [],
    "invoke.runners.Result.failed": [],
    "invoke.runners.Promise.join": [
        "invoke.runners.Runner._finish",
        "invoke.runners.Runner._stop_everything",
    ],
    "invoke.runners.Promise.__enter__": [],
    "invoke.runners.Promise.__exit__": ["invoke.runners.Promise.join"],
    "locale.getpreferredencoding": [],
    "locale.getdefaultlocale": [],
    "invoke.typeshed_builtins.builtins": [
        "typing.TypeVar",
        "typing.overload",
        "typing_extensions.ParamSpec",
    ],
    "typing.TypeVar": [],
    "typing_extensions.ParamSpec": [],
    "invoke.typeshed_builtins.builtins.object": [
        "invoke.typeshed_builtins.builtins.property",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.property": [],
    "invoke.typeshed_builtins.builtins.object.__class__": [],
    "invoke.typeshed_builtins.builtins.object.__init__": [],
    "invoke.typeshed_builtins.builtins.object.__new__": [],
    "invoke.typeshed_builtins.builtins.object.__setattr__": [],
    "invoke.typeshed_builtins.builtins.object.__delattr__": [],
    "invoke.typeshed_builtins.builtins.object.__eq__": [],
    "invoke.typeshed_builtins.builtins.object.__ne__": [],
    "invoke.typeshed_builtins.builtins.object.__str__": [],
    "invoke.typeshed_builtins.builtins.object.__repr__": [],
    "invoke.typeshed_builtins.builtins.object.__hash__": [],
    "invoke.typeshed_builtins.builtins.object.__format__": [],
    "invoke.typeshed_builtins.builtins.object.__getattribute__": [],
    "invoke.typeshed_builtins.builtins.object.__sizeof__": [],
    "invoke.typeshed_builtins.builtins.object.__reduce__": [],
    "invoke.typeshed_builtins.builtins.object.__reduce_ex__": [],
    "invoke.typeshed_builtins.builtins.object.__getstate__": [],
    "invoke.typeshed_builtins.builtins.object.__dir__": [],
    "invoke.typeshed_builtins.builtins.object.__init_subclass__": [],
    "invoke.typeshed_builtins.builtins.classmethod": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.object.__subclasshook__": [],
    "invoke.typeshed_builtins.builtins.staticmethod": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.staticmethod.__func__": [],
    "invoke.typeshed_builtins.builtins.staticmethod.__isabstractmethod__": [],
    "invoke.typeshed_builtins.builtins.staticmethod.__init__": [],
    "typing.overload": [],
    "invoke.typeshed_builtins.builtins.staticmethod.__get__": [],
    "invoke.typeshed_builtins.builtins.staticmethod.__wrapped__": [],
    "invoke.typeshed_builtins.builtins.staticmethod.__call__": [],
    "invoke.typeshed_builtins.builtins.classmethod.__func__": [],
    "invoke.typeshed_builtins.builtins.classmethod.__isabstractmethod__": [],
    "invoke.typeshed_builtins.builtins.classmethod.__init__": [],
    "invoke.typeshed_builtins.builtins.classmethod.__get__": [],
    "invoke.typeshed_builtins.builtins.classmethod.__wrapped__": [],
    "invoke.typeshed_builtins.builtins.type": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.type.__base__": [],
    "invoke.typeshed_builtins.builtins.type.__basicsize__": [],
    "invoke.typeshed_builtins.builtins.type.__dict__": [],
    "invoke.typeshed_builtins.builtins.type.__dictoffset__": [],
    "invoke.typeshed_builtins.builtins.type.__flags__": [],
    "invoke.typeshed_builtins.builtins.type.__itemsize__": [],
    "invoke.typeshed_builtins.builtins.type.__mro__": [],
    "invoke.typeshed_builtins.builtins.type.__text_signature__": [],
    "invoke.typeshed_builtins.builtins.type.__weakrefoffset__": [],
    "invoke.typeshed_builtins.builtins.type.__init__": [],
    "invoke.typeshed_builtins.builtins.type.__new__": [],
    "invoke.typeshed_builtins.builtins.type.__call__": [],
    "invoke.typeshed_builtins.builtins.type.__subclasses__": [],
    "invoke.typeshed_builtins.builtins.type.mro": [],
    "invoke.typeshed_builtins.builtins.type.__instancecheck__": [],
    "invoke.typeshed_builtins.builtins.type.__subclasscheck__": [],
    "invoke.typeshed_builtins.builtins.type.__prepare__": [],
    "invoke.typeshed_builtins.builtins.type.__or__": [],
    "invoke.typeshed_builtins.builtins.type.__ror__": [],
    "invoke.typeshed_builtins.builtins.super": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.super.__init__": [],
    "invoke.typeshed_builtins.builtins.int": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.int.__new__": [],
    "invoke.typeshed_builtins.builtins.int.as_integer_ratio": [],
    "invoke.typeshed_builtins.builtins.int.real": [],
    "invoke.typeshed_builtins.builtins.int.imag": [],
    "invoke.typeshed_builtins.builtins.int.numerator": [],
    "invoke.typeshed_builtins.builtins.int.denominator": [],
    "invoke.typeshed_builtins.builtins.int.conjugate": [],
    "invoke.typeshed_builtins.builtins.int.bit_length": [],
    "invoke.typeshed_builtins.builtins.int.bit_count": [],
    "invoke.typeshed_builtins.builtins.int.to_bytes": [],
    "invoke.typeshed_builtins.builtins.int.from_bytes": [],
    "invoke.typeshed_builtins.builtins.int.is_integer": [],
    "invoke.typeshed_builtins.builtins.int.__add__": [],
    "invoke.typeshed_builtins.builtins.int.__sub__": [],
    "invoke.typeshed_builtins.builtins.int.__mul__": [],
    "invoke.typeshed_builtins.builtins.int.__floordiv__": [],
    "invoke.typeshed_builtins.builtins.int.__truediv__": [],
    "invoke.typeshed_builtins.builtins.int.__mod__": [],
    "invoke.typeshed_builtins.builtins.int.__divmod__": [],
    "invoke.typeshed_builtins.builtins.int.__radd__": [],
    "invoke.typeshed_builtins.builtins.int.__rsub__": [],
    "invoke.typeshed_builtins.builtins.int.__rmul__": [],
    "invoke.typeshed_builtins.builtins.int.__rfloordiv__": [],
    "invoke.typeshed_builtins.builtins.int.__rtruediv__": [],
    "invoke.typeshed_builtins.builtins.int.__rmod__": [],
    "invoke.typeshed_builtins.builtins.int.__rdivmod__": [],
    "invoke.typeshed_builtins.builtins.int.__pow__": [],
    "invoke.typeshed_builtins.builtins.int.__rpow__": [],
    "invoke.typeshed_builtins.builtins.int.__and__": [],
    "invoke.typeshed_builtins.builtins.int.__or__": [],
    "invoke.typeshed_builtins.builtins.int.__xor__": [],
    "invoke.typeshed_builtins.builtins.int.__lshift__": [],
    "invoke.typeshed_builtins.builtins.int.__rshift__": [],
    "invoke.typeshed_builtins.builtins.int.__rand__": [],
    "invoke.typeshed_builtins.builtins.int.__ror__": [],
    "invoke.typeshed_builtins.builtins.int.__rxor__": [],
    "invoke.typeshed_builtins.builtins.int.__rlshift__": [],
    "invoke.typeshed_builtins.builtins.int.__rrshift__": [],
    "invoke.typeshed_builtins.builtins.int.__neg__": [],
    "invoke.typeshed_builtins.builtins.int.__pos__": [],
    "invoke.typeshed_builtins.builtins.int.__invert__": [],
    "invoke.typeshed_builtins.builtins.int.__trunc__": [],
    "invoke.typeshed_builtins.builtins.int.__ceil__": [],
    "invoke.typeshed_builtins.builtins.int.__floor__": [],
    "invoke.typeshed_builtins.builtins.int.__round__": [],
    "invoke.typeshed_builtins.builtins.int.__getnewargs__": [],
    "invoke.typeshed_builtins.builtins.int.__eq__": [],
    "invoke.typeshed_builtins.builtins.int.__ne__": [],
    "invoke.typeshed_builtins.builtins.int.__lt__": [],
    "invoke.typeshed_builtins.builtins.int.__le__": [],
    "invoke.typeshed_builtins.builtins.int.__gt__": [],
    "invoke.typeshed_builtins.builtins.int.__ge__": [],
    "invoke.typeshed_builtins.builtins.int.__float__": [],
    "invoke.typeshed_builtins.builtins.int.__int__": [],
    "invoke.typeshed_builtins.builtins.int.__abs__": [],
    "invoke.typeshed_builtins.builtins.int.__hash__": [],
    "invoke.typeshed_builtins.builtins.int.__bool__": [],
    "invoke.typeshed_builtins.builtins.int.__index__": [],
    "invoke.typeshed_builtins.builtins.float.__new__": [],
    "invoke.typeshed_builtins.builtins.float.as_integer_ratio": [],
    "invoke.typeshed_builtins.builtins.float.hex": [],
    "invoke.typeshed_builtins.builtins.float.is_integer": [],
    "invoke.typeshed_builtins.builtins.float": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.float.fromhex": [],
    "invoke.typeshed_builtins.builtins.float.real": [],
    "invoke.typeshed_builtins.builtins.float.imag": [],
    "invoke.typeshed_builtins.builtins.float.conjugate": [],
    "invoke.typeshed_builtins.builtins.float.__add__": [],
    "invoke.typeshed_builtins.builtins.float.__sub__": [],
    "invoke.typeshed_builtins.builtins.float.__mul__": [],
    "invoke.typeshed_builtins.builtins.float.__floordiv__": [],
    "invoke.typeshed_builtins.builtins.float.__truediv__": [],
    "invoke.typeshed_builtins.builtins.float.__mod__": [],
    "invoke.typeshed_builtins.builtins.float.__divmod__": [],
    "invoke.typeshed_builtins.builtins.float.__pow__": [],
    "invoke.typeshed_builtins.builtins.float.__radd__": [],
    "invoke.typeshed_builtins.builtins.float.__rsub__": [],
    "invoke.typeshed_builtins.builtins.float.__rmul__": [],
    "invoke.typeshed_builtins.builtins.float.__rfloordiv__": [],
    "invoke.typeshed_builtins.builtins.float.__rtruediv__": [],
    "invoke.typeshed_builtins.builtins.float.__rmod__": [],
    "invoke.typeshed_builtins.builtins.float.__rdivmod__": [],
    "invoke.typeshed_builtins.builtins.float.__rpow__": [],
    "invoke.typeshed_builtins.builtins.float.__getnewargs__": [],
    "invoke.typeshed_builtins.builtins.float.__trunc__": [],
    "invoke.typeshed_builtins.builtins.float.__ceil__": [],
    "invoke.typeshed_builtins.builtins.float.__floor__": [],
    "invoke.typeshed_builtins.builtins.float.__round__": [],
    "invoke.typeshed_builtins.builtins.float.__eq__": [],
    "invoke.typeshed_builtins.builtins.float.__ne__": [],
    "invoke.typeshed_builtins.builtins.float.__lt__": [],
    "invoke.typeshed_builtins.builtins.float.__le__": [],
    "invoke.typeshed_builtins.builtins.float.__gt__": [],
    "invoke.typeshed_builtins.builtins.float.__ge__": [],
    "invoke.typeshed_builtins.builtins.float.__neg__": [],
    "invoke.typeshed_builtins.builtins.float.__pos__": [],
    "invoke.typeshed_builtins.builtins.float.__int__": [],
    "invoke.typeshed_builtins.builtins.float.__float__": [],
    "invoke.typeshed_builtins.builtins.float.__abs__": [],
    "invoke.typeshed_builtins.builtins.float.__hash__": [],
    "invoke.typeshed_builtins.builtins.float.__bool__": [],
    "invoke.typeshed_builtins.builtins.complex": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.complex.__new__": [],
    "invoke.typeshed_builtins.builtins.complex.real": [],
    "invoke.typeshed_builtins.builtins.complex.imag": [],
    "invoke.typeshed_builtins.builtins.complex.conjugate": [],
    "invoke.typeshed_builtins.builtins.complex.__add__": [],
    "invoke.typeshed_builtins.builtins.complex.__sub__": [],
    "invoke.typeshed_builtins.builtins.complex.__mul__": [],
    "invoke.typeshed_builtins.builtins.complex.__pow__": [],
    "invoke.typeshed_builtins.builtins.complex.__truediv__": [],
    "invoke.typeshed_builtins.builtins.complex.__radd__": [],
    "invoke.typeshed_builtins.builtins.complex.__rsub__": [],
    "invoke.typeshed_builtins.builtins.complex.__rmul__": [],
    "invoke.typeshed_builtins.builtins.complex.__rpow__": [],
    "invoke.typeshed_builtins.builtins.complex.__rtruediv__": [],
    "invoke.typeshed_builtins.builtins.complex.__eq__": [],
    "invoke.typeshed_builtins.builtins.complex.__ne__": [],
    "invoke.typeshed_builtins.builtins.complex.__neg__": [],
    "invoke.typeshed_builtins.builtins.complex.__pos__": [],
    "invoke.typeshed_builtins.builtins.complex.__abs__": [],
    "invoke.typeshed_builtins.builtins.complex.__hash__": [],
    "invoke.typeshed_builtins.builtins.complex.__bool__": [],
    "invoke.typeshed_builtins.builtins.complex.__complex__": [],
    "invoke.typeshed_builtins.builtins._FormatMapMapping.__getitem__": [],
    "invoke.typeshed_builtins.builtins._TranslateTable.__getitem__": [],
    "invoke.typeshed_builtins.builtins.str": [
        "typing.overload",
        "invoke.typeshed_builtins.builtins.staticmethod",
    ],
    "invoke.typeshed_builtins.builtins.str.__new__": [],
    "invoke.typeshed_builtins.builtins.str.capitalize": [],
    "invoke.typeshed_builtins.builtins.str.casefold": [],
    "invoke.typeshed_builtins.builtins.str.center": [],
    "invoke.typeshed_builtins.builtins.str.count": [],
    "invoke.typeshed_builtins.builtins.str.encode": [],
    "invoke.typeshed_builtins.builtins.str.endswith": [],
    "invoke.typeshed_builtins.builtins.str.expandtabs": [],
    "invoke.typeshed_builtins.builtins.str.find": [],
    "invoke.typeshed_builtins.builtins.str.format": [],
    "invoke.typeshed_builtins.builtins.str.format_map": [],
    "invoke.typeshed_builtins.builtins.str.index": [],
    "invoke.typeshed_builtins.builtins.str.isalnum": [],
    "invoke.typeshed_builtins.builtins.str.isalpha": [],
    "invoke.typeshed_builtins.builtins.str.isascii": [],
    "invoke.typeshed_builtins.builtins.str.isdecimal": [],
    "invoke.typeshed_builtins.builtins.str.isdigit": [],
    "invoke.typeshed_builtins.builtins.str.isidentifier": [],
    "invoke.typeshed_builtins.builtins.str.islower": [],
    "invoke.typeshed_builtins.builtins.str.isnumeric": [],
    "invoke.typeshed_builtins.builtins.str.isprintable": [],
    "invoke.typeshed_builtins.builtins.str.isspace": [],
    "invoke.typeshed_builtins.builtins.str.istitle": [],
    "invoke.typeshed_builtins.builtins.str.isupper": [],
    "invoke.typeshed_builtins.builtins.str.join": [],
    "invoke.typeshed_builtins.builtins.str.ljust": [],
    "invoke.typeshed_builtins.builtins.str.lower": [],
    "invoke.typeshed_builtins.builtins.str.lstrip": [],
    "invoke.typeshed_builtins.builtins.str.partition": [],
    "invoke.typeshed_builtins.builtins.str.replace": [],
    "invoke.typeshed_builtins.builtins.str.removeprefix": [],
    "invoke.typeshed_builtins.builtins.str.removesuffix": [],
    "invoke.typeshed_builtins.builtins.str.rfind": [],
    "invoke.typeshed_builtins.builtins.str.rindex": [],
    "invoke.typeshed_builtins.builtins.str.rjust": [],
    "invoke.typeshed_builtins.builtins.str.rpartition": [],
    "invoke.typeshed_builtins.builtins.str.rsplit": [],
    "invoke.typeshed_builtins.builtins.str.rstrip": [],
    "invoke.typeshed_builtins.builtins.str.split": [],
    "invoke.typeshed_builtins.builtins.str.splitlines": [],
    "invoke.typeshed_builtins.builtins.str.startswith": [],
    "invoke.typeshed_builtins.builtins.str.strip": [],
    "invoke.typeshed_builtins.builtins.str.swapcase": [],
    "invoke.typeshed_builtins.builtins.str.title": [],
    "invoke.typeshed_builtins.builtins.str.translate": [],
    "invoke.typeshed_builtins.builtins.str.upper": [],
    "invoke.typeshed_builtins.builtins.str.zfill": [],
    "invoke.typeshed_builtins.builtins.str.maketrans": [],
    "invoke.typeshed_builtins.builtins.str.__add__": [],
    "invoke.typeshed_builtins.builtins.str.__contains__": [],
    "invoke.typeshed_builtins.builtins.str.__eq__": [],
    "invoke.typeshed_builtins.builtins.str.__ge__": [],
    "invoke.typeshed_builtins.builtins.str.__getitem__": [],
    "invoke.typeshed_builtins.builtins.str.__gt__": [],
    "invoke.typeshed_builtins.builtins.str.__hash__": [],
    "invoke.typeshed_builtins.builtins.str.__iter__": [],
    "invoke.typeshed_builtins.builtins.str.__le__": [],
    "invoke.typeshed_builtins.builtins.str.__len__": [],
    "invoke.typeshed_builtins.builtins.str.__lt__": [],
    "invoke.typeshed_builtins.builtins.str.__mod__": [],
    "invoke.typeshed_builtins.builtins.str.__mul__": [],
    "invoke.typeshed_builtins.builtins.str.__ne__": [],
    "invoke.typeshed_builtins.builtins.str.__rmul__": [],
    "invoke.typeshed_builtins.builtins.str.__getnewargs__": [],
    "invoke.typeshed_builtins.builtins.bytes": [
        "invoke.typeshed_builtins.builtins.staticmethod",
        "typing.overload",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.bytes.__new__": [],
    "invoke.typeshed_builtins.builtins.bytes.capitalize": [],
    "invoke.typeshed_builtins.builtins.bytes.center": [],
    "invoke.typeshed_builtins.builtins.bytes.count": [],
    "invoke.typeshed_builtins.builtins.bytes.decode": [],
    "invoke.typeshed_builtins.builtins.bytes.endswith": [],
    "invoke.typeshed_builtins.builtins.bytes.expandtabs": [],
    "invoke.typeshed_builtins.builtins.bytes.find": [],
    "invoke.typeshed_builtins.builtins.bytes.hex": [],
    "invoke.typeshed_builtins.builtins.bytes.index": [],
    "invoke.typeshed_builtins.builtins.bytes.isalnum": [],
    "invoke.typeshed_builtins.builtins.bytes.isalpha": [],
    "invoke.typeshed_builtins.builtins.bytes.isascii": [],
    "invoke.typeshed_builtins.builtins.bytes.isdigit": [],
    "invoke.typeshed_builtins.builtins.bytes.islower": [],
    "invoke.typeshed_builtins.builtins.bytes.isspace": [],
    "invoke.typeshed_builtins.builtins.bytes.istitle": [],
    "invoke.typeshed_builtins.builtins.bytes.isupper": [],
    "invoke.typeshed_builtins.builtins.bytes.join": [],
    "invoke.typeshed_builtins.builtins.bytes.ljust": [],
    "invoke.typeshed_builtins.builtins.bytes.lower": [],
    "invoke.typeshed_builtins.builtins.bytes.lstrip": [],
    "invoke.typeshed_builtins.builtins.bytes.partition": [],
    "invoke.typeshed_builtins.builtins.bytes.replace": [],
    "invoke.typeshed_builtins.builtins.bytes.removeprefix": [],
    "invoke.typeshed_builtins.builtins.bytes.removesuffix": [],
    "invoke.typeshed_builtins.builtins.bytes.rfind": [],
    "invoke.typeshed_builtins.builtins.bytes.rindex": [],
    "invoke.typeshed_builtins.builtins.bytes.rjust": [],
    "invoke.typeshed_builtins.builtins.bytes.rpartition": [],
    "invoke.typeshed_builtins.builtins.bytes.rsplit": [],
    "invoke.typeshed_builtins.builtins.bytes.rstrip": [],
    "invoke.typeshed_builtins.builtins.bytes.split": [],
    "invoke.typeshed_builtins.builtins.bytes.splitlines": [],
    "invoke.typeshed_builtins.builtins.bytes.startswith": [],
    "invoke.typeshed_builtins.builtins.bytes.strip": [],
    "invoke.typeshed_builtins.builtins.bytes.swapcase": [],
    "invoke.typeshed_builtins.builtins.bytes.title": [],
    "invoke.typeshed_builtins.builtins.bytes.translate": [],
    "invoke.typeshed_builtins.builtins.bytes.upper": [],
    "invoke.typeshed_builtins.builtins.bytes.zfill": [],
    "invoke.typeshed_builtins.builtins.bytes.fromhex": [],
    "invoke.typeshed_builtins.builtins.bytes.maketrans": [],
    "invoke.typeshed_builtins.builtins.bytes.__len__": [],
    "invoke.typeshed_builtins.builtins.bytes.__iter__": [],
    "invoke.typeshed_builtins.builtins.bytes.__hash__": [],
    "invoke.typeshed_builtins.builtins.bytes.__getitem__": [],
    "invoke.typeshed_builtins.builtins.bytes.__add__": [],
    "invoke.typeshed_builtins.builtins.bytes.__mul__": [],
    "invoke.typeshed_builtins.builtins.bytes.__rmul__": [],
    "invoke.typeshed_builtins.builtins.bytes.__mod__": [],
    "invoke.typeshed_builtins.builtins.bytes.__contains__": [],
    "invoke.typeshed_builtins.builtins.bytes.__eq__": [],
    "invoke.typeshed_builtins.builtins.bytes.__ne__": [],
    "invoke.typeshed_builtins.builtins.bytes.__lt__": [],
    "invoke.typeshed_builtins.builtins.bytes.__le__": [],
    "invoke.typeshed_builtins.builtins.bytes.__gt__": [],
    "invoke.typeshed_builtins.builtins.bytes.__ge__": [],
    "invoke.typeshed_builtins.builtins.bytes.__getnewargs__": [],
    "invoke.typeshed_builtins.builtins.bytes.__bytes__": [],
    "invoke.typeshed_builtins.builtins.bytes.__buffer__": [],
    "invoke.typeshed_builtins.builtins.bytearray": [
        "invoke.typeshed_builtins.builtins.staticmethod",
        "typing.overload",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.bytearray.__init__": [],
    "invoke.typeshed_builtins.builtins.bytearray.append": [],
    "invoke.typeshed_builtins.builtins.bytearray.capitalize": [],
    "invoke.typeshed_builtins.builtins.bytearray.center": [],
    "invoke.typeshed_builtins.builtins.bytearray.count": [],
    "invoke.typeshed_builtins.builtins.bytearray.copy": [],
    "invoke.typeshed_builtins.builtins.bytearray.decode": [],
    "invoke.typeshed_builtins.builtins.bytearray.endswith": [],
    "invoke.typeshed_builtins.builtins.bytearray.expandtabs": [],
    "invoke.typeshed_builtins.builtins.bytearray.extend": [],
    "invoke.typeshed_builtins.builtins.bytearray.find": [],
    "invoke.typeshed_builtins.builtins.bytearray.hex": [],
    "invoke.typeshed_builtins.builtins.bytearray.index": [],
    "invoke.typeshed_builtins.builtins.bytearray.insert": [],
    "invoke.typeshed_builtins.builtins.bytearray.isalnum": [],
    "invoke.typeshed_builtins.builtins.bytearray.isalpha": [],
    "invoke.typeshed_builtins.builtins.bytearray.isascii": [],
    "invoke.typeshed_builtins.builtins.bytearray.isdigit": [],
    "invoke.typeshed_builtins.builtins.bytearray.islower": [],
    "invoke.typeshed_builtins.builtins.bytearray.isspace": [],
    "invoke.typeshed_builtins.builtins.bytearray.istitle": [],
    "invoke.typeshed_builtins.builtins.bytearray.isupper": [],
    "invoke.typeshed_builtins.builtins.bytearray.join": [],
    "invoke.typeshed_builtins.builtins.bytearray.ljust": [],
    "invoke.typeshed_builtins.builtins.bytearray.lower": [],
    "invoke.typeshed_builtins.builtins.bytearray.lstrip": [],
    "invoke.typeshed_builtins.builtins.bytearray.partition": [],
    "invoke.typeshed_builtins.builtins.bytearray.pop": [],
    "invoke.typeshed_builtins.builtins.bytearray.remove": [],
    "invoke.typeshed_builtins.builtins.bytearray.removeprefix": [],
    "invoke.typeshed_builtins.builtins.bytearray.removesuffix": [],
    "invoke.typeshed_builtins.builtins.bytearray.replace": [],
    "invoke.typeshed_builtins.builtins.bytearray.rfind": [],
    "invoke.typeshed_builtins.builtins.bytearray.rindex": [],
    "invoke.typeshed_builtins.builtins.bytearray.rjust": [],
    "invoke.typeshed_builtins.builtins.bytearray.rpartition": [],
    "invoke.typeshed_builtins.builtins.bytearray.rsplit": [],
    "invoke.typeshed_builtins.builtins.bytearray.rstrip": [],
    "invoke.typeshed_builtins.builtins.bytearray.split": [],
    "invoke.typeshed_builtins.builtins.bytearray.splitlines": [],
    "invoke.typeshed_builtins.builtins.bytearray.startswith": [],
    "invoke.typeshed_builtins.builtins.bytearray.strip": [],
    "invoke.typeshed_builtins.builtins.bytearray.swapcase": [],
    "invoke.typeshed_builtins.builtins.bytearray.title": [],
    "invoke.typeshed_builtins.builtins.bytearray.translate": [],
    "invoke.typeshed_builtins.builtins.bytearray.upper": [],
    "invoke.typeshed_builtins.builtins.bytearray.zfill": [],
    "invoke.typeshed_builtins.builtins.bytearray.fromhex": [],
    "invoke.typeshed_builtins.builtins.bytearray.maketrans": [],
    "invoke.typeshed_builtins.builtins.bytearray.__len__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__iter__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__getitem__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__setitem__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__delitem__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__add__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__iadd__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__mul__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__rmul__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__imul__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__mod__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__contains__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__eq__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__ne__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__lt__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__le__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__gt__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__ge__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__alloc__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__buffer__": [],
    "invoke.typeshed_builtins.builtins.bytearray.__release_buffer__": [],
    "invoke.typeshed_builtins.builtins.memoryview": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.memoryview.format": [],
    "invoke.typeshed_builtins.builtins.memoryview.itemsize": [],
    "invoke.typeshed_builtins.builtins.memoryview.shape": [],
    "invoke.typeshed_builtins.builtins.memoryview.strides": [],
    "invoke.typeshed_builtins.builtins.memoryview.suboffsets": [],
    "invoke.typeshed_builtins.builtins.memoryview.readonly": [],
    "invoke.typeshed_builtins.builtins.memoryview.ndim": [],
    "invoke.typeshed_builtins.builtins.memoryview.obj": [],
    "invoke.typeshed_builtins.builtins.memoryview.c_contiguous": [],
    "invoke.typeshed_builtins.builtins.memoryview.f_contiguous": [],
    "invoke.typeshed_builtins.builtins.memoryview.contiguous": [],
    "invoke.typeshed_builtins.builtins.memoryview.nbytes": [],
    "invoke.typeshed_builtins.builtins.memoryview.__new__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__enter__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__exit__": [],
    "invoke.typeshed_builtins.builtins.memoryview.cast": [],
    "invoke.typeshed_builtins.builtins.memoryview.__getitem__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__contains__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__iter__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__len__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__eq__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__hash__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__setitem__": [],
    "invoke.typeshed_builtins.builtins.memoryview.tobytes": [],
    "invoke.typeshed_builtins.builtins.memoryview.tolist": [],
    "invoke.typeshed_builtins.builtins.memoryview.toreadonly": [],
    "invoke.typeshed_builtins.builtins.memoryview.release": [],
    "invoke.typeshed_builtins.builtins.memoryview.hex": [],
    "invoke.typeshed_builtins.builtins.memoryview.__buffer__": [],
    "invoke.typeshed_builtins.builtins.memoryview.__release_buffer__": [],
    "invoke.typeshed_builtins.builtins.bool.__new__": [],
    "invoke.typeshed_builtins.builtins.bool": [
        "typing_extensions.deprecated",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.bool.__and__": [],
    "invoke.typeshed_builtins.builtins.bool.__or__": [],
    "invoke.typeshed_builtins.builtins.bool.__xor__": [],
    "invoke.typeshed_builtins.builtins.bool.__rand__": [],
    "invoke.typeshed_builtins.builtins.bool.__ror__": [],
    "invoke.typeshed_builtins.builtins.bool.__rxor__": [],
    "invoke.typeshed_builtins.builtins.bool.__getnewargs__": [],
    "typing_extensions.deprecated": [],
    "invoke.typeshed_builtins.builtins.bool.__invert__": [],
    "invoke.typeshed_builtins.builtins.slice": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.slice.start": [],
    "invoke.typeshed_builtins.builtins.slice.step": [],
    "invoke.typeshed_builtins.builtins.slice.stop": [],
    "invoke.typeshed_builtins.builtins.slice.__new__": [],
    "invoke.typeshed_builtins.builtins.slice.__eq__": [],
    "invoke.typeshed_builtins.builtins.slice.indices": [],
    "invoke.typeshed_builtins.builtins.tuple.__new__": [],
    "invoke.typeshed_builtins.builtins.tuple.__len__": [],
    "invoke.typeshed_builtins.builtins.tuple.__contains__": [],
    "invoke.typeshed_builtins.builtins.tuple": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.tuple.__getitem__": [],
    "invoke.typeshed_builtins.builtins.tuple.__iter__": [],
    "invoke.typeshed_builtins.builtins.tuple.__lt__": [],
    "invoke.typeshed_builtins.builtins.tuple.__le__": [],
    "invoke.typeshed_builtins.builtins.tuple.__gt__": [],
    "invoke.typeshed_builtins.builtins.tuple.__ge__": [],
    "invoke.typeshed_builtins.builtins.tuple.__eq__": [],
    "invoke.typeshed_builtins.builtins.tuple.__hash__": [],
    "invoke.typeshed_builtins.builtins.tuple.__add__": [],
    "invoke.typeshed_builtins.builtins.tuple.__mul__": [],
    "invoke.typeshed_builtins.builtins.tuple.__rmul__": [],
    "invoke.typeshed_builtins.builtins.tuple.count": [],
    "invoke.typeshed_builtins.builtins.tuple.index": [],
    "invoke.typeshed_builtins.builtins.tuple.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.function": [
        "invoke.typeshed_builtins.builtins.property"
    ],
    "invoke.typeshed_builtins.builtins.function.__closure__": [],
    "invoke.typeshed_builtins.builtins.function.__globals__": [],
    "invoke.typeshed_builtins.builtins.function.__builtins__": [],
    "invoke.typeshed_builtins.builtins.function.__get__": [],
    "invoke.typeshed_builtins.builtins.list": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.list.__init__": [],
    "invoke.typeshed_builtins.builtins.list.copy": [],
    "invoke.typeshed_builtins.builtins.list.append": [],
    "invoke.typeshed_builtins.builtins.list.extend": [],
    "invoke.typeshed_builtins.builtins.list.pop": [],
    "invoke.typeshed_builtins.builtins.list.index": [],
    "invoke.typeshed_builtins.builtins.list.count": [],
    "invoke.typeshed_builtins.builtins.list.insert": [],
    "invoke.typeshed_builtins.builtins.list.remove": [],
    "invoke.typeshed_builtins.builtins.list.sort": [],
    "invoke.typeshed_builtins.builtins.list.__len__": [],
    "invoke.typeshed_builtins.builtins.list.__iter__": [],
    "invoke.typeshed_builtins.builtins.list.__getitem__": [],
    "invoke.typeshed_builtins.builtins.list.__setitem__": [],
    "invoke.typeshed_builtins.builtins.list.__delitem__": [],
    "invoke.typeshed_builtins.builtins.list.__add__": [],
    "invoke.typeshed_builtins.builtins.list.__iadd__": [],
    "invoke.typeshed_builtins.builtins.list.__mul__": [],
    "invoke.typeshed_builtins.builtins.list.__rmul__": [],
    "invoke.typeshed_builtins.builtins.list.__imul__": [],
    "invoke.typeshed_builtins.builtins.list.__contains__": [],
    "invoke.typeshed_builtins.builtins.list.__reversed__": [],
    "invoke.typeshed_builtins.builtins.list.__gt__": [],
    "invoke.typeshed_builtins.builtins.list.__ge__": [],
    "invoke.typeshed_builtins.builtins.list.__lt__": [],
    "invoke.typeshed_builtins.builtins.list.__le__": [],
    "invoke.typeshed_builtins.builtins.list.__eq__": [],
    "invoke.typeshed_builtins.builtins.list.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.dict": [
        "typing.overload",
        "invoke.typeshed_builtins.builtins.classmethod",
    ],
    "invoke.typeshed_builtins.builtins.dict.__init__": [],
    "invoke.typeshed_builtins.builtins.dict.__new__": [],
    "invoke.typeshed_builtins.builtins.dict.copy": [],
    "invoke.typeshed_builtins.builtins.dict.keys": [],
    "invoke.typeshed_builtins.builtins.dict.values": [],
    "invoke.typeshed_builtins.builtins.dict.items": [],
    "invoke.typeshed_builtins.builtins.dict.fromkeys": [],
    "invoke.typeshed_builtins.builtins.dict.get": [],
    "invoke.typeshed_builtins.builtins.dict.pop": [],
    "invoke.typeshed_builtins.builtins.dict.__len__": [],
    "invoke.typeshed_builtins.builtins.dict.__getitem__": [],
    "invoke.typeshed_builtins.builtins.dict.__setitem__": [],
    "invoke.typeshed_builtins.builtins.dict.__delitem__": [],
    "invoke.typeshed_builtins.builtins.dict.__iter__": [],
    "invoke.typeshed_builtins.builtins.dict.__eq__": [],
    "invoke.typeshed_builtins.builtins.dict.__reversed__": [],
    "invoke.typeshed_builtins.builtins.dict.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.dict.__or__": [],
    "invoke.typeshed_builtins.builtins.dict.__ror__": [],
    "invoke.typeshed_builtins.builtins.dict.__ior__": [],
    "invoke.typeshed_builtins.builtins.set": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.set.__init__": [],
    "invoke.typeshed_builtins.builtins.set.add": [],
    "invoke.typeshed_builtins.builtins.set.copy": [],
    "invoke.typeshed_builtins.builtins.set.difference": [],
    "invoke.typeshed_builtins.builtins.set.difference_update": [],
    "invoke.typeshed_builtins.builtins.set.discard": [],
    "invoke.typeshed_builtins.builtins.set.intersection": [],
    "invoke.typeshed_builtins.builtins.set.intersection_update": [],
    "invoke.typeshed_builtins.builtins.set.isdisjoint": [],
    "invoke.typeshed_builtins.builtins.set.issubset": [],
    "invoke.typeshed_builtins.builtins.set.issuperset": [],
    "invoke.typeshed_builtins.builtins.set.remove": [],
    "invoke.typeshed_builtins.builtins.set.symmetric_difference": [],
    "invoke.typeshed_builtins.builtins.set.symmetric_difference_update": [],
    "invoke.typeshed_builtins.builtins.set.union": [],
    "invoke.typeshed_builtins.builtins.set.update": [],
    "invoke.typeshed_builtins.builtins.set.__len__": [],
    "invoke.typeshed_builtins.builtins.set.__contains__": [],
    "invoke.typeshed_builtins.builtins.set.__iter__": [],
    "invoke.typeshed_builtins.builtins.set.__and__": [],
    "invoke.typeshed_builtins.builtins.set.__iand__": [],
    "invoke.typeshed_builtins.builtins.set.__or__": [],
    "invoke.typeshed_builtins.builtins.set.__ior__": [],
    "invoke.typeshed_builtins.builtins.set.__sub__": [],
    "invoke.typeshed_builtins.builtins.set.__isub__": [],
    "invoke.typeshed_builtins.builtins.set.__xor__": [],
    "invoke.typeshed_builtins.builtins.set.__ixor__": [],
    "invoke.typeshed_builtins.builtins.set.__le__": [],
    "invoke.typeshed_builtins.builtins.set.__lt__": [],
    "invoke.typeshed_builtins.builtins.set.__ge__": [],
    "invoke.typeshed_builtins.builtins.set.__gt__": [],
    "invoke.typeshed_builtins.builtins.set.__eq__": [],
    "invoke.typeshed_builtins.builtins.set.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.frozenset": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.frozenset.__new__": [],
    "invoke.typeshed_builtins.builtins.frozenset.copy": [],
    "invoke.typeshed_builtins.builtins.frozenset.difference": [],
    "invoke.typeshed_builtins.builtins.frozenset.intersection": [],
    "invoke.typeshed_builtins.builtins.frozenset.isdisjoint": [],
    "invoke.typeshed_builtins.builtins.frozenset.issubset": [],
    "invoke.typeshed_builtins.builtins.frozenset.issuperset": [],
    "invoke.typeshed_builtins.builtins.frozenset.symmetric_difference": [],
    "invoke.typeshed_builtins.builtins.frozenset.union": [],
    "invoke.typeshed_builtins.builtins.frozenset.__len__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__contains__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__iter__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__and__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__or__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__sub__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__xor__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__le__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__lt__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__ge__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__gt__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__eq__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__hash__": [],
    "invoke.typeshed_builtins.builtins.frozenset.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.enumerate.__new__": [],
    "invoke.typeshed_builtins.builtins.enumerate.__iter__": [],
    "invoke.typeshed_builtins.builtins.enumerate.__next__": [],
    "invoke.typeshed_builtins.builtins.enumerate.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.range": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.range.start": [],
    "invoke.typeshed_builtins.builtins.range.stop": [],
    "invoke.typeshed_builtins.builtins.range.step": [],
    "invoke.typeshed_builtins.builtins.range.__new__": [],
    "invoke.typeshed_builtins.builtins.range.count": [],
    "invoke.typeshed_builtins.builtins.range.index": [],
    "invoke.typeshed_builtins.builtins.range.__len__": [],
    "invoke.typeshed_builtins.builtins.range.__eq__": [],
    "invoke.typeshed_builtins.builtins.range.__hash__": [],
    "invoke.typeshed_builtins.builtins.range.__contains__": [],
    "invoke.typeshed_builtins.builtins.range.__iter__": [],
    "invoke.typeshed_builtins.builtins.range.__getitem__": [],
    "invoke.typeshed_builtins.builtins.range.__reversed__": [],
    "invoke.typeshed_builtins.builtins.property.__init__": [],
    "invoke.typeshed_builtins.builtins.property.getter": [],
    "invoke.typeshed_builtins.builtins.property.setter": [],
    "invoke.typeshed_builtins.builtins.property.deleter": [],
    "invoke.typeshed_builtins.builtins.property.__get__": [],
    "invoke.typeshed_builtins.builtins.property.__set__": [],
    "invoke.typeshed_builtins.builtins.property.__delete__": [],
    "invoke.typeshed_builtins.builtins.abs": [],
    "invoke.typeshed_builtins.builtins.all": [],
    "invoke.typeshed_builtins.builtins.any": [],
    "invoke.typeshed_builtins.builtins.ascii": [],
    "invoke.typeshed_builtins.builtins.bin": [],
    "invoke.typeshed_builtins.builtins.breakpoint": [],
    "invoke.typeshed_builtins.builtins.callable": [],
    "invoke.typeshed_builtins.builtins.chr": [],
    "invoke.typeshed_builtins.builtins._PathLike.__fspath__": [],
    "invoke.typeshed_builtins.builtins.aiter": [],
    "invoke.typeshed_builtins.builtins._SupportsSynchronousAnext.__anext__": [],
    "invoke.typeshed_builtins.builtins.anext": [],
    "invoke.typeshed_builtins.builtins.compile": [],
    "invoke.typeshed_builtins.builtins.copyright": [],
    "invoke.typeshed_builtins.builtins.credits": [],
    "invoke.typeshed_builtins.builtins.delattr": [],
    "invoke.typeshed_builtins.builtins.dir": [],
    "invoke.typeshed_builtins.builtins.divmod": [],
    "invoke.typeshed_builtins.builtins.eval": [],
    "invoke.typeshed_builtins.builtins.exec": [],
    "invoke.typeshed_builtins.builtins.exit": [],
    "invoke.typeshed_builtins.builtins.filter": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.filter.__new__": [],
    "invoke.typeshed_builtins.builtins.filter.__iter__": [],
    "invoke.typeshed_builtins.builtins.filter.__next__": [],
    "invoke.typeshed_builtins.builtins.format": [],
    "invoke.typeshed_builtins.builtins.getattr": [],
    "invoke.typeshed_builtins.builtins.globals": [],
    "invoke.typeshed_builtins.builtins.hasattr": [],
    "invoke.typeshed_builtins.builtins.hash": [],
    "invoke.typeshed_builtins.builtins.help": [],
    "invoke.typeshed_builtins.builtins.hex": [],
    "invoke.typeshed_builtins.builtins.id": [],
    "invoke.typeshed_builtins.builtins.input": [],
    "invoke.typeshed_builtins.builtins._GetItemIterable.__getitem__": [],
    "invoke.typeshed_builtins.builtins.iter": [],
    "invoke.typeshed_builtins.builtins.isinstance": [],
    "invoke.typeshed_builtins.builtins.issubclass": [],
    "invoke.typeshed_builtins.builtins.len": [],
    "invoke.typeshed_builtins.builtins.license": [],
    "invoke.typeshed_builtins.builtins.locals": [],
    "invoke.typeshed_builtins.builtins.map": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.map.__new__": [],
    "invoke.typeshed_builtins.builtins.map.__iter__": [],
    "invoke.typeshed_builtins.builtins.map.__next__": [],
    "invoke.typeshed_builtins.builtins.max": [],
    "invoke.typeshed_builtins.builtins.min": [],
    "invoke.typeshed_builtins.builtins.next": [],
    "invoke.typeshed_builtins.builtins.oct": [],
    "invoke.typeshed_builtins.builtins.open": [],
    "invoke.typeshed_builtins.builtins.ord": [],
    "invoke.typeshed_builtins.builtins.print": [],
    "invoke.typeshed_builtins.builtins._SupportsPow2.__pow__": [],
    "invoke.typeshed_builtins.builtins._SupportsPow3NoneOnly.__pow__": [],
    "invoke.typeshed_builtins.builtins._SupportsPow3.__pow__": [],
    "invoke.typeshed_builtins.builtins.pow": [],
    "invoke.typeshed_builtins.builtins.quit": [],
    "invoke.typeshed_builtins.builtins.reversed": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.reversed.__init__": [],
    "invoke.typeshed_builtins.builtins.reversed.__iter__": [],
    "invoke.typeshed_builtins.builtins.reversed.__next__": [],
    "invoke.typeshed_builtins.builtins.reversed.__length_hint__": [],
    "invoke.typeshed_builtins.builtins.repr": [],
    "invoke.typeshed_builtins.builtins._SupportsRound1.__round__": [],
    "invoke.typeshed_builtins.builtins._SupportsRound2.__round__": [],
    "invoke.typeshed_builtins.builtins.round": [],
    "invoke.typeshed_builtins.builtins.setattr": [],
    "invoke.typeshed_builtins.builtins.sorted": [],
    "invoke.typeshed_builtins.builtins.sum": [],
    "invoke.typeshed_builtins.builtins.vars": [],
    "invoke.typeshed_builtins.builtins.zip": ["typing.overload"],
    "invoke.typeshed_builtins.builtins.zip.__new__": [],
    "invoke.typeshed_builtins.builtins.zip.__iter__": [],
    "invoke.typeshed_builtins.builtins.zip.__next__": [],
    "invoke.typeshed_builtins.builtins.__import__": [],
    "invoke.typeshed_builtins.builtins.__build_class__": [],
    "invoke.typeshed_builtins.builtins.BaseException.__init__": [],
    "invoke.typeshed_builtins.builtins.BaseException.__setstate__": [],
    "invoke.typeshed_builtins.builtins.BaseException.with_traceback": [],
    "invoke.typeshed_builtins.builtins.BaseException.add_note": [],
    "invoke.typeshed_builtins.builtins.AttributeError.__init__": [],
    "invoke.typeshed_builtins.builtins.ImportError.__init__": [],
    "invoke.typeshed_builtins.builtins.UnicodeDecodeError.__init__": [],
    "invoke.typeshed_builtins.builtins.UnicodeEncodeError.__init__": [],
    "invoke.typeshed_builtins.builtins.UnicodeTranslateError.__init__": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.__new__": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.__init__": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.message": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.exceptions": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.subgroup": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.split": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.derive": [],
    "invoke.typeshed_builtins.builtins.BaseExceptionGroup.__class_getitem__": [],
    "invoke.typeshed_builtins.builtins.ExceptionGroup.__new__": [],
    "invoke.typeshed_builtins.builtins.ExceptionGroup.__init__": [],
    "invoke.typeshed_builtins.builtins.ExceptionGroup": [
        "invoke.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "invoke.typeshed_builtins.builtins.ExceptionGroup.exceptions": [],
    "invoke.typeshed_builtins.builtins.ExceptionGroup.subgroup": [],
    "invoke.typeshed_builtins.builtins.ExceptionGroup.split": [],
    "invoke.main": ["Program"],
    "Program": [],
    "invoke.__main__": ["Program.run"],
    "Program.run": [],
    "invoke.vendor.decorator": [
        "<builtin>.len",
        "re.compile",
        "invoke.vendor.decorator.decorator",
        "collections.namedtuple",
        "inspect.getfullargspec",
    ],
    "invoke.vendor.decorator.get_init": [],
    "invoke.vendor.decorator.getfullargspec": [
        "collections.namedtuple._make",
        "inspect.getargspec",
    ],
    "collections.namedtuple._make": [],
    "invoke.vendor.decorator.getargspec": [
        "collections.namedtuple",
        "inspect.getfullargspec",
    ],
    "inspect.getfullargspec": [],
    "itertools.count": [],
    "invoke.vendor.decorator.FunctionMaker": ["itertools.count"],
    "invoke.vendor.decorator.FunctionMaker.__init__": [
        "<builtin>.hasattr",
        "<builtin>.TypeError",
        "<builtin>.list",
        "inspect.formatargspec",
        "<builtin>.enumerate",
        "<builtin>.setattr",
        "<builtin>.getattr",
        "inspect.getfullargspec",
        "inspect.isfunction",
    ],
    "inspect.isfunction": [],
    "invoke.vendor.decorator.FunctionMaker.__init__.<lambda1>": [],
    "inspect.formatargspec": [],
    "invoke.vendor.decorator.FunctionMaker.update": [
        "<builtin>.getattr",
        "sys._getframe",
        "sys._getframe.f_globals.get",
    ],
    "sys._getframe.f_globals.get": [],
    "invoke.vendor.decorator.FunctionMaker.make": [
        "re.compile.match",
        "re.compile.match.group",
        "<builtin>.vars",
        "<builtin>.SyntaxError",
        "<builtin>.NameError",
        "<builtin>.exec",
        "<builtin>.set",
        "<builtin>.compile",
        "<builtin>.print",
        "<builtin>.next",
        "invoke.vendor.decorator.FunctionMaker.update",
    ],
    "<builtin>.SyntaxError": [],
    "re.compile.match.group": [],
    "<builtin>.NameError": [],
    "<builtin>.compile": [],
    "invoke.vendor.decorator.FunctionMaker.create": [
        "<builtin>.isinstance",
        "invoke.vendor.decorator.FunctionMaker.__init__",
    ],
    "invoke.vendor.decorator.decorate": [
        "<builtin>.hasattr",
        "invoke.vendor.decorator.FunctionMaker.create",
        "<builtin>.dict",
    ],
    "invoke.vendor.decorator.decorator": [
        "contextlib._GeneratorContextManager.__class__.__name__.lower",
        "invoke.vendor.decorator.FunctionMaker.create",
        "inspect.isclass",
        "invoke.vendor.decorator.decorate",
        "<builtin>.dict",
        "contextlib._GeneratorContextManager.__name__.lower",
        "inspect.isfunction",
    ],
    "inspect.isclass": [],
    "contextlib._GeneratorContextManager.__name__.lower": [],
    "contextlib._GeneratorContextManager.__class__.__name__.lower": [],
    "invoke.vendor.decorator.ContextManager.__call__": [
        "invoke.vendor.decorator.FunctionMaker.create",
        "<builtin>.dict",
    ],
    "invoke.vendor.decorator.__init__": [
        "contextlib.GeneratorContextManager.__init__",
        "contextlib._GeneratorContextManager.__init__",
    ],
    "contextlib.GeneratorContextManager.__init__": [],
    "contextlib._GeneratorContextManager.__init__": [],
    "invoke.vendor.decorator.append": ["<builtin>.issubclass", "<builtin>.enumerate"],
    "invoke.vendor.decorator.dispatch_on": [],
    "invoke.vendor.decorator.dispatch_on.check": [
        "<builtin>.TypeError",
        "<builtin>.len",
        "operator.lt",
    ],
    "operator.lt": [],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec": [
        "invoke.vendor.decorator.FunctionMaker.create",
        "<builtin>.dict",
        "<builtin>.NameError",
        "<builtin>.set",
        "inspect.getfullargspec",
    ],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec.vancestors": [
        "<builtin>.range",
        "invoke.vendor.decorator.append",
        "<builtin>.zip",
        "<builtin>.len",
        "<builtin>.issubclass",
        "<builtin>.set",
        "invoke.vendor.decorator.dispatch_on.check",
    ],
    "<builtin>.zip": [],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec.ancestors": [
        "<builtin>.zip",
        "<builtin>.len",
        "<builtin>.type",
        "invoke.vendor.decorator.dispatch_on.check",
        "invoke.vendor.decorator.dispatch_on.gen_func_dec.vancestors",
        "<builtin>.RuntimeError",
    ],
    "<builtin>.RuntimeError": [],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec.register": [
        "invoke.vendor.decorator.dispatch_on.check"
    ],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec.register.dec": [
        "invoke.vendor.decorator.dispatch_on.check",
        "inspect.getfullargspec",
    ],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec.dispatch_info": [
        "itertools.product",
        "invoke.vendor.decorator.dispatch_on.check",
        "invoke.vendor.decorator.dispatch_on.gen_func_dec.ancestors",
        "<builtin>.tuple",
    ],
    "itertools.product": [],
    "invoke.vendor.decorator.dispatch_on.gen_func_dec._dispatch": [
        "itertools.product",
        "<builtin>.type",
        "<builtin>.tuple",
        "invoke.vendor.decorator.dispatch_on.gen_func_dec.ancestors",
        "<builtin>.next",
    ],
}
