{
    "test.conftest": [],
    "test.conftest.pytest_addoption": [],
    "test.conftest.pytest_collection_modifyitems": ["pytest.mark.skip"],
    "pytest.mark.skip": [],
    "test.test_PT_testbot": [],
    "test.test_PT_testbot.test_PT_testbot_1": [
        "test.autotest_bot.TestBot",
        "<builtin>.print",
        "test.autotest_bot.TestBot.eiei",
    ],
    "test.autotest_bot.TestBot": [],
    "test.autotest_bot.TestBot.eiei": [],
    "<builtin>.print": [],
    "sc2.position": [],
    "sc2.position._sign": [],
    "sc2.position.Pointlike.rounded": ["<builtin>.round"],
    "<builtin>.round": [],
    "sc2.position.Pointlike.position": [],
    "sc2.position.Pointlike.distance_to": [
        "itertools.zip_longest",
        "<builtin>.sum",
        "<builtin>.isinstance",
    ],
    "<builtin>.isinstance": [],
    "itertools.zip_longest": [],
    "<builtin>.sum": [],
    "sc2.position.Pointlike.distance_to_point2": [],
    "sc2.position.Pointlike._distance_squared": [],
    "sc2.position.Pointlike.sort_by_distance": ["<builtin>.len", "<builtin>.sorted"],
    "<builtin>.len": [],
    "sc2.position.Pointlike.sort_by_distance.<lambda1>": [
        "sc2.position.Pointlike._distance_squared"
    ],
    "<builtin>.sorted": [],
    "sc2.position.Pointlike.closest": ["<builtin>.len", "<builtin>.isinstance"],
    "sc2.position.Pointlike.distance_to_closest": ["<builtin>.isinstance"],
    "sc2.position.Pointlike.furthest": ["<builtin>.len", "<builtin>.isinstance"],
    "sc2.position.Pointlike.distance_to_furthest": ["<builtin>.isinstance"],
    "sc2.position.Pointlike.offset": ["<builtin>.len", "itertools.zip_longest"],
    "sc2.position.Pointlike.unit_axes_towards": [
        "<builtin>.len",
        "sc2.position._sign",
        "itertools.zip_longest",
    ],
    "sc2.position.Pointlike.towards": [
        "<builtin>.min",
        "<builtin>.len",
        "itertools.zip_longest",
        "sc2.position.Pointlike.distance_to",
    ],
    "<builtin>.min": [],
    "sc2.position.Pointlike.__eq__": [
        "<builtin>.all",
        "<builtin>.abs",
        "<builtin>.isinstance",
        "itertools.zip_longest",
    ],
    "<builtin>.abs": [],
    "<builtin>.all": [],
    "sc2.position.Pointlike.__hash__": [
        "<builtin>.tuple",
        "<builtin>.int",
        "<builtin>.hash",
    ],
    "<builtin>.int": [],
    "<builtin>.tuple": [],
    "<builtin>.hash": [],
    "sc2.position.Point2.from_proto": [],
    "sc2.position.Point2.x": [],
    "sc2.position.Point2.y": [],
    "sc2.position.Point2.to2": [],
    "sc2.position.Point2.to3": [],
    "sc2.position.Point2.distance2_to": ["<builtin>.isinstance"],
    "sc2.position.Point2.random_on_distance": [
        "random.random",
        "math.cos",
        "<builtin>.isinstance",
        "math.sin",
    ],
    "random.random": [],
    "math.cos": [],
    "math.sin": [],
    "sc2.position.Point2.towards_with_random_angle": [
        "math.atan2",
        "random.random",
        "math.cos",
        "math.sin",
    ],
    "math.atan2": [],
    "sc2.position.Point2.circle_intersection": [
        "sc2.position.Pointlike.offset",
        "sc2.position.Pointlike.distance_to",
    ],
    "sc2.position.Point2.neighbors4": [],
    "sc2.position.Point2.neighbors8": [],
    "sc2.position.Point2.negative_offset": [],
    "sc2.position.Point2.__add__": ["sc2.position.Pointlike.offset"],
    "sc2.position.Point2.__sub__": ["sc2.position.Point2.negative_offset"],
    "sc2.position.Point2.__neg__": [],
    "sc2.position.Point2.__abs__": ["math.hypot"],
    "math.hypot": [],
    "sc2.position.Point2.__bool__": [],
    "sc2.position.Point2.__mul__": ["<builtin>.isinstance"],
    "sc2.position.Point2.__rmul__": ["sc2.position.Point2.__mul__"],
    "sc2.position.Point2.__truediv__": ["<builtin>.isinstance"],
    "sc2.position.Point2.is_same_as": ["sc2.position.Pointlike._distance_squared"],
    "sc2.position.Point2.direction_vector": ["sc2.position._sign"],
    "sc2.position.Point2.manhattan_distance": ["<builtin>.abs"],
    "sc2.position.Point2.center": ["<builtin>.len"],
    "sc2.position.Point3.from_proto": [],
    "sc2.position.Point3.z": [],
    "sc2.position.Point3.to3": [],
    "sc2.position.Size.width": [],
    "sc2.position.Size.height": [],
    "sc2.position.Rect.from_proto": [],
    "sc2.position.Rect.x": [],
    "sc2.position.Rect.y": [],
    "sc2.position.Rect.width": [],
    "sc2.position.Rect.height": [],
    "sc2.position.Rect.size": [],
    "sc2.position.Rect.center": [],
    "sc2.position.Rect.offset": [],
    "sc2": [
        "logging.getLogger",
        "pathlib.Path",
        "pathlib.Path.parent.iterdir",
        "sc2.is_submodule",
        "logging.basicConfig",
    ],
    "sc2.is_submodule": [],
    "pathlib.Path": [],
    "pathlib.Path.parent.iterdir": [],
    "logging.basicConfig": [],
    "logging.getLogger": [],
    "sc2.bot_ai": ["logging.getLogger"],
    "sc2.bot_ai.BotAI.__init__": [],
    "sc2.bot_ai.BotAI.enemy_race": ["enum.Enum"],
    "enum.Enum": [],
    "sc2.bot_ai.BotAI.time": [],
    "sc2.bot_ai.BotAI.time_formatted": ["<builtin>.int"],
    "sc2.bot_ai.BotAI.game_info": [],
    "sc2.bot_ai.BotAI.start_location": [],
    "sc2.bot_ai.BotAI.enemy_start_locations": [],
    "sc2.bot_ai.BotAI": [
        "sc2.cache.property_cache_once_per_frame",
        "sc2.cache.property_cache_forever",
    ],
    "sc2.cache.property_cache_once_per_frame": [
        "<builtin>.property",
        "functools.wraps",
    ],
    "sc2.bot_ai.BotAI.known_enemy_units": [],
    "sc2.bot_ai.BotAI.known_enemy_structures": [],
    "sc2.bot_ai.BotAI.main_base_ramp": [
        "<builtin>.min",
        "<builtin>.hasattr",
        "<builtin>.len",
    ],
    "<builtin>.hasattr": [],
    "sc2.bot_ai.BotAI.main_base_ramp.<lambda1>": [],
    "sc2.cache.property_cache_forever": ["<builtin>.property", "functools.wraps"],
    "sc2.bot_ai.BotAI.expansion_locations": [
        "<builtin>.range",
        "<builtin>.min",
        "sc2.bot_ai.BotAI.get_terrain_height",
        "<builtin>.len",
        "<builtin>.all",
    ],
    "sc2.bot_ai.BotAI.get_terrain_height": ["<builtin>.isinstance"],
    "<builtin>.range": [],
    "sc2.bot_ai.BotAI.expansion_locations.<lambda1>": ["<builtin>.sum"],
    "sc2.bot_ai.BotAI.get_available_abilities": [],
    "sc2.bot_ai.BotAI.expand_now": [
        "sc2.bot_ai.BotAI.build",
        "<builtin>.isinstance",
        "sc2.bot_ai.BotAI.get_next_expansion",
    ],
    "sc2.bot_ai.BotAI.get_next_expansion": ["<builtin>.any", "<builtin>.map"],
    "sc2.bot_ai.BotAI.build": [
        "sc2.bot_ai.BotAI.find_placement",
        "sc2.unit.Unit.build",
        "<builtin>.isinstance",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.bot_ai.BotAI.do",
    ],
    "sc2.bot_ai.BotAI.get_next_expansion.is_near_to_expansion": [],
    "<builtin>.map": [],
    "<builtin>.any": [],
    "sc2.bot_ai.BotAI.distribute_workers": [
        "sc2.bot_ai.BotAI.do_actions",
        "<builtin>.range",
        "<builtin>.len",
        "<builtin>.min",
    ],
    "sc2.bot_ai.BotAI.do_actions": [],
    "sc2.bot_ai.BotAI.owned_expansions": [
        "<builtin>.next",
        "sc2.bot_ai.BotAI.owned_expansions.is_near_to_expansion",
    ],
    "sc2.bot_ai.BotAI.owned_expansions.is_near_to_expansion": [],
    "<builtin>.next": [],
    "sc2.bot_ai.BotAI.can_feed": [],
    "sc2.bot_ai.BotAI.can_afford": [
        "sc2.bot_ai.CanAffordWrapper.__init__",
        "<builtin>.isinstance",
        "sc2.bot_ai.BotAI.can_feed",
    ],
    "sc2.bot_ai.CanAffordWrapper.__init__": [],
    "sc2.bot_ai.BotAI.can_cast": [
        "<builtin>.type",
        "<builtin>.isinstance",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "<builtin>.type": [],
    "sc2.bot_ai.BotAI.select_build_worker": ["<builtin>.len"],
    "sc2.bot_ai.BotAI.can_place": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI.find_placement": [
        "<builtin>.range",
        "sc2.position.Pointlike.offset",
        "<builtin>.min",
        "random.choice",
        "sc2.bot_ai.BotAI.can_place",
        "<builtin>.zip",
        "<builtin>.isinstance",
    ],
    "<builtin>.zip": [],
    "random.choice": [],
    "sc2.bot_ai.BotAI.find_placement.<lambda1>": [],
    "sc2.bot_ai.BotAI.already_pending_upgrade": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI.already_pending": [
        "<builtin>.len",
        "sc2.bot_ai.BotAI.already_pending_upgrade",
        "<builtin>.isinstance",
        "<builtin>.sum",
    ],
    "sc2.unit.Unit.build": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.bot_ai.BotAI.do": [
        "logging.getLogger.warning",
        "logging.getLogger.error",
        "sc2.bot_ai.BotAI.can_afford",
    ],
    "logging.getLogger.warning": [],
    "logging.getLogger.error": [],
    "sc2.bot_ai.BotAI.chat_send": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI.in_placement_grid": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI.in_pathing_grid": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI.is_visible": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI.has_creep": ["<builtin>.isinstance"],
    "sc2.bot_ai.BotAI._prepare_start": [
        "enum.Enum",
        "sc2.units.Units.__init__",
        "<builtin>.dict",
    ],
    "<builtin>.dict": [],
    "sc2.units.Units.__init__": ["<builtin>.super"],
    "sc2.bot_ai.BotAI._prepare_first_step": [],
    "sc2.bot_ai.BotAI._prepare_step": [],
    "sc2.bot_ai.BotAI.issue_events": [
        "sc2.bot_ai.BotAI._issue_building_complete_event",
        "sc2.bot_ai.BotAI._issue_unit_dead_events",
        "sc2.bot_ai.BotAI._issue_unit_added_events",
    ],
    "sc2.bot_ai.BotAI._issue_unit_dead_events": ["sc2.bot_ai.BotAI.on_unit_destroyed"],
    "sc2.bot_ai.BotAI._issue_unit_added_events": [
        "sc2.bot_ai.BotAI.on_building_construction_started",
        "sc2.bot_ai.BotAI.on_unit_created",
    ],
    "sc2.bot_ai.BotAI._issue_building_complete_event": [
        "sc2.bot_ai.BotAI.on_building_construction_complete"
    ],
    "sc2.bot_ai.BotAI.on_unit_created": [],
    "sc2.bot_ai.BotAI.on_building_construction_started": [],
    "sc2.bot_ai.BotAI.on_building_construction_complete": [],
    "sc2.bot_ai.BotAI.on_unit_destroyed": [],
    "sc2.bot_ai.BotAI.on_start": [],
    "sc2.bot_ai.BotAI.on_step": [],
    "sc2.bot_ai.BotAI.on_end": [],
    "sc2.bot_ai.CanAffordWrapper.__bool__": [],
    "sc2.bot_ai.CanAffordWrapper.action_result": [],
    "sc2.game_state": [],
    "sc2.game_state.Blip.__init__": [],
    "sc2.game_state.Blip.is_blip": [],
    "sc2.game_state.Blip.is_snapshot": [],
    "sc2.game_state.Blip.is_visible": [],
    "sc2.game_state.Blip.alliance": [],
    "sc2.game_state.Blip.is_mine": [],
    "sc2.game_state.Blip.is_enemy": [],
    "sc2.game_state.Blip.position": [],
    "sc2.game_state.Blip.position3d": ["sc2.position.Point3.from_proto"],
    "sc2.game_state.Common.__init__": [],
    "sc2.game_state.Common.__getattr__": ["<builtin>.getattr", "<builtin>.int"],
    "<builtin>.getattr": [],
    "sc2.game_state.EffectData.__init__": [],
    "sc2.game_state.EffectData.id": ["enum.Enum.__init__"],
    "enum.Enum.__init__": [],
    "sc2.game_state.EffectData.positions": [
        "sc2.position.Point3.from_proto",
        "sc2.position.Point2.from_proto",
    ],
    "sc2.game_state.GameState.__init__": [
        "enum.Enum.__init__",
        "<builtin>.range",
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.power_source.PsionicMatrix.from_proto",
        "sc2.score.ScoreDetails.__init__",
        "sc2.game_state.Common.__init__",
        "sc2.units.Units.from_proto",
        "sc2.game_state.Blip.__init__",
        "sc2.game_state.EffectData.__init__",
    ],
    "sc2.power_source.PsionicMatrix.from_proto": [
        "sc2.power_source.PowerSource.from_proto",
        "sc2.power_source.PsionicMatrix.__init__",
    ],
    "sc2.score.ScoreDetails.__init__": [],
    "sc2.units.Units.from_proto": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
    ],
    "sc2.pixel_map.PixelMap.__init__": ["<builtin>.len", "<builtin>.bytearray"],
    "sc2.score": [],
    "sc2.score.ScoreDetails.score_type": [],
    "sc2.score.ScoreDetails.score": [],
    "sc2.score.ScoreDetails.idle_production_time": [],
    "sc2.score.ScoreDetails.idle_worker_time": [],
    "sc2.score.ScoreDetails.total_value_units": [],
    "sc2.score.ScoreDetails.total_value_structures": [],
    "sc2.score.ScoreDetails.killed_value_units": [],
    "sc2.score.ScoreDetails.killed_value_structures": [],
    "sc2.score.ScoreDetails.collected_minerals": [],
    "sc2.score.ScoreDetails.collected_vespene": [],
    "sc2.score.ScoreDetails.collection_rate_minerals": [],
    "sc2.score.ScoreDetails.collection_rate_vespene": [],
    "sc2.score.ScoreDetails.spent_minerals": [],
    "sc2.score.ScoreDetails.spent_vespene": [],
    "sc2.score.ScoreDetails.food_used_none": [],
    "sc2.score.ScoreDetails.food_used_army": [],
    "sc2.score.ScoreDetails.food_used_economy": [],
    "sc2.score.ScoreDetails.food_used_technology": [],
    "sc2.score.ScoreDetails.food_used_upgrade": [],
    "sc2.score.ScoreDetails.killed_minerals_none": [],
    "sc2.score.ScoreDetails.killed_minerals_army": [],
    "sc2.score.ScoreDetails.killed_minerals_economy": [],
    "sc2.score.ScoreDetails.killed_minerals_technology": [],
    "sc2.score.ScoreDetails.killed_minerals_upgrade": [],
    "sc2.score.ScoreDetails.killed_vespene_none": [],
    "sc2.score.ScoreDetails.killed_vespene_army": [],
    "sc2.score.ScoreDetails.killed_vespene_economy": [],
    "sc2.score.ScoreDetails.killed_vespene_technology": [],
    "sc2.score.ScoreDetails.killed_vespene_upgrade": [],
    "sc2.score.ScoreDetails.lost_minerals_none": [],
    "sc2.score.ScoreDetails.lost_minerals_army": [],
    "sc2.score.ScoreDetails.lost_minerals_economy": [],
    "sc2.score.ScoreDetails.lost_minerals_technology": [],
    "sc2.score.ScoreDetails.lost_minerals_upgrade": [],
    "sc2.score.ScoreDetails.lost_vespene_none": [],
    "sc2.score.ScoreDetails.lost_vespene_army": [],
    "sc2.score.ScoreDetails.lost_vespene_economy": [],
    "sc2.score.ScoreDetails.lost_vespene_technology": [],
    "sc2.score.ScoreDetails.lost_vespene_upgrade": [],
    "sc2.score.ScoreDetails.friendly_fire_minerals_none": [],
    "sc2.score.ScoreDetails.friendly_fire_minerals_army": [],
    "sc2.score.ScoreDetails.friendly_fire_minerals_economy": [],
    "sc2.score.ScoreDetails.friendly_fire_minerals_technology": [],
    "sc2.score.ScoreDetails.friendly_fire_minerals_upgrade": [],
    "sc2.score.ScoreDetails.friendly_fire_vespene_none": [],
    "sc2.score.ScoreDetails.friendly_fire_vespene_army": [],
    "sc2.score.ScoreDetails.friendly_fire_vespene_economy": [],
    "sc2.score.ScoreDetails.friendly_fire_vespene_technology": [],
    "sc2.score.ScoreDetails.friendly_fire_vespene_upgrade": [],
    "sc2.score.ScoreDetails.used_minerals_none": [],
    "sc2.score.ScoreDetails.used_minerals_army": [],
    "sc2.score.ScoreDetails.used_minerals_economy": [],
    "sc2.score.ScoreDetails.used_minerals_technology": [],
    "sc2.score.ScoreDetails.used_minerals_upgrade": [],
    "sc2.score.ScoreDetails.used_vespene_none": [],
    "sc2.score.ScoreDetails.used_vespene_army": [],
    "sc2.score.ScoreDetails.used_vespene_economy": [],
    "sc2.score.ScoreDetails.used_vespene_technology": [],
    "sc2.score.ScoreDetails.used_vespene_upgrade": [],
    "sc2.score.ScoreDetails.total_used_minerals_none": [],
    "sc2.score.ScoreDetails.total_used_minerals_army": [],
    "sc2.score.ScoreDetails.total_used_minerals_economy": [],
    "sc2.score.ScoreDetails.total_used_minerals_technology": [],
    "sc2.score.ScoreDetails.total_used_minerals_upgrade": [],
    "sc2.score.ScoreDetails.total_used_vespene_none": [],
    "sc2.score.ScoreDetails.total_used_vespene_army": [],
    "sc2.score.ScoreDetails.total_used_vespene_economy": [],
    "sc2.score.ScoreDetails.total_used_vespene_technology": [],
    "sc2.score.ScoreDetails.total_used_vespene_upgrade": [],
    "sc2.score.ScoreDetails.total_damage_dealt_life": [],
    "sc2.score.ScoreDetails.total_damage_dealt_shields": [],
    "sc2.score.ScoreDetails.total_damage_dealt_energy": [],
    "sc2.score.ScoreDetails.total_damage_taken_life": [],
    "sc2.score.ScoreDetails.total_damage_taken_shields": [],
    "sc2.score.ScoreDetails.total_damage_taken_energy": [],
    "sc2.score.ScoreDetails.total_healed_life": [],
    "sc2.score.ScoreDetails.total_healed_shields": [],
    "sc2.score.ScoreDetails.total_healed_energy": [],
    "sc2.ids.upgrade_id": ["<builtin>.globals"],
    "<builtin>.globals": [],
    "sc2.units": [],
    "sc2.unit.PassengerUnit.__init__": ["<builtin>.isinstance"],
    "<builtin>.super": [],
    "sc2.units.Units.__call__": ["sc2.units.UnitSelection.__init__"],
    "sc2.units.UnitSelection.__init__": [
        "<builtin>.all",
        "<builtin>.super",
        "sc2.units.UnitSelection.matches",
        "<builtin>.isinstance",
    ],
    "sc2.units.Units.select": ["sc2.units.UnitSelection.__init__"],
    "sc2.units.Units.copy": ["sc2.units.Units.subgroup"],
    "sc2.units.Units.subgroup": ["<builtin>.list", "sc2.units.Units.__init__"],
    "sc2.units.Units.__or__": ["sc2.units.Units.__init__"],
    "sc2.units.Units.__and__": ["sc2.units.Units.__init__"],
    "sc2.units.Units.__sub__": ["sc2.units.Units.__init__"],
    "sc2.units.Units.__hash__": ["<builtin>.hash"],
    "sc2.units.Units.amount": ["<builtin>.len"],
    "sc2.units.Units.empty": ["<builtin>.bool"],
    "<builtin>.bool": [],
    "sc2.units.Units.exists": ["<builtin>.bool"],
    "sc2.units.Units.find_by_tag": [],
    "sc2.units.Units.by_tag": ["<builtin>.KeyError", "sc2.units.Units.find_by_tag"],
    "<builtin>.KeyError": [],
    "sc2.units.Units.first": [],
    "sc2.units.Units.take": ["<builtin>.len"],
    "sc2.units.Units.random": [],
    "sc2.units.Units.random_or": [],
    "sc2.units.Units.random_group_of": ["sc2.units.Units.subgroup"],
    "sc2.units.Units.in_attack_range_of": ["sc2.units.Units.filter"],
    "sc2.units.Units.in_attack_range_of.<lambda1>": ["sc2.unit.Unit.target_in_range"],
    "sc2.unit.Unit.target_in_range": [],
    "sc2.units.Units.filter": ["sc2.units.Units.subgroup", "sc2.units.Units.filter"],
    "sc2.units.Units.closest_distance_to": [
        "sc2.position.Pointlike.distance_to_closest",
        "<builtin>.isinstance",
    ],
    "sc2.units.Units.furthest_distance_to": [
        "<builtin>.isinstance",
        "sc2.position.Pointlike.distance_to_furthest",
    ],
    "sc2.units.Units.closest_to": [
        "<builtin>.isinstance",
        "sc2.position.Pointlike.closest",
    ],
    "sc2.units.Units.furthest_to": [
        "<builtin>.isinstance",
        "sc2.position.Pointlike.furthest",
    ],
    "sc2.units.Units.closer_than": ["<builtin>.isinstance", "sc2.units.Units.filter"],
    "sc2.units.Units.closer_than.<lambda1>": [],
    "sc2.units.Units.further_than": ["<builtin>.isinstance", "sc2.units.Units.filter"],
    "sc2.units.Units.further_than.<lambda1>": [],
    "<builtin>.list": [],
    "sc2.units.Units.sorted": [
        "sc2.units.Units.subgroup",
        "<builtin>.len",
        "sc2.units.Units.sorted",
    ],
    "sc2.units.Units.sorted_by_distance_to": [
        "<builtin>.len",
        "sc2.units.Units.sorted",
    ],
    "sc2.units.Units.sorted_by_distance_to.<lambda1>": [],
    "sc2.units.Units.tags_in": [
        "<builtin>.isinstance",
        "sc2.units.Units.filter",
        "<builtin>.set",
    ],
    "<builtin>.set": [],
    "sc2.units.Units.tags_in.<lambda1>": [],
    "sc2.units.Units.tags_not_in": [
        "<builtin>.isinstance",
        "sc2.units.Units.filter",
        "<builtin>.set",
    ],
    "sc2.units.Units.tags_not_in.<lambda1>": [],
    "sc2.units.Units.of_type": [
        "<builtin>.isinstance",
        "sc2.units.Units.filter",
        "<builtin>.set",
    ],
    "sc2.units.Units.of_type.<lambda1>": [],
    "sc2.units.Units.exclude_type": [
        "<builtin>.isinstance",
        "sc2.units.Units.filter",
        "<builtin>.set",
    ],
    "sc2.units.Units.exclude_type.<lambda1>": [],
    "sc2.units.Units.same_tech": [
        "<builtin>.isinstance",
        "sc2.units.Units.filter",
        "<builtin>.set",
    ],
    "sc2.units.Units.same_tech.<lambda1>": ["<builtin>.any"],
    "sc2.units.Units.same_unit": [
        "<builtin>.isinstance",
        "sc2.units.Units.filter",
        "<builtin>.set",
    ],
    "sc2.units.Units.same_unit.<lambda1>": [],
    "sc2.units.Units.center": ["<builtin>.sum"],
    "sc2.units.Units.selected": ["sc2.units.Units.filter"],
    "sc2.units.Units.selected.<lambda1>": [],
    "sc2.units.Units.tags": [],
    "sc2.units.Units.ready": ["sc2.units.Units.filter"],
    "sc2.units.Units.ready.<lambda1>": [],
    "sc2.units.Units.not_ready": ["sc2.units.Units.filter"],
    "sc2.units.Units.not_ready.<lambda1>": [],
    "sc2.units.Units.noqueue": ["sc2.units.Units.filter"],
    "sc2.units.Units.noqueue.<lambda1>": [],
    "sc2.units.Units.idle": ["sc2.units.Units.filter"],
    "sc2.units.Units.idle.<lambda1>": [],
    "sc2.units.Units.owned": ["sc2.units.Units.filter"],
    "sc2.units.Units.owned.<lambda1>": [],
    "sc2.units.Units.enemy": ["sc2.units.Units.filter"],
    "sc2.units.Units.enemy.<lambda1>": [],
    "sc2.units.Units.flying": ["sc2.units.Units.filter"],
    "sc2.units.Units.flying.<lambda1>": [],
    "sc2.units.Units.not_flying": ["sc2.units.Units.filter"],
    "sc2.units.Units.not_flying.<lambda1>": [],
    "sc2.units.Units.structure": ["sc2.units.Units.filter"],
    "sc2.units.Units.structure.<lambda1>": [],
    "sc2.units.Units.not_structure": ["sc2.units.Units.filter"],
    "sc2.units.Units.not_structure.<lambda1>": [],
    "sc2.units.Units.gathering": ["sc2.units.Units.filter"],
    "sc2.units.Units.gathering.<lambda1>": [],
    "sc2.units.Units.returning": ["sc2.units.Units.filter"],
    "sc2.units.Units.returning.<lambda1>": [],
    "sc2.units.Units.collecting": ["sc2.units.Units.filter"],
    "sc2.units.Units.collecting.<lambda1>": [],
    "sc2.units.Units.visible": ["sc2.units.Units.filter"],
    "sc2.units.Units.visible.<lambda1>": [],
    "sc2.units.Units.mineral_field": ["sc2.units.Units.filter"],
    "sc2.units.Units.mineral_field.<lambda1>": [],
    "sc2.units.Units.vespene_geyser": ["sc2.units.Units.filter"],
    "sc2.units.Units.vespene_geyser.<lambda1>": [],
    "sc2.units.Units.prefer_idle": ["sc2.units.Units.sorted"],
    "sc2.units.Units.prefer_idle.<lambda1>": [],
    "sc2.units.Units.prefer_close_to": ["sc2.units.Units.sorted_by_distance_to"],
    "sc2.units.UnitSelection.matches": ["<builtin>.isinstance"],
    "sc2.unit": [],
    "sc2.unit.PassengerUnit.__repr__": [],
    "sc2.unit.PassengerUnit.type_id": ["enum.Enum.__init__"],
    "sc2.unit.PassengerUnit": ["sc2.cache.property_immutable_cache"],
    "sc2.cache.property_immutable_cache": ["<builtin>.property", "functools.wraps"],
    "sc2.unit.PassengerUnit._type_data": [],
    "sc2.unit.PassengerUnit.name": [],
    "sc2.unit.PassengerUnit.race": ["enum.Enum"],
    "sc2.unit.PassengerUnit.tag": [],
    "sc2.unit.PassengerUnit.is_structure": [],
    "sc2.unit.PassengerUnit.is_light": [],
    "sc2.unit.PassengerUnit.is_armored": [],
    "sc2.unit.PassengerUnit.is_biological": [],
    "sc2.unit.PassengerUnit.is_mechanical": [],
    "sc2.unit.PassengerUnit.is_robotic": [],
    "sc2.unit.PassengerUnit.is_massive": [],
    "sc2.unit.PassengerUnit.is_psionic": [],
    "sc2.unit.PassengerUnit.cargo_size": [],
    "sc2.unit.PassengerUnit._weapons": ["<builtin>.hasattr"],
    "sc2.unit.PassengerUnit.can_attack": ["<builtin>.bool"],
    "sc2.unit.PassengerUnit.can_attack_ground": ["<builtin>.next"],
    "sc2.unit.PassengerUnit.ground_dps": ["<builtin>.next"],
    "sc2.unit.PassengerUnit.ground_range": ["<builtin>.next"],
    "sc2.unit.PassengerUnit.can_attack_air": ["<builtin>.next"],
    "sc2.unit.PassengerUnit.air_dps": ["<builtin>.next"],
    "sc2.unit.PassengerUnit.air_range": ["<builtin>.next"],
    "sc2.unit.PassengerUnit.bonus_damage": [],
    "sc2.unit.PassengerUnit.armor": [],
    "sc2.unit.PassengerUnit.sight_range": [],
    "sc2.unit.PassengerUnit.movement_speed": [],
    "sc2.unit.PassengerUnit.health": [],
    "sc2.unit.PassengerUnit.health_max": [],
    "sc2.unit.PassengerUnit.health_percentage": [],
    "sc2.unit.PassengerUnit.shield": [],
    "sc2.unit.PassengerUnit.shield_max": [],
    "sc2.unit.PassengerUnit.shield_percentage": [],
    "sc2.unit.PassengerUnit.energy": [],
    "sc2.unit.PassengerUnit.energy_max": [],
    "sc2.unit.PassengerUnit.energy_percentage": [],
    "sc2.unit.Unit": [
        "sc2.cache.property_mutable_cache",
        "sc2.cache.property_immutable_cache",
    ],
    "sc2.unit.Unit.is_snapshot": [],
    "sc2.unit.Unit.is_visible": [],
    "sc2.unit.Unit.alliance": [],
    "sc2.unit.Unit.is_mine": [],
    "sc2.unit.Unit.is_enemy": [],
    "sc2.unit.Unit.owner_id": [],
    "sc2.unit.Unit.position": [],
    "sc2.unit.Unit.position3d": ["sc2.position.Point3.from_proto"],
    "sc2.unit.Unit.distance_to": ["<builtin>.isinstance"],
    "sc2.unit.Unit.facing": [],
    "sc2.unit.Unit.radius": [],
    "sc2.unit.Unit.detect_range": [],
    "sc2.unit.Unit.radar_range": [],
    "sc2.unit.Unit.build_progress": [],
    "sc2.unit.Unit.is_ready": [],
    "sc2.unit.Unit.cloak": [],
    "sc2.unit.Unit.is_cloaked": [],
    "sc2.unit.Unit.is_blip": [],
    "sc2.unit.Unit.is_powered": [],
    "sc2.unit.Unit.is_burrowed": [],
    "sc2.unit.Unit.is_flying": [],
    "sc2.unit.Unit.is_psionic": [],
    "sc2.unit.Unit.is_mineral_field": [],
    "sc2.unit.Unit.is_vespene_geyser": [],
    "sc2.unit.Unit.tech_alias": [],
    "sc2.unit.Unit.unit_alias": [],
    "sc2.unit.Unit.mineral_contents": [],
    "sc2.unit.Unit.vespene_contents": [],
    "sc2.unit.Unit.has_vespene": ["<builtin>.bool"],
    "sc2.unit.Unit.weapon_cooldown": [],
    "sc2.unit.Unit.has_cargo": ["<builtin>.bool"],
    "sc2.unit.Unit.cargo_used": [],
    "sc2.unit.Unit.cargo_max": [],
    "sc2.cache.property_mutable_cache": ["<builtin>.property", "functools.wraps"],
    "sc2.unit.Unit.passengers": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.passengers_tags": [],
    "sc2.unit.Unit.is_carrying_minerals": ["<builtin>.any"],
    "sc2.unit.Unit.is_carrying_vespene": ["<builtin>.any"],
    "sc2.unit.Unit.is_selected": [],
    "sc2.unit.Unit.orders": ["sc2.unit.UnitOrder.from_proto"],
    "sc2.unit.UnitOrder.from_proto": ["sc2.unit.UnitOrder.__init__"],
    "sc2.unit.Unit.noqueue": [],
    "sc2.unit.Unit.is_moving": [],
    "sc2.unit.Unit.is_attacking": [],
    "sc2.unit.Unit.is_patrolling": [],
    "sc2.unit.Unit.is_gathering": [],
    "sc2.unit.Unit.is_returning": [],
    "sc2.unit.Unit.is_collecting": [],
    "sc2.unit.Unit.is_constructing_scv": [],
    "sc2.unit.Unit.is_repairing": [],
    "sc2.unit.Unit.order_target": [
        "sc2.position.Point3.from_proto",
        "<builtin>.isinstance",
        "sc2.position.Point2.from_proto",
    ],
    "sc2.unit.Unit.is_idle": [],
    "sc2.unit.Unit.add_on_tag": [],
    "sc2.unit.Unit.add_on_land_position": [],
    "sc2.unit.Unit.has_add_on": [],
    "sc2.unit.Unit.assigned_harvesters": [],
    "sc2.unit.Unit.ideal_harvesters": [],
    "sc2.unit.Unit.surplus_harvesters": [],
    "sc2.unit.Unit.train": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.research": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.has_buff": ["<builtin>.isinstance"],
    "sc2.unit.Unit.warp_in": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.attack": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.gather": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.return_resource": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.move": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.scan_move": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.hold_position": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.stop": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.patrol": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.repair": ["sc2.unit.PassengerUnit.__init__"],
    "sc2.unit.Unit.__hash__": ["<builtin>.hash"],
    "sc2.unit.Unit.__call__": ["sc2.unit_command.UnitCommand.__init__"],
    "sc2.unit_command.UnitCommand.__init__": ["<builtin>.isinstance"],
    "sc2.unit.UnitOrder.__init__": [],
    "sc2.unit.UnitOrder.__repr__": [],
    "sc2.ids.buff_id": ["<builtin>.globals"],
    "sc2.cache": [],
    "sc2.cache.cache_forever": ["functools.wraps"],
    "functools.wraps": [],
    "sc2.cache.cache_forever.inner": [],
    "sc2.cache.property_cache_forever.inner": ["sc2.bot_ai.BotAI.expansion_locations"],
    "<builtin>.property": [],
    "sc2.cache.property_cache_once_per_frame.inner": [
        "sc2.bot_ai.BotAI.known_enemy_units",
        "sc2.bot_ai.BotAI.known_enemy_structures",
    ],
    "sc2.cache.property_immutable_cache.inner": [
        "sc2.unit.PassengerUnit.health_percentage",
        "sc2.unit.Unit.weapon_cooldown",
        "sc2.unit.PassengerUnit.is_biological",
        "sc2.unit.Unit.is_carrying_vespene",
        "sc2.unit.Unit.position3d",
        "sc2.unit.PassengerUnit.shield_percentage",
        "sc2.unit.Unit.is_moving",
        "sc2.unit.Unit.is_collecting",
        "sc2.unit.PassengerUnit.energy_percentage",
        "sc2.unit.Unit.add_on_tag",
        "sc2.unit.Unit.is_selected",
        "sc2.unit.Unit.noqueue",
        "sc2.unit.PassengerUnit.race",
        "sc2.unit.Unit.is_idle",
        "sc2.unit.Unit.is_vespene_geyser",
        "sc2.unit.PassengerUnit.shield_max",
        "sc2.unit.PassengerUnit.is_armored",
        "sc2.unit.PassengerUnit.is_psionic",
        "sc2.unit.Unit.has_cargo",
        "sc2.unit.PassengerUnit.is_structure",
        "sc2.unit.Unit.is_constructing_scv",
        "sc2.unit.Unit.add_on_land_position",
        "sc2.unit.Unit.has_vespene",
        "sc2.unit.Unit.mineral_contents",
        "sc2.unit.Unit.is_flying",
        "sc2.unit.Unit.vespene_contents",
        "sc2.unit.PassengerUnit.movement_speed",
        "sc2.unit.Unit.unit_alias",
        "sc2.unit.PassengerUnit.can_attack_ground",
        "sc2.unit.PassengerUnit._weapons",
        "sc2.unit.PassengerUnit.health_max",
        "sc2.unit.Unit.owner_id",
        "sc2.unit.Unit.is_mine",
        "sc2.unit.Unit.surplus_harvesters",
        "sc2.unit.PassengerUnit.cargo_size",
        "sc2.unit.Unit.assigned_harvesters",
        "sc2.unit.PassengerUnit.is_robotic",
        "sc2.unit.PassengerUnit.air_dps",
        "sc2.unit.PassengerUnit.energy_max",
        "sc2.unit.PassengerUnit.health",
        "sc2.unit.Unit.is_mineral_field",
        "sc2.unit.Unit.is_returning",
        "sc2.unit.Unit.radar_range",
        "sc2.unit.Unit.is_snapshot",
        "sc2.unit.Unit.is_carrying_minerals",
        "sc2.unit.Unit.is_visible",
        "sc2.unit.PassengerUnit.sight_range",
        "sc2.unit.PassengerUnit.name",
        "sc2.unit.PassengerUnit.is_mechanical",
        "sc2.unit.Unit.cargo_used",
        "sc2.unit.PassengerUnit.shield",
        "sc2.unit.PassengerUnit.armor",
        "sc2.unit.PassengerUnit.is_light",
        "sc2.unit.Unit.ideal_harvesters",
        "sc2.unit.Unit.is_patrolling",
        "sc2.unit.PassengerUnit.air_range",
        "sc2.unit.Unit.is_psionic",
        "sc2.unit.PassengerUnit.tag",
        "sc2.unit.Unit.is_ready",
        "sc2.unit.PassengerUnit.energy",
        "sc2.unit.Unit.is_enemy",
        "sc2.unit.Unit.radius",
        "sc2.unit.PassengerUnit.can_attack_air",
        "sc2.unit.Unit.is_repairing",
        "sc2.unit.Unit.order_target",
        "sc2.unit.Unit.cloak",
        "sc2.unit.Unit.alliance",
        "sc2.unit.Unit.build_progress",
        "sc2.unit.Unit.is_blip",
        "sc2.unit.PassengerUnit.is_massive",
        "sc2.unit.Unit.position",
        "sc2.unit.Unit.has_add_on",
        "sc2.unit.Unit.is_attacking",
        "sc2.unit.Unit.is_burrowed",
        "sc2.unit.Unit.is_gathering",
        "sc2.unit.PassengerUnit.ground_range",
        "sc2.unit.Unit.is_cloaked",
        "sc2.unit.PassengerUnit.ground_dps",
        "sc2.unit.PassengerUnit._type_data",
        "sc2.unit.Unit.cargo_max",
        "sc2.unit.PassengerUnit.can_attack",
        "sc2.unit.PassengerUnit.bonus_damage",
        "sc2.unit.Unit.detect_range",
        "sc2.unit.Unit.is_powered",
        "sc2.unit.Unit.facing",
    ],
    "sc2.cache.property_mutable_cache.inner": [
        "sc2.unit.Unit.passengers_tags",
        "sc2.unit.Unit.passengers",
        "sc2.unit.Unit.orders",
    ],
    "sc2.game_data": [],
    "sc2.game_data.split_camel_case": ["<builtin>.list", "functools.reduce"],
    "sc2.game_data.split_camel_case.<lambda1>": [],
    "functools.reduce": [],
    "sc2.game_data.GameData.__init__": [
        "sc2.game_data.UpgradeData.__init__",
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.AbilityData.__init__",
        "<builtin>.set",
    ],
    "sc2.game_data.AbilityData.__init__": [],
    "sc2.game_data.UnitTypeData.__init__": [],
    "sc2.game_data.UpgradeData.__init__": [],
    "functools.lru_cache": [],
    "sc2.game_data.GameData": ["functools.lru_cache"],
    "sc2.game_data.GameData.calculate_ability_cost": [
        "sc2.game_data.Cost.__init__",
        "<builtin>.isinstance",
        "sc2.game_data.AbilityData.id_exists",
    ],
    "sc2.game_data.AbilityData.id_exists": [
        "<builtin>.len",
        "bisect.bisect_left",
        "<builtin>.isinstance",
    ],
    "sc2.game_data.Cost.__init__": [],
    "bisect.bisect_left": [],
    "sc2.game_data.AbilityData.__repr__": [],
    "sc2.game_data.AbilityData.id": ["enum.Enum.__init__"],
    "sc2.game_data.AbilityData.link_name": [],
    "sc2.game_data.AbilityData.button_name": [],
    "sc2.game_data.AbilityData.friendly_name": [],
    "sc2.game_data.AbilityData.is_free_morph": ["sc2.game_data.split_camel_case"],
    "sc2.game_data.AbilityData.cost": ["sc2.game_data.GameData.calculate_ability_cost"],
    "sc2.game_data.UnitTypeData.__repr__": [],
    "sc2.game_data.UnitTypeData.id": ["enum.Enum.__init__"],
    "sc2.game_data.UnitTypeData.name": [],
    "sc2.game_data.UnitTypeData.creation_ability": [],
    "sc2.game_data.UnitTypeData.attributes": [],
    "sc2.game_data.UnitTypeData.has_attribute": ["<builtin>.isinstance"],
    "sc2.game_data.UnitTypeData.has_minerals": [],
    "sc2.game_data.UnitTypeData.has_vespene": [],
    "sc2.game_data.UnitTypeData.cargo_size": [],
    "sc2.game_data.UnitTypeData.tech_requirement": ["enum.Enum.__init__"],
    "sc2.game_data.UnitTypeData.tech_alias": ["enum.Enum.__init__"],
    "sc2.game_data.UnitTypeData.unit_alias": ["enum.Enum.__init__"],
    "sc2.game_data.UnitTypeData.race": ["enum.Enum"],
    "sc2.game_data.UnitTypeData.cost": ["sc2.game_data.Cost.__init__"],
    "sc2.game_data.UnitTypeData.cost_zerg_corrected": ["sc2.game_data.Cost.__init__"],
    "sc2.game_data.UnitTypeData.morph_cost": [
        "<builtin>.max",
        "sc2.game_data.Cost.__init__",
    ],
    "<builtin>.max": [],
    "sc2.game_data.UpgradeData.__repr__": [],
    "sc2.game_data.UpgradeData.name": [],
    "sc2.game_data.UpgradeData.research_ability": [],
    "sc2.game_data.UpgradeData.cost": ["sc2.game_data.Cost.__init__"],
    "sc2.game_data.Cost.__repr__": [],
    "sc2.game_data.Cost.__eq__": [],
    "sc2.game_data.Cost.__ne__": [],
    "sc2.unit_command": [],
    "sc2.unit_command.UnitCommand.combining_tuple": [],
    "sc2.unit_command.UnitCommand.__repr__": [],
    "sc2.constants": [],
    "sc2.ids.effect_id": ["<builtin>.globals"],
    "sc2.pixel_map": [],
    "<builtin>.bytearray": [],
    "sc2.pixel_map.PixelMap.width": [],
    "sc2.pixel_map.PixelMap.height": [],
    "sc2.pixel_map.PixelMap.bits_per_pixel": [],
    "sc2.pixel_map.PixelMap.bytes_per_pixel": [],
    "sc2.pixel_map.PixelMap.__getitem__": [],
    "sc2.pixel_map.PixelMap.__setitem__": [],
    "sc2.pixel_map.PixelMap.is_set": [],
    "sc2.pixel_map.PixelMap.is_empty": ["sc2.pixel_map.PixelMap.is_set"],
    "sc2.pixel_map.PixelMap.invert": [],
    "sc2.pixel_map.PixelMap.flood_fill": ["<builtin>.set"],
    "sc2.pixel_map.PixelMap.flood_fill_all": [
        "<builtin>.range",
        "<builtin>.set",
        "<builtin>.frozenset",
        "<builtin>.any",
        "sc2.pixel_map.PixelMap.flood_fill",
    ],
    "<builtin>.frozenset": [],
    "sc2.pixel_map.PixelMap.print": [
        "<builtin>.range",
        "sc2.pixel_map.PixelMap.print",
        "sc2.pixel_map.PixelMap.is_set",
    ],
    "sc2.pixel_map.PixelMap.save_image": [
        "PIL.Image.new.save",
        "<builtin>.range",
        "PIL.Image.new.putdata",
        "PIL.Image.new",
    ],
    "PIL.Image.new": [],
    "PIL.Image.new.putdata": [],
    "PIL.Image.new.save": [],
    "sc2.power_source": [],
    "sc2.power_source.PowerSource.from_proto": [
        "sc2.position.Point3.from_proto",
        "sc2.power_source.PowerSource.__init__",
        "sc2.position.Point2.from_proto",
    ],
    "sc2.power_source.PowerSource.__init__": ["<builtin>.isinstance"],
    "sc2.power_source.PowerSource.covers": [],
    "sc2.power_source.PowerSource.__repr__": [],
    "sc2.power_source.PsionicMatrix.__init__": [],
    "sc2.power_source.PsionicMatrix.covers": ["<builtin>.any"],
    "sc2.helpers": [
        "pathlib.Path",
        "pathlib.Path.parent.iterdir",
        "sc2.helpers.is_submodule",
    ],
    "sc2.helpers.is_submodule": [],
    "sc2.helpers.control_group": [],
    "sc2.helpers.control_group.ControlGroup.__init__": ["<builtin>.super"],
    "sc2.helpers.control_group.ControlGroup.__hash__": [
        "<builtin>.list",
        "<builtin>.tuple",
        "<builtin>.hash",
        "<builtin>.sorted",
    ],
    "sc2.helpers.control_group.ControlGroup.select_units": [],
    "sc2.helpers.control_group.ControlGroup.select_units.<lambda1>": [],
    "sc2.helpers.control_group.ControlGroup.missing_unit_tags": [],
    "sc2.helpers.control_group.ControlGroup.amount": ["<builtin>.len"],
    "sc2.helpers.control_group.ControlGroup.empty": [],
    "sc2.helpers.control_group.ControlGroup.add_unit": [],
    "sc2.helpers.control_group.ControlGroup.add_units": [
        "sc2.helpers.control_group.ControlGroup.add_unit"
    ],
    "sc2.helpers.control_group.ControlGroup.remove_unit": [],
    "sc2.helpers.control_group.ControlGroup.remove_units": [],
    "sc2.data": [
        "s2clientprotocol.data_pb2.Weapon.TargetType.items",
        "s2clientprotocol.raw_pb2.Alliance.items",
        "enum.Enum",
        "s2clientprotocol.error_pb2.ActionResult.items",
        "s2clientprotocol.raw_pb2.CloakState.items",
        "s2clientprotocol.common_pb2.Race.items",
        "google.protobuf.reflection.GeneratedProtocolMessageType.Error.items",
        "s2clientprotocol.data_pb2.Attribute.items",
        "google.protobuf.reflection.GeneratedProtocolMessageType.Channel.items",
        "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.items",
        "s2clientprotocol.data_pb2.AbilityData.Target.items",
        "s2clientprotocol.raw_pb2.DisplayType.items",
    ],
    "google.protobuf.reflection.GeneratedProtocolMessageType.Error.items": [],
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper.items": [],
    "google.protobuf.reflection.GeneratedProtocolMessageType.Channel.items": [],
    "s2clientprotocol.common_pb2.Race.items": [],
    "s2clientprotocol.raw_pb2.DisplayType.items": [],
    "s2clientprotocol.raw_pb2.Alliance.items": [],
    "s2clientprotocol.raw_pb2.CloakState.items": [],
    "s2clientprotocol.data_pb2.Attribute.items": [],
    "s2clientprotocol.data_pb2.Weapon.TargetType.items": [],
    "s2clientprotocol.data_pb2.AbilityData.Target.items": [],
    "s2clientprotocol.error_pb2.ActionResult.items": [],
    "sc2.ids.unit_typeid": ["<builtin>.globals"],
    "s2clientprotocol.sc2api_pb2": [
        "google.protobuf.descriptor.Descriptor",
        "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
        "google.protobuf.reflection.GeneratedProtocolMessageType",
        "google.protobuf.descriptor.OneofDescriptor",
        "google.protobuf.descriptor.EnumValueDescriptor",
        "google.protobuf.descriptor.FileDescriptor",
        "google.protobuf.symbol_database.Default",
        "google.protobuf.symbol_database.Default.RegisterFileDescriptor",
        "google.protobuf.descriptor.FieldDescriptor",
        "google.protobuf.symbol_database.Default.RegisterEnumDescriptor",
        "google.protobuf.descriptor.EnumDescriptor",
        "<builtin>.float",
        "<builtin>.dict",
        "google.protobuf.symbol_database.Default.RegisterMessage",
    ],
    "s2clientprotocol.sc2api_pb2.<lambda1>": [],
    "s2clientprotocol.sc2api_pb2.<lambda2>": [],
    "google.protobuf.symbol_database.Default": [],
    "google.protobuf.descriptor.FileDescriptor": [],
    "google.protobuf.descriptor.EnumValueDescriptor": [],
    "google.protobuf.descriptor.EnumDescriptor": [],
    "google.protobuf.symbol_database.Default.RegisterEnumDescriptor": [],
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper": [],
    "google.protobuf.descriptor.FieldDescriptor": [],
    "google.protobuf.descriptor.OneofDescriptor": [],
    "google.protobuf.descriptor.Descriptor": [],
    "<builtin>.float": [],
    "google.protobuf.symbol_database.Default.RegisterFileDescriptor": [],
    "google.protobuf.reflection.GeneratedProtocolMessageType": [],
    "google.protobuf.symbol_database.Default.RegisterMessage": [],
    "sc2.ids.ability_id": ["<builtin>.globals"],
    "sc2.ids": [],
    "sc2.main": ["logging.getLogger"],
    "sc2.main.SlidingTimeWindow.__init__": [],
    "sc2.main.SlidingTimeWindow.push": [],
    "sc2.main.SlidingTimeWindow.clear": [],
    "sc2.main.SlidingTimeWindow.sum": ["sc2.main.SlidingTimeWindow.sum"],
    "sc2.main.SlidingTimeWindow.available": ["sc2.main.SlidingTimeWindow.sum"],
    "sc2.main.SlidingTimeWindow.available_fmt": [],
    "sc2.main._play_game_human": [
        "sc2.client.Client.observation",
        "sc2.client.Client.step",
        "<builtin>.print",
    ],
    "sc2.client.Client.observation": [
        "sc2.renderer.Renderer.render",
        "sc2.protocol.Protocol._execute",
        "enum.Enum",
    ],
    "sc2.client.Client.step": ["sc2.protocol.Protocol._execute"],
    "sc2.main._play_game_ai": [
        "logging.getLogger.debug",
        "logging.getLogger.error",
        "sc2.main.SlidingTimeWindow.push",
        "sc2.main.SlidingTimeWindow.clear",
        "sc2.game_state.GameState.__init__",
        "<builtin>.RuntimeError",
        "time.monotonic",
        "sc2.client.Client.get_game_info",
        "<builtin>.int",
        "<builtin>.isinstance",
        "sc2.client.Client.get_game_data",
        "<builtin>.float",
        "logging.getLogger.warning",
        "sc2.client.Client.observation",
        "logging.getLogger.exception",
        "async_timeout.timeout",
        "sc2.main.SlidingTimeWindow.__init__",
        "sc2.client.Client.step",
    ],
    "sc2.client.Client.get_game_data": [
        "sc2.protocol.Protocol._execute",
        "sc2.game_data.GameData.__init__",
    ],
    "sc2.client.Client.get_game_info": [
        "sc2.game_info.GameInfo.__init__",
        "sc2.protocol.Protocol._execute",
    ],
    "logging.getLogger.exception": [],
    "logging.getLogger.debug": [],
    "time.monotonic": [],
    "async_timeout.timeout": [],
    "<builtin>.RuntimeError": [],
    "sc2.main._play_game": [
        "sc2.client.Client.join_game",
        "<builtin>.repr",
        "logging.info",
        "sc2.main._play_game_ai",
        "<builtin>.isinstance",
        "sc2.main._play_game_human",
    ],
    "<builtin>.repr": [],
    "sc2.client.Client.join_game": [
        "sc2.renderer.Renderer.__init__",
        "sc2.protocol.Protocol._execute",
        "<builtin>.isinstance",
    ],
    "logging.info": [],
    "sc2.main._setup_host_game": [
        "sc2.client.Client.__init__",
        "<builtin>.RuntimeError",
        "enum.Enum",
        "logging.getLogger.critical",
    ],
    "logging.getLogger.critical": [],
    "sc2.client.Client.__init__": ["<builtin>.super"],
    "sc2.main._host_game": [
        "logging.error",
        "sc2.main._play_game",
        "sc2.main._setup_host_game",
        "<builtin>.len",
        "<builtin>.any",
        "<builtin>.isinstance",
        "sc2.sc2process.SC2Process.__init__",
    ],
    "sc2.sc2process.SC2Process.__init__": [
        "portpicker.pick_unused_port",
        "tempfile.mkdtemp",
        "<builtin>.isinstance",
    ],
    "logging.error": [],
    "sc2.main._host_game_aiter": [
        "logging.error",
        "sc2.main._play_game",
        "sc2.main._setup_host_game",
        "<builtin>.any",
        "<builtin>.isinstance",
        "sc2.sc2process.SC2Process.__init__",
    ],
    "sc2.main._host_game_iter": [
        "sc2.main._host_game_aiter",
        "asyncio.get_event_loop.run_until_complete",
        "asyncio.get_event_loop",
    ],
    "asyncio.get_event_loop": [],
    "asyncio.get_event_loop.run_until_complete": [],
    "sc2.main._join_game": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.leave",
        "logging.error",
        "sc2.main._play_game",
        "sc2.protocol.Protocol.quit",
        "sc2.client.Client.save_replay",
        "sc2.sc2process.SC2Process.__init__",
    ],
    "sc2.client.Client.save_replay": [
        "logging.getLogger.info",
        "sc2.protocol.Protocol._execute",
        "logging.getLogger.debug",
        "<builtin>.open",
    ],
    "sc2.client.Client.leave": ["sc2.protocol.Protocol._execute"],
    "sc2.protocol.Protocol.quit": ["sc2.protocol.Protocol._execute"],
    "sc2.main.run_game": [
        "<builtin>.sum",
        "sc2.portconfig.Portconfig.__init__",
        "asyncio.get_event_loop.run_until_complete",
        "asyncio.gather",
        "sc2.main._join_game",
        "asyncio.get_event_loop",
        "<builtin>.isinstance",
        "sc2.main._host_game",
    ],
    "sc2.portconfig.Portconfig.__init__": [
        "<builtin>.range",
        "portpicker.pick_unused_port",
    ],
    "asyncio.gather": [],
    "sc2.portconfig": [],
    "portpicker.pick_unused_port": [],
    "sc2.portconfig.Portconfig.__str__": [],
    "sc2.portconfig.Portconfig.as_json": ["json.dumps"],
    "json.dumps": [],
    "sc2.portconfig.Portconfig.from_json": ["json.loads"],
    "json.loads": [],
    "sc2.sc2process": ["logging.getLogger"],
    "sc2.sc2process.kill_switch.add": ["logging.getLogger.debug"],
    "sc2.sc2process.kill_switch.kill_all": ["logging.getLogger.info"],
    "logging.getLogger.info": [],
    "tempfile.mkdtemp": [],
    "sc2.sc2process.SC2Process.__aenter__": [
        "sc2.sc2process.SC2Process._connect",
        "sc2.sc2process.SC2Process._close_connection",
        "sc2.controller.Controller.__init__",
        "sc2.sc2process.kill_switch.add",
        "sc2.sc2process.SC2Process._clean",
        "sc2.sc2process.SC2Process._launch",
        "signal.signal",
    ],
    "sc2.sc2process.SC2Process.__aenter__.signal_handler": [
        "sc2.sc2process.kill_switch.kill_all"
    ],
    "signal.signal": [],
    "sc2.sc2process.SC2Process._launch": [
        "<builtin>.str",
        "logging.getLogger.getEffectiveLevel",
        "subprocess.Popen",
    ],
    "sc2.sc2process.SC2Process._connect": [
        "<builtin>.range",
        "aiohttp.ClientSession",
        "logging.getLogger.debug",
        "asyncio.sleep",
        "<builtin>.TimeoutError",
        "sys.exit",
        "aiohttp.ClientSession.close",
        "aiohttp.ClientSession.ws_connect",
    ],
    "sc2.sc2process.SC2Process._close_connection": [
        "logging.getLogger.info",
        "aiohttp.ClientSession.close",
    ],
    "sc2.sc2process.SC2Process._clean": [
        "subprocess.Popen.poll",
        "<builtin>.range",
        "time.sleep",
        "subprocess.Popen.terminate",
        "os.path.exists",
        "shutil.rmtree",
        "logging.getLogger.info",
    ],
    "sc2.controller.Controller.__init__": ["<builtin>.super"],
    "sc2.sc2process.SC2Process.__aexit__": [
        "sc2.sc2process.kill_switch.kill_all",
        "signal.signal",
    ],
    "sc2.sc2process.SC2Process.ws_url": [],
    "<builtin>.str": [],
    "logging.getLogger.getEffectiveLevel": [],
    "subprocess.Popen": [],
    "sys.exit": [],
    "asyncio.sleep": [],
    "aiohttp.ClientSession": [],
    "aiohttp.ClientSession.ws_connect": [],
    "aiohttp.ClientSession.close": [],
    "<builtin>.TimeoutError": [],
    "subprocess.Popen.poll": [],
    "subprocess.Popen.terminate": [],
    "time.sleep": [],
    "os.path.exists": [],
    "shutil.rmtree": [],
    "sc2.controller": ["logging.getLogger"],
    "sc2.controller.Controller.running": [],
    "sc2.controller.Controller.create_game": [
        "<builtin>.str",
        "logging.getLogger.info",
        "sc2.protocol.Protocol._execute",
        "<builtin>.isinstance",
    ],
    "sc2.protocol.Protocol._execute": [
        "enum.Enum",
        "logging.getLogger.debug",
        "sc2.protocol.Protocol.__request",
        "<builtin>.len",
        "logging.getLogger.info",
    ],
    "sc2.protocol": ["logging.getLogger"],
    "sc2.protocol.ProtocolError.is_game_over_error": [],
    "sc2.protocol.Protocol.__init__": [],
    "sc2.protocol.Protocol.__request": ["sys.exit", "logging.getLogger.debug"],
    "sc2.protocol.Protocol.ping": ["sc2.protocol.Protocol._execute"],
    "sc2.player": [],
    "sc2.player.AbstractPlayer.__init__": ["<builtin>.isinstance"],
    "sc2.player.Human.__init__": ["<builtin>.super"],
    "sc2.player.Human.__str__": [],
    "sc2.player.Bot.__init__": ["<builtin>.super", "<builtin>.isinstance"],
    "sc2.player.Bot.__str__": [],
    "sc2.player.Computer.__init__": ["<builtin>.super"],
    "sc2.player.Computer.__str__": [],
    "sc2.player.Observer.__init__": ["<builtin>.super"],
    "sc2.player.Observer.__str__": [],
    "sc2.player.Player.from_proto": ["sc2.player.Player.__init__", "enum.Enum"],
    "sc2.player.Player.__init__": ["<builtin>.super"],
    "sc2.client": ["logging.getLogger"],
    "sc2.client.Client.in_game": [],
    "sc2.renderer.Renderer.__init__": [],
    "sc2.client.Client.debug_leave": [
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.debug_pb2.DebugEndGame",
        "s2clientprotocol.debug_pb2.DebugCommand",
    ],
    "s2clientprotocol.debug_pb2.DebugEndGame": [],
    "s2clientprotocol.debug_pb2.DebugCommand": [],
    "<builtin>.open": [],
    "sc2.renderer.Renderer.render": [
        "pyglet.image.ImageData",
        "pyglet.window.Window",
        "<builtin>.str",
        "pyglet.text.Label",
        "datetime.timedelta",
        "pyglet.image.ImageData.set_data",
        "sc2.client.Client.move_camera_spatial",
        "sc2.renderer.Renderer._update_window",
    ],
    "sc2.game_info.GameInfo.__init__": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.position.Point2.from_proto",
        "sc2.position.Rect.from_proto",
        "sc2.position.Point3.from_proto",
        "sc2.player.Player.from_proto",
    ],
    "sc2.client.Client.actions": [
        "sc2.protocol.Protocol._execute",
        "enum.Enum",
        "sc2.client.Client.actions",
        "sc2.action.combine_actions",
        "<builtin>.isinstance",
    ],
    "sc2.action.combine_actions": [
        "<builtin>.list",
        "<builtin>.RuntimeError",
        "itertools.groupby",
        "s2clientprotocol.raw_pb2.ActionRaw",
        "s2clientprotocol.raw_pb2.ActionRawUnitCommand",
        "<builtin>.isinstance",
        "s2clientprotocol.common_pb2.Point2D",
    ],
    "sc2.client.Client.query_pathing": [
        "s2clientprotocol.query_pb2.RequestQuery",
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.query_pb2.RequestQueryPathing",
        "<builtin>.isinstance",
        "<builtin>.float",
        "s2clientprotocol.common_pb2.Point2D",
    ],
    "s2clientprotocol.common_pb2.Point2D": [],
    "s2clientprotocol.query_pb2.RequestQueryPathing": [],
    "s2clientprotocol.query_pb2.RequestQuery": [],
    "sc2.client.Client.query_pathings": [
        "s2clientprotocol.query_pb2.RequestQuery",
        "sc2.protocol.Protocol._execute",
        "<builtin>.type",
        "s2clientprotocol.query_pb2.RequestQueryPathing",
        "<builtin>.len",
        "<builtin>.isinstance",
        "<builtin>.float",
        "s2clientprotocol.common_pb2.Point2D",
    ],
    "sc2.client.Client.query_building_placement": [
        "s2clientprotocol.query_pb2.RequestQuery",
        "sc2.protocol.Protocol._execute",
        "enum.Enum",
        "<builtin>.isinstance",
        "s2clientprotocol.query_pb2.RequestQueryBuildingPlacement",
        "s2clientprotocol.common_pb2.Point2D",
    ],
    "s2clientprotocol.query_pb2.RequestQueryBuildingPlacement": [],
    "sc2.client.Client.query_available_abilities": [
        "enum.Enum.__init__",
        "s2clientprotocol.query_pb2.RequestQuery",
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.query_pb2.RequestQueryAvailableAbilities",
        "<builtin>.isinstance",
    ],
    "s2clientprotocol.query_pb2.RequestQueryAvailableAbilities": [],
    "sc2.client.Client.chat_send": ["sc2.protocol.Protocol._execute"],
    "sc2.client.Client.debug_create_unit": [
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.debug_pb2.DebugCommand",
        "<builtin>.len",
        "<builtin>.isinstance",
        "s2clientprotocol.common_pb2.Point2D",
        "s2clientprotocol.debug_pb2.DebugCreateUnit",
    ],
    "s2clientprotocol.debug_pb2.DebugCreateUnit": [],
    "sc2.client.Client.debug_kill_unit": [
        "s2clientprotocol.debug_pb2.DebugKillUnit",
        "sc2.protocol.Protocol._execute",
        "<builtin>.isinstance",
        "s2clientprotocol.debug_pb2.DebugCommand",
    ],
    "s2clientprotocol.debug_pb2.DebugKillUnit": [],
    "sc2.client.Client.move_camera": [
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.common_pb2.Point",
        "s2clientprotocol.raw_pb2.ActionRawCameraMove",
        "s2clientprotocol.raw_pb2.ActionRaw",
        "<builtin>.isinstance",
    ],
    "s2clientprotocol.common_pb2.Point": [],
    "s2clientprotocol.raw_pb2.ActionRawCameraMove": [],
    "s2clientprotocol.raw_pb2.ActionRaw": [],
    "sc2.client.Client.move_camera_spatial": [
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.spatial_pb2.ActionSpatial",
        "<builtin>.isinstance",
        "s2clientprotocol.common_pb2.PointI",
        "s2clientprotocol.spatial_pb2.ActionSpatialCameraMove",
    ],
    "s2clientprotocol.common_pb2.PointI": [],
    "s2clientprotocol.spatial_pb2.ActionSpatialCameraMove": [],
    "s2clientprotocol.spatial_pb2.ActionSpatial": [],
    "sc2.client.Client.debug_text": [
        "<builtin>.getattr",
        "s2clientprotocol.common_pb2.Point",
        "s2clientprotocol.debug_pb2.DebugText",
        "sc2.protocol.Protocol._execute",
        "sc2.client.Client.debug_text",
        "s2clientprotocol.debug_pb2.DebugDraw",
        "s2clientprotocol.debug_pb2.DebugCommand",
        "<builtin>.zip",
        "<builtin>.len",
        "s2clientprotocol.debug_pb2.Color",
        "<builtin>.isinstance",
    ],
    "s2clientprotocol.debug_pb2.Color": [],
    "s2clientprotocol.debug_pb2.DebugText": [],
    "s2clientprotocol.debug_pb2.DebugDraw": [],
    "sc2.client.Client.debug_text_simple": ["sc2.client.Client.to_debug_message"],
    "sc2.client.Client.to_debug_message": [
        "s2clientprotocol.debug_pb2.DebugText",
        "sc2.client.Client.to_debug_point",
        "<builtin>.isinstance",
        "sc2.client.Client.to_debug_color",
    ],
    "sc2.client.Client.debug_text_screen": [
        "sc2.client.Client.to_debug_message",
        "<builtin>.len",
    ],
    "sc2.client.Client.debug_text_2d": ["sc2.client.Client.debug_text_screen"],
    "sc2.client.Client.debug_text_world": [
        "sc2.client.Client.to_debug_message",
        "<builtin>.isinstance",
    ],
    "sc2.client.Client.debug_text_3d": ["sc2.client.Client.debug_text_world"],
    "sc2.client.Client.debug_line_out": [
        "s2clientprotocol.debug_pb2.Line",
        "s2clientprotocol.debug_pb2.DebugLine",
        "sc2.client.Client.to_debug_point",
        "sc2.client.Client.to_debug_color",
    ],
    "sc2.client.Client.to_debug_point": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "s2clientprotocol.common_pb2.Point",
    ],
    "s2clientprotocol.debug_pb2.Line": [],
    "sc2.client.Client.to_debug_color": [
        "<builtin>.max",
        "<builtin>.getattr",
        "s2clientprotocol.debug_pb2.Color",
        "<builtin>.int",
    ],
    "s2clientprotocol.debug_pb2.DebugLine": [],
    "sc2.client.Client.debug_box_out": [
        "s2clientprotocol.debug_pb2.DebugBox",
        "sc2.client.Client.to_debug_point",
        "sc2.client.Client.to_debug_color",
    ],
    "s2clientprotocol.debug_pb2.DebugBox": [],
    "sc2.client.Client.debug_sphere_out": [
        "sc2.client.Client.to_debug_point",
        "s2clientprotocol.debug_pb2.DebugSphere",
        "sc2.client.Client.to_debug_color",
    ],
    "s2clientprotocol.debug_pb2.DebugSphere": [],
    "sc2.client.Client.send_debug": [
        "s2clientprotocol.debug_pb2.DebugDraw",
        "sc2.protocol.Protocol._execute",
        "s2clientprotocol.debug_pb2.DebugCommand",
    ],
    "sc2.action": [],
    "sc2.action.combine_actions.<lambda1>": [],
    "itertools.groupby": [],
    "s2clientprotocol.raw_pb2.ActionRawUnitCommand": [],
    "sc2.renderer": [],
    "pyglet.window.Window": [],
    "pyglet.image.ImageData": [],
    "pyglet.text.Label": [],
    "pyglet.image.ImageData.set_data": [],
    "datetime.timedelta": [],
    "sc2.renderer.Renderer._update_window": [
        "pyglet.window.Window.flip",
        "pyglet.window.Window.switch_to",
        "pyglet.window.Window.dispatch_events",
        "pyglet.image.ImageData.blit",
        "pyglet.window.Window.clear",
        "pyglet.text.Label.draw",
    ],
    "pyglet.window.Window.switch_to": [],
    "pyglet.window.Window.dispatch_events": [],
    "pyglet.window.Window.clear": [],
    "pyglet.image.ImageData.blit": [],
    "pyglet.text.Label.draw": [],
    "pyglet.window.Window.flip": [],
    "sc2.renderer.Renderer._on_mouse_press": [],
    "sc2.renderer.Renderer._on_mouse_release": [],
    "sc2.renderer.Renderer._on_mouse_drag": [],
    "sc2.game_info": [],
    "sc2.game_info.Ramp.__init__": [],
    "sc2.game_info.Ramp._height_map": [],
    "sc2.game_info.Ramp._placement_grid": [],
    "sc2.game_info.Ramp.size": ["<builtin>.len"],
    "sc2.game_info.Ramp.height_at": [],
    "sc2.game_info.Ramp.points": [],
    "sc2.game_info.Ramp.upper": ["<builtin>.max", "sc2.game_info.Ramp.height_at"],
    "sc2.game_info.Ramp.upper2_for_ramp_wall": [
        "<builtin>.list",
        "<builtin>.len",
        "<builtin>.sorted",
        "<builtin>.set",
    ],
    "sc2.game_info.Ramp.upper2_for_ramp_wall.<lambda1>": [],
    "sc2.game_info.Ramp.top_center": ["<builtin>.len", "<builtin>.sum"],
    "sc2.game_info.Ramp.lower": ["sc2.game_info.Ramp.height_at", "<builtin>.min"],
    "sc2.game_info.Ramp.bottom_center": ["<builtin>.len", "<builtin>.sum"],
    "sc2.game_info.Ramp.barracks_in_middle": [
        "<builtin>.iter",
        "<builtin>.max",
        "<builtin>.next",
        "<builtin>.len",
        "<builtin>.Exception",
    ],
    "<builtin>.iter": [],
    "sc2.game_info.Ramp.barracks_in_middle.<lambda1>": [],
    "<builtin>.Exception": [],
    "sc2.game_info.Ramp.depot_in_middle": [
        "<builtin>.iter",
        "<builtin>.max",
        "<builtin>.next",
        "<builtin>.len",
        "<builtin>.Exception",
    ],
    "sc2.game_info.Ramp.depot_in_middle.<lambda1>": [],
    "sc2.game_info.Ramp.corner_depots": ["<builtin>.Exception", "<builtin>.len"],
    "sc2.game_info.Ramp.barracks_can_fit_addon": [
        "<builtin>.max",
        "<builtin>.len",
        "<builtin>.Exception",
    ],
    "sc2.game_info.Ramp.barracks_can_fit_addon.<lambda1>": [],
    "sc2.game_info.Ramp.barracks_correct_placement": [
        "<builtin>.Exception",
        "<builtin>.len",
    ],
    "sc2.game_info.GameInfo.map_center": [],
    "sc2.game_info.GameInfo._find_ramps": [
        "sc2.game_info.Ramp.__init__",
        "<builtin>.range",
        "sc2.game_info.GameInfo._find_groups",
    ],
    "sc2.game_info.GameInfo._find_groups": [
        "sc2.game_info.GameInfo._find_groups.paint",
        "<builtin>.range",
        "<builtin>.set",
        "<builtin>.len",
        "collections.deque",
        "<builtin>.abs",
    ],
    "sc2.game_info.GameInfo._find_groups.paint": [],
    "collections.deque": [],
    "sc2.maps": ["logging.getLogger"],
    "sc2.maps.get": ["sc2.maps.Map.__init__", "<builtin>.KeyError"],
    "sc2.maps.Map.__init__": ["logging.warning"],
    "logging.warning": [],
    "sc2.maps.Map.name": [],
    "sc2.maps.Map.data": ["<builtin>.open"],
    "sc2.maps.Map.matches": [],
    "sc2.maps.Map.__repr__": [],
    "sc2.paths": ["logging.getLogger", "platform.system", "os.environ.get"],
    "platform.system": [],
    "os.environ.get": [],
    "sc2.paths.get_env": [],
    "sc2.paths.latest_executeble": [
        "<builtin>.max",
        "<builtin>.exit",
        "<builtin>.int",
        "logging.getLogger.critical",
        "pathlib.Path.expanduser.iterdir",
    ],
    "pathlib.Path.expanduser.iterdir": [],
    "<builtin>.exit": [],
    "sc2.paths._MetaPaths.__setup": [
        "pathlib.Path.expanduser",
        "os.path.isfile",
        "pathlib.Path",
        "sc2.paths.latest_executeble",
        "<builtin>.str",
        "<builtin>.open",
        "re.search.group",
        "os.path.exists",
        "pathlib.Path.home",
        "<builtin>.exit",
        "logging.getLogger.critical",
        "os.environ.get",
        "re.search",
        "pathlib.Path.expanduser.exists",
    ],
    "pathlib.Path.home": [],
    "os.path.isfile": [],
    "re.search": [],
    "re.search.group": [],
    "pathlib.Path.expanduser": [],
    "pathlib.Path.expanduser.exists": [],
    "sc2.paths._MetaPaths.__getattr__": [
        "sc2.paths._MetaPaths.__setup",
        "<builtin>.getattr",
    ],
    "test.test_PT_player": [],
    "test.test_PT_player.test_PT_from_proto": [
        "sc2.player.Player.__init__",
        "sc2.player.Player.from_proto",
    ],
    "test.test_PT_score": [],
    "test.test_PT_score.test_PT_score_type": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.score_type",
    ],
    "test.test_PT_score.test_PT_score": [
        "sc2.score.ScoreDetails.score",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_idle_production_time": [
        "sc2.score.ScoreDetails.idle_production_time",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_idle_worker_time": [
        "sc2.score.ScoreDetails.idle_worker_time",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_value_units": [
        "sc2.score.ScoreDetails.total_value_units",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_value_structures": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_value_structures",
    ],
    "test.test_PT_score.test_PT_killed_value_units": [
        "sc2.score.ScoreDetails.killed_value_units",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_value_structures": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.killed_value_structures",
    ],
    "test.test_PT_score.test_PT_collected_minerals": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.collected_minerals",
    ],
    "test.test_PT_score.test_PT_collected_vespene": [
        "sc2.score.ScoreDetails.collected_vespene",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_collection_rate_minerals": [
        "sc2.score.ScoreDetails.collection_rate_minerals",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_collection_rate_vespene": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.collection_rate_vespene",
    ],
    "test.test_PT_score.test_PT_spent_minerals": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.spent_minerals",
    ],
    "test.test_PT_score.test_PT_spent_vespene": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.spent_vespene",
    ],
    "test.test_PT_score.test_PT_food_used_none": [
        "sc2.score.ScoreDetails.food_used_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_food_used_army": [
        "sc2.score.ScoreDetails.food_used_army",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_food_used_economy": [
        "sc2.score.ScoreDetails.food_used_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_food_used_technology": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.food_used_technology",
    ],
    "test.test_PT_score.test_PT_food_used_upgrade": [
        "sc2.score.ScoreDetails.food_used_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_minerals_none": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.killed_minerals_none",
    ],
    "test.test_PT_score.test_PT_killed_minerals_army": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.killed_minerals_army",
    ],
    "test.test_PT_score.test_PT_killed_minerals_economy": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.killed_minerals_economy",
    ],
    "test.test_PT_score.test_PT_killed_minerals_technology": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.killed_minerals_technology",
    ],
    "test.test_PT_score.test_PT_killed_minerals_upgrade": [
        "sc2.score.ScoreDetails.killed_minerals_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_vespene_none": [
        "sc2.score.ScoreDetails.killed_vespene_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_vespene_army": [
        "sc2.score.ScoreDetails.killed_vespene_army",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_vespene_economy": [
        "sc2.score.ScoreDetails.killed_vespene_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_vespene_technology": [
        "sc2.score.ScoreDetails.killed_vespene_technology",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_killed_vespene_upgrade": [
        "sc2.score.ScoreDetails.killed_vespene_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_minerals_none": [
        "sc2.score.ScoreDetails.lost_minerals_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_minerals_army": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.lost_minerals_army",
    ],
    "test.test_PT_score.test_PT_lost_minerals_economy": [
        "sc2.score.ScoreDetails.lost_minerals_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_minerals_technology": [
        "sc2.score.ScoreDetails.lost_minerals_technology",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_minerals_upgrade": [
        "sc2.score.ScoreDetails.lost_minerals_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_vespene_none": [
        "sc2.score.ScoreDetails.lost_vespene_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_vespene_army": [
        "sc2.score.ScoreDetails.lost_vespene_army",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_vespene_economy": [
        "sc2.score.ScoreDetails.lost_vespene_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_vespene_technology": [
        "sc2.score.ScoreDetails.lost_vespene_technology",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_lost_vespene_upgrade": [
        "sc2.score.ScoreDetails.lost_vespene_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_friendly_fire_minerals_none": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.friendly_fire_minerals_none",
    ],
    "test.test_PT_score.test_PT_friendly_fire_minerals_army": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.friendly_fire_minerals_army",
    ],
    "test.test_PT_score.test_PT_friendly_fire_minerals_economy": [
        "sc2.score.ScoreDetails.friendly_fire_minerals_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_friendly_fire_minerals_technology": [
        "sc2.score.ScoreDetails.friendly_fire_minerals_technology",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_friendly_fire_minerals_upgrade": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.friendly_fire_minerals_upgrade",
    ],
    "test.test_PT_score.test_PT_friendly_fire_vespene_none": [
        "sc2.score.ScoreDetails.friendly_fire_vespene_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_friendly_fire_vespene_army": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.friendly_fire_vespene_army",
    ],
    "test.test_PT_score.test_PT_friendly_fire_vespene_economy": [
        "sc2.score.ScoreDetails.friendly_fire_vespene_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_friendly_fire_vespene_technology": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.friendly_fire_vespene_technology",
    ],
    "test.test_PT_score.test_PT_friendly_fire_vespene_upgrade": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.friendly_fire_vespene_upgrade",
    ],
    "test.test_PT_score.test_PT_used_minerals_none": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.used_minerals_none",
    ],
    "test.test_PT_score.test_PT_used_minerals_army": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.used_minerals_army",
    ],
    "test.test_PT_score.test_PT_used_minerals_economy": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.used_minerals_economy",
    ],
    "test.test_PT_score.test_PT_used_minerals_technology": [
        "sc2.score.ScoreDetails.used_minerals_technology",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_used_minerals_upgrade": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.used_minerals_upgrade",
    ],
    "test.test_PT_score.test_PT_used_vespene_none": [
        "sc2.score.ScoreDetails.used_vespene_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_used_vespene_army": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.used_vespene_army",
    ],
    "test.test_PT_score.test_PT_used_vespene_economy": [
        "sc2.score.ScoreDetails.used_vespene_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_used_vespene_technology": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.used_vespene_technology",
    ],
    "test.test_PT_score.test_PT_used_vespene_upgrade": [
        "sc2.score.ScoreDetails.used_vespene_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_minerals_none": [
        "sc2.score.ScoreDetails.total_used_minerals_none",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_minerals_army": [
        "sc2.score.ScoreDetails.total_used_minerals_army",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_minerals_economy": [
        "sc2.score.ScoreDetails.total_used_minerals_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_minerals_technology": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_used_minerals_technology",
    ],
    "test.test_PT_score.test_PT_total_used_minerals_upgrade": [
        "sc2.score.ScoreDetails.total_used_minerals_upgrade",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_vespene_none": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_used_vespene_none",
    ],
    "test.test_PT_score.test_PT_total_used_vespene_army": [
        "sc2.score.ScoreDetails.total_used_vespene_army",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_vespene_economy": [
        "sc2.score.ScoreDetails.total_used_vespene_economy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_vespene_technology": [
        "sc2.score.ScoreDetails.total_used_vespene_technology",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_used_vespene_upgrade": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_used_vespene_upgrade",
    ],
    "test.test_PT_score.test_PT_total_damage_dealt_life": [
        "sc2.score.ScoreDetails.total_damage_dealt_life",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_damage_dealt_shields": [
        "sc2.score.ScoreDetails.total_damage_dealt_shields",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_damage_dealt_energy": [
        "sc2.score.ScoreDetails.total_damage_dealt_energy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_damage_taken_life": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_damage_taken_life",
    ],
    "test.test_PT_score.test_PT_total_damage_taken_shields": [
        "sc2.score.ScoreDetails.total_damage_taken_shields",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_damage_taken_energy": [
        "sc2.score.ScoreDetails.total_damage_taken_energy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_score.test_PT_total_healed_life": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_healed_life",
    ],
    "test.test_PT_score.test_PT_total_healed_shields": [
        "sc2.score.ScoreDetails.__init__",
        "sc2.score.ScoreDetails.total_healed_shields",
    ],
    "test.test_PT_score.test_PT_total_healed_energy": [
        "sc2.score.ScoreDetails.total_healed_energy",
        "sc2.score.ScoreDetails.__init__",
    ],
    "test.test_PT_maps": [],
    "test.test_PT_maps.test_PT_get": ["sc2.maps.get"],
    "test.test_PT_maps.test_PT_name": ["sc2.maps.Map.__init__", "sc2.maps.Map.name"],
    "test.test_PT_maps.test_PT_data": ["sc2.maps.Map.__init__", "sc2.maps.Map.data"],
    "test.test_PT_maps.test_PT_matches": [
        "sc2.maps.Map.__init__",
        "sc2.maps.Map.matches",
    ],
    "test.test_PT_renderer": [],
    "test.test_PT_renderer.test_PT_render": [
        "sc2.renderer.Renderer.render",
        "sc2.renderer.Renderer.__init__",
    ],
    "test.test_PT_unit_command": [],
    "test.test_PT_unit_command.test_PT_combining_tuple": [
        "sc2.unit_command.UnitCommand.combining_tuple",
        "sc2.unit_command.UnitCommand.__init__",
    ],
    "test.test_PT_protocol": [],
    "test.test_PT_protocol.test_PT_is_game_over_error": [
        "sc2.protocol.ProtocolError.is_game_over_error"
    ],
    "test.test_PT_protocol.test_PT_ping": [
        "sc2.protocol.Protocol.__init__",
        "sc2.protocol.Protocol.ping",
    ],
    "test.test_PT_protocol.test_PT_quit": [
        "sc2.protocol.Protocol.quit",
        "sc2.protocol.Protocol.__init__",
    ],
    "test.travis_test_script": [
        "time.time",
        "<builtin>.range",
        "<builtin>.print",
        "subprocess.Popen.communicate",
        "pytest.importorskip",
        "<builtin>.max",
        "<builtin>.round",
        "<builtin>.len",
        "<builtin>.exit",
        "subprocess.Popen",
    ],
    "pytest.importorskip": [],
    "test.travis_test_script.func": [],
    "time.time": [],
    "subprocess.Popen.communicate": [],
    "test.travis_test_script.<lambda1>": [],
    "test.test_PT_main": [],
    "test.test_PT_main.test_PT_push": [
        "sc2.main.SlidingTimeWindow.__init__",
        "sc2.main.SlidingTimeWindow.push",
    ],
    "test.test_PT_main.test_PT_clear": [
        "sc2.main.SlidingTimeWindow.clear",
        "sc2.main.SlidingTimeWindow.__init__",
    ],
    "test.test_PT_main.test_PT_sum": [
        "sc2.main.SlidingTimeWindow.sum",
        "sc2.main.SlidingTimeWindow.__init__",
    ],
    "test.test_PT_main.test_PT_available": [
        "sc2.main.SlidingTimeWindow.available",
        "sc2.main.SlidingTimeWindow.__init__",
    ],
    "test.test_PT_main.test_PT_available_fmt": [
        "sc2.main.SlidingTimeWindow.available_fmt",
        "sc2.main.SlidingTimeWindow.__init__",
    ],
    "test.test_PT_main.test_PT_run_game": ["sc2.main.run_game"],
    "test.test_directions": [],
    "test.test_directions.rad_diff": ["<builtin>.abs", "<builtin>.min"],
    "test.test_directions.test_test_rad_diff_2": ["test.test_directions.rad_diff"],
    "test.test_directions.test_test_rad_diff": ["test.test_directions.rad_diff"],
    "test.test_directions.test_distance": [
        "math.sqrt",
        "sc2.position.Pointlike.distance_to",
    ],
    "math.sqrt": [],
    "test.test_directions.test_towards": [
        "math.sqrt",
        "sc2.position.Pointlike.towards",
    ],
    "test.test_directions.test_random_on_distance": [
        "test.test_directions.test_random_on_distance.verify_distances",
        "test.test_directions.test_random_on_distance.verify_angles",
        "random.seed",
    ],
    "random.seed": [],
    "test.test_directions.test_random_on_distance.get_points": [
        "<builtin>.range",
        "sc2.position.Point2.random_on_distance",
    ],
    "test.test_directions.test_random_on_distance.verify_distances": [
        "test.test_directions.test_random_on_distance.get_points",
        "<builtin>.abs",
        "sc2.position.Pointlike.distance_to",
    ],
    "test.test_directions.test_random_on_distance.verify_angles": [
        "test.test_directions.test_random_on_distance.get_points",
        "math.atan2",
        "math.cos",
        "<builtin>.len",
        "math.sin",
    ],
    "test.test_directions.test_towards_random_angle": [
        "test.test_directions.test_towards_random_angle.verify",
        "random.seed",
        "test.test_directions.test_towards_random_angle.random_points",
    ],
    "test.test_directions.test_towards_random_angle.random_points": [
        "<builtin>.range",
        "test.test_directions.test_towards_random_angle.random_points.<lambda1>",
    ],
    "test.test_directions.test_towards_random_angle.random_points.<lambda1>": [
        "random.random"
    ],
    "test.test_directions.test_towards_random_angle.verify": [
        "<builtin>.range",
        "random.random",
        "math.atan2",
        "test.test_directions.rad_diff",
        "sc2.position.Pointlike.distance_to",
        "sc2.position.Point2.towards_with_random_angle",
        "<builtin>.abs",
    ],
    "test.test_PT_power_source": [],
    "test.test_PT_power_source.test_PT_from_proto": [
        "sc2.power_source.PowerSource.__init__",
        "sc2.power_source.PowerSource.from_proto",
    ],
    "test.test_PT_power_source.test_PT_covers": [
        "sc2.power_source.PowerSource.__init__",
        "sc2.power_source.PowerSource.covers",
    ],
    "test.test_PT_power_source.test_PT_PsionicMatrix_from_proto": [
        "sc2.power_source.PsionicMatrix.from_proto",
        "sc2.power_source.PsionicMatrix.__init__",
    ],
    "test.test_PT_power_source.test_PT_PsionicMatrix_covers": [
        "sc2.power_source.PsionicMatrix.covers",
        "sc2.power_source.PsionicMatrix.__init__",
    ],
    "test.test_PT_position": [],
    "test.test_PT_position.test_PT_rounded": ["sc2.position.Pointlike.rounded"],
    "test.test_PT_position.test_PT_position": ["sc2.position.Pointlike.position"],
    "test.test_PT_position.test_PT_distance_to": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.position.Pointlike.distance_to",
    ],
    "test.test_PT_position.test_PT_distance_to_point2": [
        "sc2.position.Pointlike.distance_to_point2"
    ],
    "test.test_PT_position.test_PT_sort_by_distance": [
        "sc2.position.Pointlike.sort_by_distance",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_position.test_PT_closest": [
        "sc2.units.Units.__init__",
        "sc2.position.Pointlike.closest",
    ],
    "test.test_PT_position.test_PT_distance_to_closest": [
        "sc2.position.Pointlike.distance_to_closest",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_position.test_PT_furthest": [
        "sc2.units.Units.__init__",
        "sc2.position.Pointlike.furthest",
    ],
    "test.test_PT_position.test_PT_distance_to_furthest": [
        "sc2.units.Units.__init__",
        "sc2.position.Pointlike.distance_to_furthest",
    ],
    "test.test_PT_position.test_PT_offset": ["sc2.position.Pointlike.offset"],
    "test.test_PT_position.test_PT_unit_axes_towards": [
        "sc2.position.Pointlike.unit_axes_towards"
    ],
    "test.test_PT_position.test_PT_towards": [
        "sc2.position.Pointlike.towards",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_position.test_PT_from_proto": [
        "sc2.position.Point3.from_proto",
        "sc2.position.Point2.from_proto",
    ],
    "test.test_PT_position.test_PT_x": ["sc2.position.Point2.x"],
    "test.test_PT_position.test_PT_y": ["sc2.position.Point2.y"],
    "test.test_PT_position.test_PT_to2": ["sc2.position.Point2.to2"],
    "test.test_PT_position.test_PT_to3": [
        "sc2.position.Point3.to3",
        "sc2.position.Point2.to3",
    ],
    "test.test_PT_position.test_PT_distance2_to": ["sc2.position.Point2.distance2_to"],
    "test.test_PT_position.test_PT_random_on_distance": [
        "sc2.position.Point2.random_on_distance"
    ],
    "test.test_PT_position.test_PT_towards_with_random_angle": [
        "sc2.position.Point2.towards_with_random_angle"
    ],
    "test.test_PT_position.test_PT_circle_intersection": [
        "sc2.position.Point2.circle_intersection"
    ],
    "test.test_PT_position.test_PT_neighbors4": ["sc2.position.Point2.neighbors4"],
    "test.test_PT_position.test_PT_neighbors8": ["sc2.position.Point2.neighbors8"],
    "test.test_PT_position.test_PT_negative_offset": [
        "sc2.position.Point2.negative_offset"
    ],
    "test.test_PT_position.test_PT_is_same_as": ["sc2.position.Point2.is_same_as"],
    "test.test_PT_position.test_PT_direction_vector": [
        "sc2.position.Point2.direction_vector"
    ],
    "test.test_PT_position.test_PT_manhattan_distance": [
        "sc2.position.Point2.manhattan_distance"
    ],
    "test.test_PT_position.test_PT_center": ["sc2.position.Point2.center"],
    "test.test_PT_position.test_PT_Point3_from_proto": [
        "sc2.position.Point3.from_proto"
    ],
    "test.test_PT_position.test_PT_Point3_z": ["sc2.position.Point3.z"],
    "test.test_PT_position.test_PT_Point3_to3": ["sc2.position.Point3.to3"],
    "test.test_PT_position.test_PT_Size_width": ["sc2.position.Size.width"],
    "test.test_PT_position.test_PT_Size_height": ["sc2.position.Size.height"],
    "test.test_PT_position.test_PT_Rect_from_proto": [],
    "test.test_PT_position.test_PT_Rect_x": [],
    "test.test_PT_position.test_PT_Rect_y": [],
    "test.test_PT_position.test_PT_Rect_": [],
    "test.test_PT_position.test_PT_Rect_width": [],
    "test.test_PT_position.test_PT_Rect_height": [],
    "test.test_PT_position.test_PT_Rect_size": [],
    "test.test_PT_position.test_PT_Rect_center": [],
    "test.test_PT_position.test_PT_Rect_offset": [],
    "test.test_PT_bot_ai": [],
    "test.test_PT_bot_ai.test_PT_enemy_race": [
        "sc2.bot_ai.BotAI.enemy_race",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_time": [
        "sc2.bot_ai.BotAI.time",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_time_formatted": [
        "sc2.bot_ai.BotAI.time_formatted",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_game_info": [
        "sc2.bot_ai.BotAI.game_info",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_start_location": [
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.start_location",
    ],
    "test.test_PT_bot_ai.test_PT_enemy_start_locations": [
        "sc2.bot_ai.BotAI.enemy_start_locations",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_known_enemy_units": [
        "sc2.bot_ai.BotAI.known_enemy_units",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_known_enemy_structures": [
        "sc2.bot_ai.BotAI.known_enemy_structures",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_main_base_ramp": [
        "sc2.bot_ai.BotAI.main_base_ramp",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_expansion_locations": [
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.expansion_locations",
    ],
    "test.test_PT_bot_ai.test_PT_get_available_abilities": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "test.test_PT_bot_ai.test_PT_expand_now": [
        "enum.Enum.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.expand_now",
    ],
    "test.test_PT_bot_ai.test_PT_get_next_expansion": [
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.get_next_expansion",
    ],
    "test.test_PT_bot_ai.test_PT_distribute_workers": [
        "sc2.bot_ai.BotAI.distribute_workers",
        "sc2.bot_ai.BotAI.__init__",
        "examples.terran.mass_reaper.MassReaperBot.distribute_workers",
    ],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers": [
        "<builtin>.range",
        "<builtin>.sum",
        "<builtin>.set",
        "<builtin>.len",
        "<builtin>.all",
    ],
    "test.test_PT_bot_ai.test_PT_owned_expansions": [
        "sc2.bot_ai.BotAI.owned_expansions",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_can_feed": [
        "enum.Enum.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.can_feed",
    ],
    "test.test_PT_bot_ai.test_PT_can_afford": [
        "enum.Enum.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.can_afford",
    ],
    "test.test_PT_bot_ai.test_PT_can_cast": [
        "enum.Enum.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.can_cast",
    ],
    "test.test_PT_bot_ai.test_PT_select_build_worker": [
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_can_place": [
        "enum.Enum.__init__",
        "sc2.bot_ai.BotAI.can_place",
        "sc2.game_data.AbilityData.__init__",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_find_placement": [
        "enum.Enum.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.find_placement",
    ],
    "test.test_PT_bot_ai.test_PT_already_pending_upgrade": [
        "enum.Enum.__init__",
        "sc2.bot_ai.BotAI.already_pending_upgrade",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_already_pending": [
        "enum.Enum.__init__",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.already_pending",
    ],
    "examples.terran.mass_reaper.MassReaperBot.already_pending": [
        "<builtin>.any",
        "<builtin>.sum",
    ],
    "test.test_PT_bot_ai.test_PT_build": [
        "enum.Enum.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.build",
    ],
    "test.test_PT_bot_ai.test_PT_do": [
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_do_actions": [
        "sc2.bot_ai.BotAI.do_actions",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_chat_send": [
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.chat_send",
    ],
    "test.test_PT_bot_ai.test_PT_get_terrain_height": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.get_terrain_height",
    ],
    "test.test_PT_bot_ai.test_PT_in_placement_grid": [
        "sc2.bot_ai.BotAI.in_placement_grid",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_in_pathing_grid": [
        "sc2.bot_ai.BotAI.in_pathing_grid",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_is_visible": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.is_visible",
    ],
    "test.test_PT_bot_ai.test_PT_has_creep": [
        "sc2.bot_ai.BotAI.has_creep",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_issue_events": [
        "sc2.bot_ai.BotAI.issue_events",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_on_unit_destroyed": [
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.on_unit_destroyed",
    ],
    "test.test_PT_bot_ai.test_PT_on_unit_created": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.on_unit_created",
    ],
    "test.test_PT_bot_ai.test_PT_on_building_construction_started": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.on_building_construction_started",
    ],
    "test.test_PT_bot_ai.test_PT_on_building_construction_complete": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.on_building_construction_complete",
    ],
    "test.test_PT_bot_ai.test_PT_on_start": [
        "sc2.bot_ai.BotAI.__init__",
        "sc2.bot_ai.BotAI.on_start",
    ],
    "test.test_PT_bot_ai.test_PT_on_step": [
        "examples.worker_rush.WorkerRushBot.on_step",
        "examples.terran.mass_reaper.MassReaperBot.on_step",
        "examples.protoss.cannon_rush.CannonRushBot.on_step",
        "sc2.bot_ai.BotAI.on_step",
        "examples.zerg.hydralisk_push.Hydralisk.on_step",
        "examples.protoss.threebase_voidray.ThreebaseVoidrayBot.on_step",
        "examples.zerg.onebase_broodlord.BroodlordBot.on_step",
        "examples.protoss.warpgate_push.WarpGateBot.on_step",
        "examples.arcade_bot.MarineSplitChallenge.on_step",
        "sc2.bot_ai.BotAI.__init__",
        "examples.terran.cyclone_push.ProxyRaxBot.on_step",
        "examples.terran.proxy_rax.ProxyRaxBot.on_step",
        "examples.terran.ramp_wall.RampWallBot.on_step",
        "examples.terran.onebase_battlecruiser.ProxyRaxBot.on_step",
        "examples.zerg.zerg_rush.ZergRushBot.on_step",
        "examples.distributed_workers.TerranBot.on_step",
    ],
    "examples.worker_rush.WorkerRushBot.on_step": ["sc2.bot_ai.BotAI.do_actions"],
    "examples.terran.mass_reaper.MassReaperBot.on_step": [
        "examples.terran.mass_reaper.MassReaperBot.inPathingGrid",
        "sc2.bot_ai.BotAI.do_actions",
        "sc2.bot_ai.BotAI.find_placement",
        "sc2.bot_ai.BotAI.get_next_expansion",
        "<builtin>.print",
        "examples.terran.mass_reaper.MassReaperBot.neighbors8",
        "random.choice",
        "sc2.bot_ai.BotAI.can_place",
        "sc2.bot_ai.BotAI.can_cast",
        "<builtin>.max",
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.bot_ai.BotAI.can_afford",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "examples.terran.mass_reaper.MassReaperBot.distribute_workers",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "examples.protoss.cannon_rush.CannonRushBot.on_step": [
        "<builtin>.range",
        "random.randrange",
        "sc2.bot_ai.BotAI.chat_send",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.build",
    ],
    "examples.zerg.hydralisk_push.Hydralisk.on_step": [
        "sc2.bot_ai.BotAI.build",
        "examples.zerg.hydralisk_push.Hydralisk.select_target",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "examples.protoss.threebase_voidray.ThreebaseVoidrayBot.on_step": [
        "sc2.bot_ai.BotAI.build",
        "examples.protoss.threebase_voidray.ThreebaseVoidrayBot.select_target",
        "sc2.bot_ai.BotAI.chat_send",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.expand_now",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "examples.terran.proxy_rax.ProxyRaxBot.on_step": [
        "<builtin>.list",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.helpers.control_group.ControlGroup.__init__",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.build",
    ],
    "examples.protoss.warpgate_push.WarpGateBot.on_step": [
        "sc2.bot_ai.BotAI.build",
        "sc2.bot_ai.BotAI.get_available_abilities",
        "sc2.bot_ai.BotAI.distribute_workers",
        "examples.protoss.warpgate_push.WarpGateBot.warp_new_units",
        "examples.protoss.warpgate_push.WarpGateBot.select_target",
        "examples.terran.mass_reaper.MassReaperBot.distribute_workers",
        "sc2.bot_ai.BotAI.can_afford",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.already_pending",
    ],
    "examples.arcade_bot.MarineSplitChallenge.on_step": [
        "sc2.bot_ai.BotAI.do_actions",
        "examples.arcade_bot.MarineSplitChallenge.position_around_unit",
        "<builtin>.print",
        "<builtin>.min",
        "sc2.bot_ai.BotAI.in_pathing_grid",
        "sc2.bot_ai.BotAI.already_pending_upgrade",
        "examples.arcade_bot.MarineSplitChallenge.on_first_iteration",
        "<builtin>.max",
    ],
    "examples.terran.cyclone_push.ProxyRaxBot.on_step": [
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "examples.terran.cyclone_push.ProxyRaxBot.select_target",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.build",
    ],
    "examples.terran.ramp_wall.RampWallBot.on_step": [
        "<builtin>.len",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.bot_ai.BotAI.do",
    ],
    "examples.terran.onebase_battlecruiser.ProxyRaxBot.on_step": [
        "examples.terran.onebase_battlecruiser.ProxyRaxBot.select_target",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.select_build_worker",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.build",
    ],
    "examples.zerg.zerg_rush.ZergRushBot.on_step": [
        "<builtin>.range",
        "sc2.bot_ai.BotAI.can_place",
        "sc2.bot_ai.BotAI.chat_send",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "examples.zerg.onebase_broodlord.BroodlordBot.on_step": [
        "sc2.bot_ai.BotAI.build",
        "examples.zerg.onebase_broodlord.BroodlordBot.select_target",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.already_pending",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "examples.distributed_workers.TerranBot.on_step": [
        "examples.distributed_workers.TerranBot.expand",
        "sc2.bot_ai.BotAI.distribute_workers",
        "examples.distributed_workers.TerranBot.build_workers",
        "examples.distributed_workers.TerranBot.build_supply",
        "examples.terran.mass_reaper.MassReaperBot.distribute_workers",
    ],
    "test.test_PT_bot_ai.test_PT_on_end": [
        "sc2.bot_ai.BotAI.on_end",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_PT_bot_ai.test_PT_action_result": [],
    "test.autotest_bot": ["pytest.mark.skip", "test.autotest_bot.main"],
    "test.autotest_bot.TestBot.__init__": ["<builtin>.set"],
    "test.autotest_bot.TestBot.on_step": [
        "<builtin>.round",
        "<builtin>.len",
        "<builtin>.print",
        "<builtin>.exit",
    ],
    "test.autotest_bot.TestBot.test_botai_properties": [
        "<builtin>.len",
        "<builtin>.isinstance",
    ],
    "test.autotest_bot.TestBot.test_botai_actions1": [],
    "test.autotest_bot.TestBot.test_botai_actions2": [],
    "test.autotest_bot.TestBot.test_botai_actions3": [],
    "test.autotest_bot.TestBot.test_botai_actions4": [],
    "test.autotest_bot.TestBot.test_botai_actions5": [],
    "test.autotest_bot.TestBot.test_botai_actions1_successful": [],
    "test.autotest_bot.TestBot.test_botai_actions2_successful": [],
    "test.autotest_bot.TestBot.test_botai_actions2_successful.<lambda1>": [],
    "test.autotest_bot.TestBot.test_botai_actions3_successful": [],
    "test.autotest_bot.TestBot.test_botai_actions3_successful.<lambda1>": [],
    "test.autotest_bot.TestBot.test_botai_actions4_successful": [],
    "test.autotest_bot.TestBot.test_botai_actions5_successful": [],
    "test.autotest_bot.TestBot.test_gamestate_static_variables": ["<builtin>.len"],
    "test.autotest_bot.TestBot.test_game_info_static_variables": ["<builtin>.len"],
    "test.autotest_bot.TestBot.test_positions": [
        "sc2.position.Pointlike.furthest",
        "sc2.position.Pointlike.offset",
        "sc2.position.Pointlike.closest",
        "sc2.position.Pointlike.distance_to",
        "sc2.position.Pointlike.towards",
    ],
    "test.autotest_bot.TestBot.test_unit": ["<builtin>.isinstance"],
    "test.autotest_bot.TestBot.test_units": ["<builtin>.abs"],
    "test.autotest_bot.main": [
        "test.autotest_bot.TestBot",
        "sc2.player.Computer.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "sc2.run_game": [],
    "test.autotest_bot.xd.abbb": [],
    "test.autotest_bot.test_PT_tt": [],
    "test.autotest_bot.test_PT_testbot_not_async_on_step": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.on_step",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_properties": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_properties",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions1": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions1",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions2": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions2",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions3": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions3",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions4": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions4",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions5": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions5",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions1_successful": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions1_successful",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions2_successful": [
        "test.autotest_bot.TestBot.test_botai_actions2_successful",
        "test.autotest_bot.TestBot",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions3_successful": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions3_successful",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions4_successful": [
        "test.autotest_bot.TestBot.test_botai_actions4_successful",
        "test.autotest_bot.TestBot",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_botai_actions5_successful": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_botai_actions5_successful",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_game_info_static_variables": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_game_info_static_variables",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_positions": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_positions",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_unit": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_unit",
    ],
    "test.autotest_bot.test_PT_testbot_not_async_test_units": [
        "test.autotest_bot.TestBot",
        "test.autotest_bot.TestBot.test_units",
    ],
    "test.test_PT_portconfig": [],
    "test.test_PT_portconfig.test_PT_as_json": [
        "sc2.portconfig.Portconfig.as_json",
        "sc2.portconfig.Portconfig.__init__",
    ],
    "test.test_PT_portconfig.test_PT_from_json": [
        "sc2.portconfig.Portconfig.from_json",
        "sc2.portconfig.Portconfig.__init__",
    ],
    "test.test_PT_cache": [],
    "test.test_PT_cache.test_PT_cache_forever": ["sc2.cache.cache_forever"],
    "test.test_PT_cache.test_PT_property_cache_forever": [
        "sc2.cache.property_cache_forever"
    ],
    "test.test_PT_cache.test_PT_property_cache_once_per_frame": [],
    "test.test_PT_cache.test_PT_property_immutable_cache": [],
    "test.test_PT_cache.test_PT_property_mutable_cache": [],
    "test.test_PT_pixel_map": [],
    "test.test_PT_pixel_map.test_PT_width": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.width",
    ],
    "test.test_PT_pixel_map.test_PT_height": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.height",
    ],
    "test.test_PT_pixel_map.test_PT_bits_per_pixel": [
        "sc2.pixel_map.PixelMap.bits_per_pixel",
        "sc2.pixel_map.PixelMap.__init__",
    ],
    "test.test_PT_pixel_map.test_PT_bytes_per_pixel": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.bytes_per_pixel",
    ],
    "test.test_PT_pixel_map.test_PT_is_set": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.is_set",
    ],
    "test.test_PT_pixel_map.test_PT_is_empty": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.is_empty",
    ],
    "test.test_PT_pixel_map.test_PT_invert": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.invert",
    ],
    "test.test_PT_pixel_map.test_PT_flood_fill": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.flood_fill",
    ],
    "test.test_PT_pixel_map.test_PT_flood_fill_all": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.flood_fill_all",
    ],
    "test.test_PT_pixel_map.test_PT_print": [
        "sc2.pixel_map.PixelMap.__init__",
        "sc2.pixel_map.PixelMap.print",
    ],
    "test.test_PT_pixel_map.test_PT_save_image": [
        "sc2.pixel_map.PixelMap.save_image",
        "sc2.pixel_map.PixelMap.__init__",
    ],
    "test.test_PT_game_info": [],
    "test.test_PT_game_info.test_PT_size": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.size",
    ],
    "test.test_PT_game_info.test_PT_height_at": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.height_at",
    ],
    "test.test_PT_game_info.test_PT_points": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.points",
    ],
    "test.test_PT_game_info.test_PT_upper": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.upper",
    ],
    "test.test_PT_game_info.test_PT_upper2_for_ramp_wall": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.upper2_for_ramp_wall",
    ],
    "test.test_PT_game_info.test_PT_top_center": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.top_center",
    ],
    "test.test_PT_game_info.test_PT_lower": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.lower",
    ],
    "test.test_PT_game_info.test_PT_bottom_center": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.bottom_center",
    ],
    "test.test_PT_game_info.test_PT_barracks_in_middle": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.barracks_in_middle",
    ],
    "test.test_PT_game_info.test_PT_depot_in_middle": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.depot_in_middle",
    ],
    "test.test_PT_game_info.test_PT_corner_depots": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.corner_depots",
    ],
    "test.test_PT_game_info.test_PT_barracks_can_fit_addon": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.barracks_can_fit_addon",
    ],
    "test.test_PT_game_info.test_PT_barracks_correct_placement": [
        "sc2.game_info.Ramp.__init__",
        "sc2.game_info.Ramp.barracks_correct_placement",
    ],
    "test.test_PT_game_info.test_PT_map_center": [
        "sc2.game_info.GameInfo.__init__",
        "sc2.game_info.GameInfo.map_center",
    ],
    "test.test_PT_game_state": [],
    "test.test_PT_game_state.test_PT_is_blip": [
        "sc2.game_state.Blip.__init__",
        "sc2.game_state.Blip.is_blip",
    ],
    "test.test_PT_game_state.test_PT_is_snapshot": [
        "sc2.game_state.Blip.__init__",
        "sc2.game_state.Blip.is_snapshot",
    ],
    "test.test_PT_game_state.test_PT_is_visible": [
        "sc2.game_state.Blip.is_visible",
        "sc2.game_state.Blip.__init__",
    ],
    "test.test_PT_game_state.test_PT_alliance": [
        "sc2.game_state.Blip.alliance",
        "sc2.game_state.Blip.__init__",
    ],
    "test.test_PT_game_state.test_PT_is_mine": [
        "sc2.game_state.Blip.is_mine",
        "sc2.game_state.Blip.__init__",
    ],
    "test.test_PT_game_state.test_PT_is_enemy": [
        "sc2.game_state.Blip.is_enemy",
        "sc2.game_state.Blip.__init__",
    ],
    "test.test_PT_game_state.test_PT_position": [
        "sc2.game_state.Blip.position",
        "sc2.game_state.Blip.__init__",
    ],
    "test.test_PT_game_state.test_PT_position3d": [
        "sc2.game_state.Blip.position3d",
        "sc2.game_state.Blip.__init__",
    ],
    "test.test_PT_game_state.test_PT_id": [
        "sc2.game_state.EffectData.id",
        "sc2.game_state.EffectData.__init__",
    ],
    "test.test_PT_game_state.test_PT_positions": [
        "sc2.game_state.EffectData.__init__",
        "sc2.game_state.EffectData.positions",
    ],
    "test.test_PT_client": [],
    "test.test_PT_client.test_PT_in_game": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.in_game",
    ],
    "test.test_PT_client.test_PT_join_game": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.join_game",
    ],
    "test.test_PT_client.test_PT_leave": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.leave",
    ],
    "test.test_PT_client.test_PT_debug_leave": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.debug_leave",
    ],
    "test.test_PT_client.test_PT_save_replay": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.save_replay",
    ],
    "test.test_PT_client.test_PT_observation": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.observation",
    ],
    "test.test_PT_client.test_PT_step": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.step",
    ],
    "test.test_PT_client.test_PT_get_game_data": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.get_game_data",
    ],
    "test.test_PT_client.test_PT_get_game_info": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.get_game_info",
    ],
    "test.test_PT_client.test_PT_actions": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.actions",
    ],
    "test.test_PT_client.test_PT_query_pathing": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.query_pathing",
    ],
    "test.test_PT_client.test_PT_query_building_placement": [
        "enum.Enum.__init__",
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.query_building_placement",
    ],
    "test.test_PT_client.test_PT_query_available_abilities": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.query_available_abilities",
    ],
    "test.test_PT_client.test_PT_chat_send": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.chat_send",
    ],
    "test.test_PT_client.test_PT_debug_create_unit": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.debug_create_unit",
    ],
    "test.test_PT_client.test_PT_debug_kill_unit": [
        "sc2.client.Client.__init__",
        "sc2.units.Units.__init__",
        "sc2.client.Client.debug_kill_unit",
    ],
    "test.test_PT_client.test_PT_move_camera": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.move_camera",
    ],
    "test.test_PT_client.test_PT_move_camera_spatial": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.move_camera_spatial",
    ],
    "test.test_PT_client.test_PT_debug_text": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.debug_text",
    ],
    "test.test_PT_client.test_PT_debug_text_simple": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.debug_text_simple",
    ],
    "test.test_PT_client.test_PT_debug_text_screen": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.debug_text_screen",
    ],
    "test.test_PT_client.test_PT_debug_text_2d": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.debug_text_2d",
    ],
    "test.test_PT_client.test_PT_debug_text_world": [
        "sc2.client.Client.debug_text_world",
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_client.test_PT_debug_text_3d": [
        "sc2.client.Client.debug_text_3d",
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_client.test_PT_debug_line_out": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.debug_line_out",
    ],
    "test.test_PT_client.test_PT_debug_box_out": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.debug_box_out",
    ],
    "test.test_PT_client.test_PT_debug_sphere_out": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.debug_sphere_out",
    ],
    "test.test_PT_client.test_PT_send_debug": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.send_debug",
    ],
    "test.test_PT_client.test_PT_to_debug_color": [
        "sc2.client.Client.__init__",
        "sc2.client.Client.to_debug_color",
    ],
    "test.test_PT_client.test_PT_to_debug_point": [
        "sc2.client.Client.__init__",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.client.Client.to_debug_point",
    ],
    "test.test_PT_client.test_PT_to_debug_message": [
        "sc2.client.Client.to_debug_message",
        "sc2.client.Client.__init__",
    ],
    "test.test_PT_game_data": [],
    "test.test_PT_game_data.test_PT_split_camel_case": [
        "sc2.game_data.split_camel_case"
    ],
    "test.test_PT_game_data.test_PT_calculate_ability_cost": [
        "enum.Enum.__init__",
        "sc2.game_data.GameData.__init__",
        "sc2.game_data.GameData.calculate_ability_cost",
    ],
    "test.test_PT_game_data.test_PT_id_exists": [
        "enum.Enum.__init__",
        "sc2.game_data.AbilityData.__init__",
        "sc2.game_data.AbilityData.id_exists",
    ],
    "test.test_PT_game_data.test_PT_id": [
        "sc2.game_data.AbilityData.__init__",
        "sc2.game_data.AbilityData.id",
    ],
    "test.test_PT_game_data.test_PT_link_name": [
        "sc2.game_data.AbilityData.link_name",
        "sc2.game_data.AbilityData.__init__",
    ],
    "test.test_PT_game_data.test_PT_button_name": [
        "sc2.game_data.AbilityData.__init__",
        "sc2.game_data.AbilityData.button_name",
    ],
    "test.test_PT_game_data.test_PT_friendly_name": [
        "sc2.game_data.AbilityData.friendly_name",
        "sc2.game_data.AbilityData.__init__",
    ],
    "test.test_PT_game_data.test_PT_is_free_morph": [
        "sc2.game_data.AbilityData.__init__",
        "sc2.game_data.AbilityData.is_free_morph",
    ],
    "test.test_PT_game_data.test_PT_cost": [
        "sc2.game_data.AbilityData.__init__",
        "sc2.game_data.AbilityData.cost",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_id": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.id",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_name": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.name",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_creation_ability": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.creation_ability",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_attributes": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.attributes",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_has_attribute": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.has_attribute",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_has_minerals": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.has_minerals",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_has_vespene": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.has_vespene",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_cargo_size": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.cargo_size",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_tech_requirement": [
        "sc2.game_data.UnitTypeData.tech_requirement",
        "sc2.game_data.UnitTypeData.__init__",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_tech_alias": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.tech_alias",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_unit_alias": [
        "sc2.game_data.UnitTypeData.unit_alias",
        "sc2.game_data.UnitTypeData.__init__",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_race": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.race",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_cost": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.cost",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_cost_zerg_corrected": [
        "sc2.game_data.UnitTypeData.cost_zerg_corrected",
        "sc2.game_data.UnitTypeData.__init__",
    ],
    "test.test_PT_game_data.test_PT_UnitTypeData_morph_cost": [
        "sc2.game_data.UnitTypeData.__init__",
        "sc2.game_data.UnitTypeData.morph_cost",
    ],
    "test.test_PT_game_data.test_PT_UpgradeData_name": [
        "sc2.game_data.UpgradeData.__init__",
        "sc2.game_data.UpgradeData.name",
    ],
    "test.test_PT_game_data.test_PT_UpgradeData_research_ability": [
        "sc2.game_data.UpgradeData.__init__",
        "sc2.game_data.UpgradeData.research_ability",
    ],
    "test.test_PT_game_data.test_PT_UpgradeData_cost": [
        "sc2.game_data.UpgradeData.__init__",
        "sc2.game_data.UpgradeData.cost",
    ],
    "test.test_PT_paths": [],
    "test.test_PT_paths.test_PT_get_env": ["sc2.paths.get_env"],
    "test.test_PT_paths.test_PT_latest_executeble": ["sc2.paths.latest_executeble"],
    "test.test_examples": ["pytest.mark.slow"],
    "test.test_examples.run_example": [
        "<builtin>.print",
        "sc2.player.Computer.__init__",
        "<builtin>.RuntimeError",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "pytest.mark.slow": [],
    "test.test_examples.test_proxy_rax_example": [
        "test.test_examples.run_example",
        "examples.terran.proxy_rax.ProxyRaxBot.__init__",
    ],
    "examples.terran.proxy_rax.ProxyRaxBot.__init__": ["<builtin>.set"],
    "test.test_examples.test_ramp_wall_example": [
        "test.test_examples.run_example",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_examples.test_cannon_rush_example": [
        "test.test_examples.run_example",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "test.test_examples.test_warpgate_example": [
        "examples.protoss.warpgate_push.WarpGateBot.__init__",
        "test.test_examples.run_example",
    ],
    "examples.protoss.warpgate_push.WarpGateBot.__init__": [],
    "test.test_examples.test_zerg_rush_example": [
        "examples.zerg.zerg_rush.ZergRushBot.__init__",
        "test.test_examples.run_example",
    ],
    "examples.zerg.zerg_rush.ZergRushBot.__init__": [],
    "test.test_examples.test_broodlord_example": [
        "test.test_examples.run_example",
        "sc2.bot_ai.BotAI.__init__",
    ],
    "examples": ["pathlib.Path", "pathlib.Path.iterdir"],
    "pathlib.Path.iterdir": [],
    "examples.terran.ramp_wall": ["examples.terran.ramp_wall.main"],
    "examples.terran.ramp_wall.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.protoss.warpgate_push": ["examples.protoss.warpgate_push.main"],
    "examples.protoss.warpgate_push.WarpGateBot.select_target": [],
    "examples.protoss.warpgate_push.WarpGateBot.warp_new_units": [
        "<builtin>.print",
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.find_placement",
        "sc2.bot_ai.BotAI.get_available_abilities",
    ],
    "examples.protoss.warpgate_push.main": [
        "sc2.player.Computer.__init__",
        "examples.protoss.warpgate_push.WarpGateBot.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.zerg": ["pathlib.Path", "pathlib.Path.iterdir"],
    "examples.terran.proxy_rax": ["examples.terran.proxy_rax.main"],
    "examples.terran.proxy_rax.main": [
        "sc2.player.Computer.__init__",
        "examples.terran.proxy_rax.ProxyRaxBot.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.zerg.onebase_broodlord": ["examples.zerg.onebase_broodlord.main"],
    "examples.zerg.onebase_broodlord.BroodlordBot.select_target": ["random.choice"],
    "examples.zerg.onebase_broodlord.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.protoss": ["pathlib.Path", "pathlib.Path.iterdir"],
    "examples.zerg.zerg_rush": ["examples.zerg.zerg_rush.main"],
    "examples.zerg.zerg_rush.main": [
        "examples.zerg.zerg_rush.ZergRushBot.__init__",
        "sc2.player.Computer.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.terran": ["pathlib.Path", "pathlib.Path.iterdir"],
    "examples.protoss.cannon_rush": ["examples.protoss.cannon_rush.main"],
    "random.randrange": [],
    "examples.protoss.cannon_rush.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "test.test_sliding_window": [],
    "test.test_sliding_window.test_sliding_time_window": [
        "sc2.main.SlidingTimeWindow.__init__",
        "sc2.main.SlidingTimeWindow.push",
    ],
    "test.test_PT_unit": [],
    "test.test_PT_unit.test_PT_type_id": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.type_id",
    ],
    "test.test_PT_unit.test_PT_name": [
        "sc2.unit.PassengerUnit.name",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_race": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.race",
    ],
    "test.test_PT_unit.test_PT_tag": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.tag",
    ],
    "test.test_PT_unit.test_PT_is_structure": [
        "sc2.unit.PassengerUnit.is_structure",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_is_light": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.is_light",
    ],
    "test.test_PT_unit.test_PT_is_armored": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.is_armored",
    ],
    "test.test_PT_unit.test_PT_is_biological": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.is_biological",
    ],
    "test.test_PT_unit.test_PT_is_mechanical": [
        "sc2.unit.PassengerUnit.is_mechanical",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_is_robotic": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.is_robotic",
    ],
    "test.test_PT_unit.test_PT_is_massive": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.is_massive",
    ],
    "test.test_PT_unit.test_PT_is_psionic": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_psionic",
        "sc2.unit.PassengerUnit.is_psionic",
    ],
    "test.test_PT_unit.test_PT_cargo_size": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.cargo_size",
    ],
    "test.test_PT_unit.test_PT_can_attack": [
        "sc2.unit.PassengerUnit.can_attack",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_can_attack_ground": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.can_attack_ground",
    ],
    "test.test_PT_unit.test_PT_ground_dps": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.ground_dps",
    ],
    "test.test_PT_unit.test_PT_ground_range": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.ground_range",
    ],
    "test.test_PT_unit.test_PT_can_attack_air": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.can_attack_air",
    ],
    "test.test_PT_unit.test_PT_air_dps": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.air_dps",
    ],
    "test.test_PT_unit.test_PT_air_range": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.air_range",
    ],
    "test.test_PT_unit.test_PT_bonus_damage": [
        "sc2.unit.PassengerUnit.bonus_damage",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_armor": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.armor",
    ],
    "test.test_PT_unit.test_PT_sight_range": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.sight_range",
    ],
    "test.test_PT_unit.test_PT_movement_speed": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.movement_speed",
    ],
    "test.test_PT_unit.test_PT_health": [
        "sc2.unit.PassengerUnit.health",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_health_max": [
        "sc2.unit.PassengerUnit.health_max",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_health_percentage": [
        "sc2.unit.PassengerUnit.health_percentage",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_shield": [
        "sc2.unit.PassengerUnit.shield",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_shield_max": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.shield_max",
    ],
    "test.test_PT_unit.test_PT_shield_percentage": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.shield_percentage",
    ],
    "test.test_PT_unit.test_PT_energy": [
        "sc2.unit.PassengerUnit.energy",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_energy_max": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.energy_max",
    ],
    "test.test_PT_unit.test_PT_energy_percentage": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.PassengerUnit.energy_percentage",
    ],
    "test.test_PT_unit.test_PT_Unit_is_snapshot": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_snapshot",
    ],
    "test.test_PT_unit.test_PT_Unit_is_visible": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_visible",
    ],
    "test.test_PT_unit.test_PT_Unit_alliance": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.alliance",
    ],
    "test.test_PT_unit.test_PT_Unit_is_mine": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_mine",
    ],
    "test.test_PT_unit.test_PT_Unit_is_enemy": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_enemy",
    ],
    "test.test_PT_unit.test_PT_Unit_owner_id": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.owner_id",
    ],
    "test.test_PT_unit.test_PT_Unit_position": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.position",
    ],
    "test.test_PT_unit.test_PT_Unit_position3d": [
        "sc2.unit.Unit.position3d",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_distance_to": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.distance_to",
    ],
    "test.test_PT_unit.test_PT_Unit_facing": [
        "sc2.unit.Unit.facing",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_radius": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.radius",
    ],
    "test.test_PT_unit.test_PT_Unit_detect_range": [
        "sc2.unit.Unit.detect_range",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_radar_range": [
        "sc2.unit.Unit.radar_range",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_build_progress": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.build_progress",
    ],
    "test.test_PT_unit.test_PT_Unit_is_ready": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_ready",
    ],
    "test.test_PT_unit.test_PT_Unit_cloak": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.cloak",
    ],
    "test.test_PT_unit.test_PT_Unit_is_cloaked": [
        "sc2.unit.Unit.is_cloaked",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_blip": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_blip",
    ],
    "test.test_PT_unit.test_PT_Unit_is_powered": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_powered",
    ],
    "test.test_PT_unit.test_PT_Unit_is_burrowed": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_burrowed",
    ],
    "test.test_PT_unit.test_PT_Unit_is_flying": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_flying",
    ],
    "test.test_PT_unit.test_PT_Unit_is_psionic": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_psionic",
    ],
    "test.test_PT_unit.test_PT_Unit_is_mineral_field": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_mineral_field",
    ],
    "test.test_PT_unit.test_PT_Unit_is_vespene_geyser": [
        "sc2.unit.Unit.is_vespene_geyser",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_tech_alias": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.tech_alias",
    ],
    "test.test_PT_unit.test_PT_Unit_unit_alias": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.unit_alias",
    ],
    "test.test_PT_unit.test_PT_Unit_mineral_contents": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.mineral_contents",
    ],
    "test.test_PT_unit.test_PT_Unit_vespene_contents": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.vespene_contents",
    ],
    "test.test_PT_unit.test_PT_Unit_has_vespene": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.has_vespene",
    ],
    "test.test_PT_unit.test_PT_Unit_weapon_cooldown": [
        "sc2.unit.Unit.weapon_cooldown",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_has_cargo": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.has_cargo",
    ],
    "test.test_PT_unit.test_PT_Unit_cargo_used": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.cargo_used",
    ],
    "test.test_PT_unit.test_PT_Unit_cargo_max": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.cargo_max",
    ],
    "test.test_PT_unit.test_PT_Unit_passengers": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.passengers",
    ],
    "test.test_PT_unit.test_PT_Unit_passengers_tags": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.passengers_tags",
    ],
    "test.test_PT_unit.test_PT_Unit_target_in_range": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.target_in_range",
    ],
    "test.test_PT_unit.test_PT_Unit_is_carrying_minerals": [
        "sc2.unit.Unit.is_carrying_minerals",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_carrying_vespene": [
        "sc2.unit.Unit.is_carrying_vespene",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_selected": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_selected",
    ],
    "test.test_PT_unit.test_PT_Unit_orders": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.orders",
    ],
    "test.test_PT_unit.test_PT_Unit_noqueue": [
        "sc2.unit.Unit.noqueue",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_moving": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_moving",
    ],
    "test.test_PT_unit.test_PT_Unit_is_attacking": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_attacking",
    ],
    "test.test_PT_unit.test_PT_Unit_is_patrolling": [
        "sc2.unit.Unit.is_patrolling",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_gathering": [
        "sc2.unit.Unit.is_gathering",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_returning": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_returning",
    ],
    "test.test_PT_unit.test_PT_Unit_is_collecting": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_collecting",
    ],
    "test.test_PT_unit.test_PT_Unit_is_constructing_scv": [
        "sc2.unit.Unit.is_constructing_scv",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_is_repairing": [
        "sc2.unit.Unit.is_repairing",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_order_target": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.order_target",
    ],
    "test.test_PT_unit.test_PT_Unit_is_idle": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.is_idle",
    ],
    "test.test_PT_unit.test_PT_Unit_add_on_tag": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.add_on_tag",
    ],
    "test.test_PT_unit.test_PT_Unit_add_on_land_position": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.add_on_land_position",
    ],
    "test.test_PT_unit.test_PT_Unit_has_add_on": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.has_add_on",
    ],
    "test.test_PT_unit.test_PT_Unit_assigned_harvesters": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.assigned_harvesters",
    ],
    "test.test_PT_unit.test_PT_Unit_ideal_harvesters": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.ideal_harvesters",
    ],
    "test.test_PT_unit.test_PT_Unit_surplus_harvesters": [
        "sc2.unit.Unit.surplus_harvesters",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_train": [
        "sc2.unit.Unit.train",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_build": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.build",
    ],
    "test.test_PT_unit.test_PT_Unit_research": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.research",
    ],
    "test.test_PT_unit.test_PT_Unit_has_buff": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.has_buff",
    ],
    "test.test_PT_unit.test_PT_Unitwarp_in": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.warp_in",
    ],
    "test.test_PT_unit.test_PT_Unit_attack": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.attack",
    ],
    "test.test_PT_unit.test_PT_Unit_gather": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.gather",
    ],
    "test.test_PT_unit.test_PT_Unit_return_resource": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.return_resource",
    ],
    "test.test_PT_unit.test_PT_Unit_move": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.move",
    ],
    "test.test_PT_unit.test_PT_Unit_scan_move": [
        "sc2.unit.Unit.scan_move",
        "sc2.unit.PassengerUnit.__init__",
    ],
    "test.test_PT_unit.test_PT_Unit_hold_position": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.hold_position",
    ],
    "test.test_PT_unit.test_PT_Unit_stop": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.stop",
    ],
    "test.test_PT_unit.test_PT_Unit_patrol": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.patrol",
    ],
    "test.test_PT_unit.test_PT_Unit_repair": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.unit.Unit.repair",
    ],
    "test.test_PT_unit.test_PT_UnitOrder_from_proto": [
        "sc2.unit.UnitOrder.__init__",
        "sc2.unit.UnitOrder.from_proto",
    ],
    "test.test_PT_sc2process": [],
    "test.test_PT_sc2process.test_PT_add": ["sc2.sc2process.kill_switch.add"],
    "test.test_PT_sc2process.test_PT_kill_all": ["sc2.sc2process.kill_switch.kill_all"],
    "test.test_PT_sc2process.test_PT_SC2Process_ws_url": [],
    "test.test_PT_units": [],
    "test.test_PT_units.test_PT_from_proto": [
        "sc2.units.Units.from_proto",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_select": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.select",
    ],
    "test.test_PT_units.test_PT_copy": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.copy",
    ],
    "test.test_PT_units.test_PT_amount": [
        "sc2.units.Units.amount",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_empty": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.empty",
    ],
    "test.test_PT_units.test_PT_exists": [
        "sc2.units.Units.exists",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_find_by_tag": [
        "sc2.units.Units.find_by_tag",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_by_tag": [
        "sc2.units.Units.by_tag",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_first": [
        "sc2.units.Units.first",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_take": [
        "sc2.units.Units.take",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_random": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.random",
    ],
    "test.test_PT_units.test_PT_random_or": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.random_or",
    ],
    "test.test_PT_units.test_PT_random_group_of": [
        "sc2.units.Units.random_group_of",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_in_attack_range_of": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.in_attack_range_of",
    ],
    "test.test_PT_units.test_PT_closest_distance_to": [
        "sc2.units.Units.closest_distance_to",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_furthest_distance_to": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.furthest_distance_to",
    ],
    "test.test_PT_units.test_PT_closest_to": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.closest_to",
    ],
    "test.test_PT_units.test_PT_furthest_to": [
        "sc2.units.Units.furthest_to",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_closer_than": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.closer_than",
    ],
    "test.test_PT_units.test_PT_further_than": [
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.further_than",
    ],
    "test.test_PT_units.test_PT_subgroup": [
        "sc2.units.Units.subgroup",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_filter": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.filter",
    ],
    "test.test_PT_units.test_PT_sorted": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.sorted",
    ],
    "test.test_PT_units.test_PT_sorted_by_distance_to": [
        "sc2.units.Units.sorted_by_distance_to",
        "sc2.unit.PassengerUnit.__init__",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_tags_in": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.tags_in",
    ],
    "test.test_PT_units.test_PT_tags_not_in": [
        "sc2.units.Units.tags_not_in",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_of_type": [
        "enum.Enum.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.of_type",
    ],
    "test.test_PT_units.test_PT_exclude_type": [
        "enum.Enum.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.exclude_type",
    ],
    "test.test_PT_units.test_PT_same_tech": [
        "enum.Enum.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.same_tech",
    ],
    "test.test_PT_units.test_PT_same_unit": [
        "enum.Enum.__init__",
        "sc2.units.Units.__init__",
        "sc2.units.Units.same_unit",
    ],
    "test.test_PT_units.test_PT_center": [
        "sc2.units.Units.center",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_selected": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.selected",
    ],
    "test.test_PT_units.test_PT_tags": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.tags",
    ],
    "test.test_PT_units.test_PT_ready": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.ready",
    ],
    "test.test_PT_units.test_PT_not_ready": [
        "sc2.units.Units.not_ready",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_noqueue": [
        "sc2.units.Units.noqueue",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_idle": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.idle",
    ],
    "test.test_PT_units.test_PT_owned": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.owned",
    ],
    "test.test_PT_units.test_PT_enemy": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.enemy",
    ],
    "test.test_PT_units.test_PT_flying": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.flying",
    ],
    "test.test_PT_units.test_PT_not_flying": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.not_flying",
    ],
    "test.test_PT_units.test_PT_structure": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.structure",
    ],
    "test.test_PT_units.test_PT_not_structure": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.not_structure",
    ],
    "test.test_PT_units.test_PT_gathering": [
        "sc2.units.Units.gathering",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_returning": [
        "sc2.units.Units.returning",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_collecting": [
        "sc2.units.Units.collecting",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_visible": [
        "sc2.units.Units.visible",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_mineral_field": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.mineral_field",
    ],
    "test.test_PT_units.test_PT_vespene_geyser": [
        "sc2.units.Units.__init__",
        "sc2.units.Units.vespene_geyser",
    ],
    "test.test_PT_units.test_PT_prefer_idle": [
        "sc2.units.Units.prefer_idle",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_prefer_close_to": [
        "sc2.units.Units.prefer_close_to",
        "sc2.units.Units.__init__",
    ],
    "test.test_PT_units.test_PT_UnitSelection_matches": [
        "sc2.units.UnitSelection.__init__",
        "sc2.units.UnitSelection.matches",
    ],
    "test.test_PT_action": [],
    "test.test_PT_action.test_PT_combine_actions": ["sc2.action.combine_actions"],
    "test.test_PT_controller": [],
    "test.test_PT_controller.test_PT_running": [
        "sc2.controller.Controller.running",
        "sc2.controller.Controller.__init__",
    ],
    "test.test_PT_controller.test_PT_create_game": [
        "sc2.controller.Controller.__init__",
        "sc2.controller.Controller.create_game",
    ],
    "generate_id_constants_from_stableid": [
        "generate_id_constants_from_stableid.parse_data",
        "<builtin>.str",
        "platform.system",
        "<builtin>.open",
        "os.path.basename",
        "pathlib.Path.home",
        "json.loads",
        "generate_id_constants_from_stableid.generate_python_code",
    ],
    "os.path.basename": [],
    "generate_id_constants_from_stableid.make_key": [],
    "generate_id_constants_from_stableid.parse_data": [
        "<builtin>.exit",
        "generate_id_constants_from_stableid.parse_simple",
        "<builtin>.print",
    ],
    "generate_id_constants_from_stableid.parse_simple": [
        "generate_id_constants_from_stableid.make_key"
    ],
    "generate_id_constants_from_stableid.generate_python_code": [
        "pathlib.Path",
        "pathlib.Path.mkdir",
        "pathlib.Path.with_suffix.open",
        "pathlib.Path.open",
        "pathlib.Path.with_suffix",
        "<builtin>.sorted",
    ],
    "pathlib.Path.mkdir": [],
    "pathlib.Path.open": [],
    "generate_id_constants_from_stableid.generate_python_code.<lambda1>": [],
    "pathlib.Path.with_suffix": [],
    "pathlib.Path.with_suffix.open": [],
    "setup": [
        "setuptools.setup",
        "setuptools.find_packages",
        "pipenv.project.Project",
        "pipenv.utils.convert_deps_to_pip",
    ],
    "pipenv.project.Project": [],
    "pipenv.utils.convert_deps_to_pip": [],
    "setuptools.find_packages": [],
    "setuptools.setup": [],
    "examples.too_slow_bot": ["examples.too_slow_bot.main"],
    "examples.too_slow_bot.SlowBot.on_step": [
        "random.random",
        "asyncio.sleep",
        "<builtin>.super",
    ],
    "examples.too_slow_bot.main": [
        "sc2.player.Computer.__init__",
        "proxy_rax.ProxyRaxBot.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "proxy_rax.ProxyRaxBot.__init__": [],
    "examples.worker_rush": ["examples.worker_rush.main"],
    "examples.worker_rush.WorkerRushBot.__init__": ["<builtin>.super"],
    "examples.worker_rush.main": [
        "sc2.player.Computer.__init__",
        "sc2.main.run_game",
        "examples.worker_rush.WorkerRushBot.__init__",
        "sc2.player.Bot.__init__",
        "sc2.maps.get",
    ],
    "examples.host_external_norestart": ["examples.host_external_norestart.main"],
    "examples.host_external_norestart.main": [
        "sc2.main._host_game_iter",
        "<builtin>.print",
        "sc2.portconfig.Portconfig.__init__",
        "zerg.zerg_rush.ZergRushBot",
        "sc2.player.Bot.__init__",
        "sc2.maps.get",
    ],
    "zerg.zerg_rush.ZergRushBot": [],
    "examples.arcade_bot": ["examples.arcade_bot.main"],
    "examples.arcade_bot.MarineSplitChallenge.on_first_iteration": [
        "sc2.bot_ai.BotAI.chat_send"
    ],
    "examples.arcade_bot.MarineSplitChallenge.on_step.<lambda1>": [],
    "examples.arcade_bot.MarineSplitChallenge.on_step.<lambda2>": [],
    "examples.arcade_bot.MarineSplitChallenge.position_around_unit": [
        "<builtin>.range"
    ],
    "examples.arcade_bot.MarineSplitChallenge.on_step.<lambda3>": [],
    "examples.arcade_bot.MarineSplitChallenge.on_step.<lambda4>": [],
    "examples.arcade_bot.main": [
        "sc2.run_game",
        "sc2.player.Bot.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.maps.get",
    ],
    "examples.terran.onebase_battlecruiser": [
        "examples.terran.onebase_battlecruiser.main"
    ],
    "examples.terran.onebase_battlecruiser.ProxyRaxBot.select_target": [
        "<builtin>.min"
    ],
    "examples.terran.onebase_battlecruiser.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.terran.mass_reaper": ["examples.terran.mass_reaper.main"],
    "examples.terran.mass_reaper.MassReaperBot.__init__": [],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda1>": [],
    "examples.terran.mass_reaper.MassReaperBot.neighbors8": [
        "examples.terran.mass_reaper.MassReaperBot.neighbors4"
    ],
    "examples.terran.mass_reaper.MassReaperBot.inPathingGrid": ["<builtin>.isinstance"],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda2>": [],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda3>": [],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda4>": [],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda5>": [],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda6>": [],
    "examples.terran.mass_reaper.MassReaperBot.on_step.<lambda7>": [],
    "examples.terran.mass_reaper.MassReaperBot.neighbors4": [],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers.<lambda1>": [],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers.<lambda2>": [
        "<builtin>.len"
    ],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers.<lambda3>": [
        "<builtin>.len"
    ],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers.<lambda4>": [
        "<builtin>.len"
    ],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers.<lambda5>": [],
    "examples.terran.mass_reaper.MassReaperBot.distribute_workers.<lambda6>": [],
    "examples.terran.mass_reaper.main": [
        "sc2.player.Computer.__init__",
        "examples.terran.mass_reaper.MassReaperBot.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.terran.cyclone_push": ["examples.terran.cyclone_push.main"],
    "examples.terran.cyclone_push.ProxyRaxBot.select_target": ["<builtin>.min"],
    "examples.terran.cyclone_push.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.zerg.hydralisk_push": ["examples.zerg.hydralisk_push.main"],
    "examples.zerg.hydralisk_push.Hydralisk.select_target": ["random.choice"],
    "examples.zerg.hydralisk_push.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.protoss.threebase_voidray": ["examples.protoss.threebase_voidray.main"],
    "examples.protoss.threebase_voidray.ThreebaseVoidrayBot.select_target": [
        "random.choice"
    ],
    "examples.protoss.threebase_voidray.main": [
        "sc2.player.Computer.__init__",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "examples.play_tvz": ["examples.play_tvz.main"],
    "examples.play_tvz.main": [
        "sc2.player.Human.__init__",
        "zerg_rush.ZergRushBot",
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "sc2.maps.get",
    ],
    "zerg_rush.ZergRushBot": [],
    "examples.observer_easy_vs_easy": ["examples.observer_easy_vs_easy.main"],
    "examples.observer_easy_vs_easy.main": [],
    "examples.fastreload": ["examples.fastreload.main"],
    "examples.fastreload.main": [
        "sc2.main._host_game_iter",
        "asyncio.get_event_loop.run_until_complete.send",
        "importlib.reload",
        "zerg.zerg_rush.ZergRushBot",
        "<builtin>.input",
        "sc2.player.Computer.__init__",
        "<builtin>.next",
        "sc2.player.Bot.__init__",
        "sc2.maps.get",
    ],
    "<builtin>.input": [],
    "importlib.reload": [],
    "asyncio.get_event_loop.run_until_complete.send": [],
    "examples.distributed_workers": [
        "sc2.player.Computer.__init__",
        "sc2.main.run_game",
        "sc2.bot_ai.BotAI.__init__",
        "sc2.player.Bot.__init__",
        "sc2.maps.get",
    ],
    "examples.distributed_workers.TerranBot.build_supply": [
        "sc2.bot_ai.BotAI.already_pending",
        "examples.terran.mass_reaper.MassReaperBot.already_pending",
        "sc2.bot_ai.BotAI.can_afford",
        "sc2.bot_ai.BotAI.build",
    ],
    "examples.distributed_workers.TerranBot.build_workers": [
        "sc2.bot_ai.BotAI.do",
        "sc2.bot_ai.BotAI.can_afford",
    ],
    "examples.distributed_workers.TerranBot.expand": [
        "sc2.bot_ai.BotAI.expand_now",
        "sc2.bot_ai.BotAI.can_afford",
    ],
    "examples.run_external": [
        "argparse.ArgumentParser.parse_args",
        "examples.run_external.main",
        "argparse.ArgumentParser",
        "argparse.ArgumentParser.add_argument",
    ],
    "examples.run_external.main": [
        "<builtin>.print",
        "zerg.zerg_rush.ZergRushBot",
        "sc2.portconfig.Portconfig.__init__",
        "asyncio.get_event_loop.run_until_complete",
        "sc2.main._join_game",
        "sc2.portconfig.Portconfig.from_json",
        "asyncio.get_event_loop",
        "sc2.main._host_game",
        "sc2.player.Bot.__init__",
        "sc2.maps.get",
    ],
    "argparse.ArgumentParser": [],
    "argparse.ArgumentParser.add_argument": [],
    "argparse.ArgumentParser.parse_args": [],
    "examples.bot_vs_bot": ["examples.bot_vs_bot.main"],
    "examples.bot_vs_bot.main": [
        "sc2.player.Bot.__init__",
        "sc2.run_game",
        "zerg.zerg_rush.ZergRushBot",
        "sc2.maps.get",
    ],
    "sc2.typeshed_builtins.builtins": [
        "typing.overload",
        "typing.TypeVar",
        "typing_extensions.ParamSpec",
    ],
    "typing.TypeVar": [],
    "typing_extensions.ParamSpec": [],
    "sc2.typeshed_builtins.builtins.object": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.property": [],
    "sc2.typeshed_builtins.builtins.object.__class__": [],
    "sc2.typeshed_builtins.builtins.object.__init__": [],
    "sc2.typeshed_builtins.builtins.object.__new__": [],
    "sc2.typeshed_builtins.builtins.object.__setattr__": [],
    "sc2.typeshed_builtins.builtins.object.__delattr__": [],
    "sc2.typeshed_builtins.builtins.object.__eq__": [],
    "sc2.typeshed_builtins.builtins.object.__ne__": [],
    "sc2.typeshed_builtins.builtins.object.__str__": [],
    "sc2.typeshed_builtins.builtins.object.__repr__": [],
    "sc2.typeshed_builtins.builtins.object.__hash__": [],
    "sc2.typeshed_builtins.builtins.object.__format__": [],
    "sc2.typeshed_builtins.builtins.object.__getattribute__": [],
    "sc2.typeshed_builtins.builtins.object.__sizeof__": [],
    "sc2.typeshed_builtins.builtins.object.__reduce__": [],
    "sc2.typeshed_builtins.builtins.object.__reduce_ex__": [],
    "sc2.typeshed_builtins.builtins.object.__getstate__": [],
    "sc2.typeshed_builtins.builtins.object.__dir__": [],
    "sc2.typeshed_builtins.builtins.object.__init_subclass__": [],
    "sc2.typeshed_builtins.builtins.classmethod": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.object.__subclasshook__": [],
    "sc2.typeshed_builtins.builtins.staticmethod": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.staticmethod.__func__": [],
    "sc2.typeshed_builtins.builtins.staticmethod.__isabstractmethod__": [],
    "sc2.typeshed_builtins.builtins.staticmethod.__init__": [],
    "typing.overload": [],
    "sc2.typeshed_builtins.builtins.staticmethod.__get__": [],
    "sc2.typeshed_builtins.builtins.staticmethod.__wrapped__": [],
    "sc2.typeshed_builtins.builtins.staticmethod.__call__": [],
    "sc2.typeshed_builtins.builtins.classmethod.__func__": [],
    "sc2.typeshed_builtins.builtins.classmethod.__isabstractmethod__": [],
    "sc2.typeshed_builtins.builtins.classmethod.__init__": [],
    "sc2.typeshed_builtins.builtins.classmethod.__get__": [],
    "sc2.typeshed_builtins.builtins.classmethod.__wrapped__": [],
    "sc2.typeshed_builtins.builtins.type": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.type.__base__": [],
    "sc2.typeshed_builtins.builtins.type.__basicsize__": [],
    "sc2.typeshed_builtins.builtins.type.__dict__": [],
    "sc2.typeshed_builtins.builtins.type.__dictoffset__": [],
    "sc2.typeshed_builtins.builtins.type.__flags__": [],
    "sc2.typeshed_builtins.builtins.type.__itemsize__": [],
    "sc2.typeshed_builtins.builtins.type.__mro__": [],
    "sc2.typeshed_builtins.builtins.type.__text_signature__": [],
    "sc2.typeshed_builtins.builtins.type.__weakrefoffset__": [],
    "sc2.typeshed_builtins.builtins.type.__init__": [],
    "sc2.typeshed_builtins.builtins.type.__new__": [],
    "sc2.typeshed_builtins.builtins.type.__call__": [],
    "sc2.typeshed_builtins.builtins.type.__subclasses__": [],
    "sc2.typeshed_builtins.builtins.type.mro": [],
    "sc2.typeshed_builtins.builtins.type.__instancecheck__": [],
    "sc2.typeshed_builtins.builtins.type.__subclasscheck__": [],
    "sc2.typeshed_builtins.builtins.type.__prepare__": [],
    "sc2.typeshed_builtins.builtins.type.__or__": [],
    "sc2.typeshed_builtins.builtins.type.__ror__": [],
    "sc2.typeshed_builtins.builtins.super": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.super.__init__": [],
    "sc2.typeshed_builtins.builtins.int": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.int.__new__": [],
    "sc2.typeshed_builtins.builtins.int.as_integer_ratio": [],
    "sc2.typeshed_builtins.builtins.int.real": [],
    "sc2.typeshed_builtins.builtins.int.imag": [],
    "sc2.typeshed_builtins.builtins.int.numerator": [],
    "sc2.typeshed_builtins.builtins.int.denominator": [],
    "sc2.typeshed_builtins.builtins.int.conjugate": [],
    "sc2.typeshed_builtins.builtins.int.bit_length": [],
    "sc2.typeshed_builtins.builtins.int.bit_count": [],
    "sc2.typeshed_builtins.builtins.int.to_bytes": [],
    "sc2.typeshed_builtins.builtins.int.from_bytes": [],
    "sc2.typeshed_builtins.builtins.int.is_integer": [],
    "sc2.typeshed_builtins.builtins.int.__add__": [],
    "sc2.typeshed_builtins.builtins.int.__sub__": [],
    "sc2.typeshed_builtins.builtins.int.__mul__": [],
    "sc2.typeshed_builtins.builtins.int.__floordiv__": [],
    "sc2.typeshed_builtins.builtins.int.__truediv__": [],
    "sc2.typeshed_builtins.builtins.int.__mod__": [],
    "sc2.typeshed_builtins.builtins.int.__divmod__": [],
    "sc2.typeshed_builtins.builtins.int.__radd__": [],
    "sc2.typeshed_builtins.builtins.int.__rsub__": [],
    "sc2.typeshed_builtins.builtins.int.__rmul__": [],
    "sc2.typeshed_builtins.builtins.int.__rfloordiv__": [],
    "sc2.typeshed_builtins.builtins.int.__rtruediv__": [],
    "sc2.typeshed_builtins.builtins.int.__rmod__": [],
    "sc2.typeshed_builtins.builtins.int.__rdivmod__": [],
    "sc2.typeshed_builtins.builtins.int.__pow__": [],
    "sc2.typeshed_builtins.builtins.int.__rpow__": [],
    "sc2.typeshed_builtins.builtins.int.__and__": [],
    "sc2.typeshed_builtins.builtins.int.__or__": [],
    "sc2.typeshed_builtins.builtins.int.__xor__": [],
    "sc2.typeshed_builtins.builtins.int.__lshift__": [],
    "sc2.typeshed_builtins.builtins.int.__rshift__": [],
    "sc2.typeshed_builtins.builtins.int.__rand__": [],
    "sc2.typeshed_builtins.builtins.int.__ror__": [],
    "sc2.typeshed_builtins.builtins.int.__rxor__": [],
    "sc2.typeshed_builtins.builtins.int.__rlshift__": [],
    "sc2.typeshed_builtins.builtins.int.__rrshift__": [],
    "sc2.typeshed_builtins.builtins.int.__neg__": [],
    "sc2.typeshed_builtins.builtins.int.__pos__": [],
    "sc2.typeshed_builtins.builtins.int.__invert__": [],
    "sc2.typeshed_builtins.builtins.int.__trunc__": [],
    "sc2.typeshed_builtins.builtins.int.__ceil__": [],
    "sc2.typeshed_builtins.builtins.int.__floor__": [],
    "sc2.typeshed_builtins.builtins.int.__round__": [],
    "sc2.typeshed_builtins.builtins.int.__getnewargs__": [],
    "sc2.typeshed_builtins.builtins.int.__eq__": [],
    "sc2.typeshed_builtins.builtins.int.__ne__": [],
    "sc2.typeshed_builtins.builtins.int.__lt__": [],
    "sc2.typeshed_builtins.builtins.int.__le__": [],
    "sc2.typeshed_builtins.builtins.int.__gt__": [],
    "sc2.typeshed_builtins.builtins.int.__ge__": [],
    "sc2.typeshed_builtins.builtins.int.__float__": [],
    "sc2.typeshed_builtins.builtins.int.__int__": [],
    "sc2.typeshed_builtins.builtins.int.__abs__": [],
    "sc2.typeshed_builtins.builtins.int.__hash__": [],
    "sc2.typeshed_builtins.builtins.int.__bool__": [],
    "sc2.typeshed_builtins.builtins.int.__index__": [],
    "sc2.typeshed_builtins.builtins.float.__new__": [],
    "sc2.typeshed_builtins.builtins.float.as_integer_ratio": [],
    "sc2.typeshed_builtins.builtins.float.hex": [],
    "sc2.typeshed_builtins.builtins.float.is_integer": [],
    "sc2.typeshed_builtins.builtins.float": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.float.fromhex": [],
    "sc2.typeshed_builtins.builtins.float.real": [],
    "sc2.typeshed_builtins.builtins.float.imag": [],
    "sc2.typeshed_builtins.builtins.float.conjugate": [],
    "sc2.typeshed_builtins.builtins.float.__add__": [],
    "sc2.typeshed_builtins.builtins.float.__sub__": [],
    "sc2.typeshed_builtins.builtins.float.__mul__": [],
    "sc2.typeshed_builtins.builtins.float.__floordiv__": [],
    "sc2.typeshed_builtins.builtins.float.__truediv__": [],
    "sc2.typeshed_builtins.builtins.float.__mod__": [],
    "sc2.typeshed_builtins.builtins.float.__divmod__": [],
    "sc2.typeshed_builtins.builtins.float.__pow__": [],
    "sc2.typeshed_builtins.builtins.float.__radd__": [],
    "sc2.typeshed_builtins.builtins.float.__rsub__": [],
    "sc2.typeshed_builtins.builtins.float.__rmul__": [],
    "sc2.typeshed_builtins.builtins.float.__rfloordiv__": [],
    "sc2.typeshed_builtins.builtins.float.__rtruediv__": [],
    "sc2.typeshed_builtins.builtins.float.__rmod__": [],
    "sc2.typeshed_builtins.builtins.float.__rdivmod__": [],
    "sc2.typeshed_builtins.builtins.float.__rpow__": [],
    "sc2.typeshed_builtins.builtins.float.__getnewargs__": [],
    "sc2.typeshed_builtins.builtins.float.__trunc__": [],
    "sc2.typeshed_builtins.builtins.float.__ceil__": [],
    "sc2.typeshed_builtins.builtins.float.__floor__": [],
    "sc2.typeshed_builtins.builtins.float.__round__": [],
    "sc2.typeshed_builtins.builtins.float.__eq__": [],
    "sc2.typeshed_builtins.builtins.float.__ne__": [],
    "sc2.typeshed_builtins.builtins.float.__lt__": [],
    "sc2.typeshed_builtins.builtins.float.__le__": [],
    "sc2.typeshed_builtins.builtins.float.__gt__": [],
    "sc2.typeshed_builtins.builtins.float.__ge__": [],
    "sc2.typeshed_builtins.builtins.float.__neg__": [],
    "sc2.typeshed_builtins.builtins.float.__pos__": [],
    "sc2.typeshed_builtins.builtins.float.__int__": [],
    "sc2.typeshed_builtins.builtins.float.__float__": [],
    "sc2.typeshed_builtins.builtins.float.__abs__": [],
    "sc2.typeshed_builtins.builtins.float.__hash__": [],
    "sc2.typeshed_builtins.builtins.float.__bool__": [],
    "sc2.typeshed_builtins.builtins.complex": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.complex.__new__": [],
    "sc2.typeshed_builtins.builtins.complex.real": [],
    "sc2.typeshed_builtins.builtins.complex.imag": [],
    "sc2.typeshed_builtins.builtins.complex.conjugate": [],
    "sc2.typeshed_builtins.builtins.complex.__add__": [],
    "sc2.typeshed_builtins.builtins.complex.__sub__": [],
    "sc2.typeshed_builtins.builtins.complex.__mul__": [],
    "sc2.typeshed_builtins.builtins.complex.__pow__": [],
    "sc2.typeshed_builtins.builtins.complex.__truediv__": [],
    "sc2.typeshed_builtins.builtins.complex.__radd__": [],
    "sc2.typeshed_builtins.builtins.complex.__rsub__": [],
    "sc2.typeshed_builtins.builtins.complex.__rmul__": [],
    "sc2.typeshed_builtins.builtins.complex.__rpow__": [],
    "sc2.typeshed_builtins.builtins.complex.__rtruediv__": [],
    "sc2.typeshed_builtins.builtins.complex.__eq__": [],
    "sc2.typeshed_builtins.builtins.complex.__ne__": [],
    "sc2.typeshed_builtins.builtins.complex.__neg__": [],
    "sc2.typeshed_builtins.builtins.complex.__pos__": [],
    "sc2.typeshed_builtins.builtins.complex.__abs__": [],
    "sc2.typeshed_builtins.builtins.complex.__hash__": [],
    "sc2.typeshed_builtins.builtins.complex.__bool__": [],
    "sc2.typeshed_builtins.builtins.complex.__complex__": [],
    "sc2.typeshed_builtins.builtins._FormatMapMapping.__getitem__": [],
    "sc2.typeshed_builtins.builtins._TranslateTable.__getitem__": [],
    "sc2.typeshed_builtins.builtins.str": [
        "sc2.typeshed_builtins.builtins.staticmethod",
        "typing.overload",
    ],
    "sc2.typeshed_builtins.builtins.str.__new__": [],
    "sc2.typeshed_builtins.builtins.str.capitalize": [],
    "sc2.typeshed_builtins.builtins.str.casefold": [],
    "sc2.typeshed_builtins.builtins.str.center": [],
    "sc2.typeshed_builtins.builtins.str.count": [],
    "sc2.typeshed_builtins.builtins.str.encode": [],
    "sc2.typeshed_builtins.builtins.str.endswith": [],
    "sc2.typeshed_builtins.builtins.str.expandtabs": [],
    "sc2.typeshed_builtins.builtins.str.find": [],
    "sc2.typeshed_builtins.builtins.str.format": [],
    "sc2.typeshed_builtins.builtins.str.format_map": [],
    "sc2.typeshed_builtins.builtins.str.index": [],
    "sc2.typeshed_builtins.builtins.str.isalnum": [],
    "sc2.typeshed_builtins.builtins.str.isalpha": [],
    "sc2.typeshed_builtins.builtins.str.isascii": [],
    "sc2.typeshed_builtins.builtins.str.isdecimal": [],
    "sc2.typeshed_builtins.builtins.str.isdigit": [],
    "sc2.typeshed_builtins.builtins.str.isidentifier": [],
    "sc2.typeshed_builtins.builtins.str.islower": [],
    "sc2.typeshed_builtins.builtins.str.isnumeric": [],
    "sc2.typeshed_builtins.builtins.str.isprintable": [],
    "sc2.typeshed_builtins.builtins.str.isspace": [],
    "sc2.typeshed_builtins.builtins.str.istitle": [],
    "sc2.typeshed_builtins.builtins.str.isupper": [],
    "sc2.typeshed_builtins.builtins.str.join": [],
    "sc2.typeshed_builtins.builtins.str.ljust": [],
    "sc2.typeshed_builtins.builtins.str.lower": [],
    "sc2.typeshed_builtins.builtins.str.lstrip": [],
    "sc2.typeshed_builtins.builtins.str.partition": [],
    "sc2.typeshed_builtins.builtins.str.replace": [],
    "sc2.typeshed_builtins.builtins.str.removeprefix": [],
    "sc2.typeshed_builtins.builtins.str.removesuffix": [],
    "sc2.typeshed_builtins.builtins.str.rfind": [],
    "sc2.typeshed_builtins.builtins.str.rindex": [],
    "sc2.typeshed_builtins.builtins.str.rjust": [],
    "sc2.typeshed_builtins.builtins.str.rpartition": [],
    "sc2.typeshed_builtins.builtins.str.rsplit": [],
    "sc2.typeshed_builtins.builtins.str.rstrip": [],
    "sc2.typeshed_builtins.builtins.str.split": [],
    "sc2.typeshed_builtins.builtins.str.splitlines": [],
    "sc2.typeshed_builtins.builtins.str.startswith": [],
    "sc2.typeshed_builtins.builtins.str.strip": [],
    "sc2.typeshed_builtins.builtins.str.swapcase": [],
    "sc2.typeshed_builtins.builtins.str.title": [],
    "sc2.typeshed_builtins.builtins.str.translate": [],
    "sc2.typeshed_builtins.builtins.str.upper": [],
    "sc2.typeshed_builtins.builtins.str.zfill": [],
    "sc2.typeshed_builtins.builtins.str.maketrans": [],
    "sc2.typeshed_builtins.builtins.str.__add__": [],
    "sc2.typeshed_builtins.builtins.str.__contains__": [],
    "sc2.typeshed_builtins.builtins.str.__eq__": [],
    "sc2.typeshed_builtins.builtins.str.__ge__": [],
    "sc2.typeshed_builtins.builtins.str.__getitem__": [],
    "sc2.typeshed_builtins.builtins.str.__gt__": [],
    "sc2.typeshed_builtins.builtins.str.__hash__": [],
    "sc2.typeshed_builtins.builtins.str.__iter__": [],
    "sc2.typeshed_builtins.builtins.str.__le__": [],
    "sc2.typeshed_builtins.builtins.str.__len__": [],
    "sc2.typeshed_builtins.builtins.str.__lt__": [],
    "sc2.typeshed_builtins.builtins.str.__mod__": [],
    "sc2.typeshed_builtins.builtins.str.__mul__": [],
    "sc2.typeshed_builtins.builtins.str.__ne__": [],
    "sc2.typeshed_builtins.builtins.str.__rmul__": [],
    "sc2.typeshed_builtins.builtins.str.__getnewargs__": [],
    "sc2.typeshed_builtins.builtins.bytes": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "typing.overload",
        "sc2.typeshed_builtins.builtins.staticmethod",
    ],
    "sc2.typeshed_builtins.builtins.bytes.__new__": [],
    "sc2.typeshed_builtins.builtins.bytes.capitalize": [],
    "sc2.typeshed_builtins.builtins.bytes.center": [],
    "sc2.typeshed_builtins.builtins.bytes.count": [],
    "sc2.typeshed_builtins.builtins.bytes.decode": [],
    "sc2.typeshed_builtins.builtins.bytes.endswith": [],
    "sc2.typeshed_builtins.builtins.bytes.expandtabs": [],
    "sc2.typeshed_builtins.builtins.bytes.find": [],
    "sc2.typeshed_builtins.builtins.bytes.hex": [],
    "sc2.typeshed_builtins.builtins.bytes.index": [],
    "sc2.typeshed_builtins.builtins.bytes.isalnum": [],
    "sc2.typeshed_builtins.builtins.bytes.isalpha": [],
    "sc2.typeshed_builtins.builtins.bytes.isascii": [],
    "sc2.typeshed_builtins.builtins.bytes.isdigit": [],
    "sc2.typeshed_builtins.builtins.bytes.islower": [],
    "sc2.typeshed_builtins.builtins.bytes.isspace": [],
    "sc2.typeshed_builtins.builtins.bytes.istitle": [],
    "sc2.typeshed_builtins.builtins.bytes.isupper": [],
    "sc2.typeshed_builtins.builtins.bytes.join": [],
    "sc2.typeshed_builtins.builtins.bytes.ljust": [],
    "sc2.typeshed_builtins.builtins.bytes.lower": [],
    "sc2.typeshed_builtins.builtins.bytes.lstrip": [],
    "sc2.typeshed_builtins.builtins.bytes.partition": [],
    "sc2.typeshed_builtins.builtins.bytes.replace": [],
    "sc2.typeshed_builtins.builtins.bytes.removeprefix": [],
    "sc2.typeshed_builtins.builtins.bytes.removesuffix": [],
    "sc2.typeshed_builtins.builtins.bytes.rfind": [],
    "sc2.typeshed_builtins.builtins.bytes.rindex": [],
    "sc2.typeshed_builtins.builtins.bytes.rjust": [],
    "sc2.typeshed_builtins.builtins.bytes.rpartition": [],
    "sc2.typeshed_builtins.builtins.bytes.rsplit": [],
    "sc2.typeshed_builtins.builtins.bytes.rstrip": [],
    "sc2.typeshed_builtins.builtins.bytes.split": [],
    "sc2.typeshed_builtins.builtins.bytes.splitlines": [],
    "sc2.typeshed_builtins.builtins.bytes.startswith": [],
    "sc2.typeshed_builtins.builtins.bytes.strip": [],
    "sc2.typeshed_builtins.builtins.bytes.swapcase": [],
    "sc2.typeshed_builtins.builtins.bytes.title": [],
    "sc2.typeshed_builtins.builtins.bytes.translate": [],
    "sc2.typeshed_builtins.builtins.bytes.upper": [],
    "sc2.typeshed_builtins.builtins.bytes.zfill": [],
    "sc2.typeshed_builtins.builtins.bytes.fromhex": [],
    "sc2.typeshed_builtins.builtins.bytes.maketrans": [],
    "sc2.typeshed_builtins.builtins.bytes.__len__": [],
    "sc2.typeshed_builtins.builtins.bytes.__iter__": [],
    "sc2.typeshed_builtins.builtins.bytes.__hash__": [],
    "sc2.typeshed_builtins.builtins.bytes.__getitem__": [],
    "sc2.typeshed_builtins.builtins.bytes.__add__": [],
    "sc2.typeshed_builtins.builtins.bytes.__mul__": [],
    "sc2.typeshed_builtins.builtins.bytes.__rmul__": [],
    "sc2.typeshed_builtins.builtins.bytes.__mod__": [],
    "sc2.typeshed_builtins.builtins.bytes.__contains__": [],
    "sc2.typeshed_builtins.builtins.bytes.__eq__": [],
    "sc2.typeshed_builtins.builtins.bytes.__ne__": [],
    "sc2.typeshed_builtins.builtins.bytes.__lt__": [],
    "sc2.typeshed_builtins.builtins.bytes.__le__": [],
    "sc2.typeshed_builtins.builtins.bytes.__gt__": [],
    "sc2.typeshed_builtins.builtins.bytes.__ge__": [],
    "sc2.typeshed_builtins.builtins.bytes.__getnewargs__": [],
    "sc2.typeshed_builtins.builtins.bytes.__bytes__": [],
    "sc2.typeshed_builtins.builtins.bytes.__buffer__": [],
    "sc2.typeshed_builtins.builtins.bytearray": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "typing.overload",
        "sc2.typeshed_builtins.builtins.staticmethod",
    ],
    "sc2.typeshed_builtins.builtins.bytearray.__init__": [],
    "sc2.typeshed_builtins.builtins.bytearray.append": [],
    "sc2.typeshed_builtins.builtins.bytearray.capitalize": [],
    "sc2.typeshed_builtins.builtins.bytearray.center": [],
    "sc2.typeshed_builtins.builtins.bytearray.count": [],
    "sc2.typeshed_builtins.builtins.bytearray.copy": [],
    "sc2.typeshed_builtins.builtins.bytearray.decode": [],
    "sc2.typeshed_builtins.builtins.bytearray.endswith": [],
    "sc2.typeshed_builtins.builtins.bytearray.expandtabs": [],
    "sc2.typeshed_builtins.builtins.bytearray.extend": [],
    "sc2.typeshed_builtins.builtins.bytearray.find": [],
    "sc2.typeshed_builtins.builtins.bytearray.hex": [],
    "sc2.typeshed_builtins.builtins.bytearray.index": [],
    "sc2.typeshed_builtins.builtins.bytearray.insert": [],
    "sc2.typeshed_builtins.builtins.bytearray.isalnum": [],
    "sc2.typeshed_builtins.builtins.bytearray.isalpha": [],
    "sc2.typeshed_builtins.builtins.bytearray.isascii": [],
    "sc2.typeshed_builtins.builtins.bytearray.isdigit": [],
    "sc2.typeshed_builtins.builtins.bytearray.islower": [],
    "sc2.typeshed_builtins.builtins.bytearray.isspace": [],
    "sc2.typeshed_builtins.builtins.bytearray.istitle": [],
    "sc2.typeshed_builtins.builtins.bytearray.isupper": [],
    "sc2.typeshed_builtins.builtins.bytearray.join": [],
    "sc2.typeshed_builtins.builtins.bytearray.ljust": [],
    "sc2.typeshed_builtins.builtins.bytearray.lower": [],
    "sc2.typeshed_builtins.builtins.bytearray.lstrip": [],
    "sc2.typeshed_builtins.builtins.bytearray.partition": [],
    "sc2.typeshed_builtins.builtins.bytearray.pop": [],
    "sc2.typeshed_builtins.builtins.bytearray.remove": [],
    "sc2.typeshed_builtins.builtins.bytearray.removeprefix": [],
    "sc2.typeshed_builtins.builtins.bytearray.removesuffix": [],
    "sc2.typeshed_builtins.builtins.bytearray.replace": [],
    "sc2.typeshed_builtins.builtins.bytearray.rfind": [],
    "sc2.typeshed_builtins.builtins.bytearray.rindex": [],
    "sc2.typeshed_builtins.builtins.bytearray.rjust": [],
    "sc2.typeshed_builtins.builtins.bytearray.rpartition": [],
    "sc2.typeshed_builtins.builtins.bytearray.rsplit": [],
    "sc2.typeshed_builtins.builtins.bytearray.rstrip": [],
    "sc2.typeshed_builtins.builtins.bytearray.split": [],
    "sc2.typeshed_builtins.builtins.bytearray.splitlines": [],
    "sc2.typeshed_builtins.builtins.bytearray.startswith": [],
    "sc2.typeshed_builtins.builtins.bytearray.strip": [],
    "sc2.typeshed_builtins.builtins.bytearray.swapcase": [],
    "sc2.typeshed_builtins.builtins.bytearray.title": [],
    "sc2.typeshed_builtins.builtins.bytearray.translate": [],
    "sc2.typeshed_builtins.builtins.bytearray.upper": [],
    "sc2.typeshed_builtins.builtins.bytearray.zfill": [],
    "sc2.typeshed_builtins.builtins.bytearray.fromhex": [],
    "sc2.typeshed_builtins.builtins.bytearray.maketrans": [],
    "sc2.typeshed_builtins.builtins.bytearray.__len__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__iter__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__getitem__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__setitem__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__delitem__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__add__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__iadd__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__mul__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__rmul__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__imul__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__mod__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__contains__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__eq__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__ne__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__lt__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__le__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__gt__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__ge__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__alloc__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__buffer__": [],
    "sc2.typeshed_builtins.builtins.bytearray.__release_buffer__": [],
    "sc2.typeshed_builtins.builtins.memoryview": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.memoryview.format": [],
    "sc2.typeshed_builtins.builtins.memoryview.itemsize": [],
    "sc2.typeshed_builtins.builtins.memoryview.shape": [],
    "sc2.typeshed_builtins.builtins.memoryview.strides": [],
    "sc2.typeshed_builtins.builtins.memoryview.suboffsets": [],
    "sc2.typeshed_builtins.builtins.memoryview.readonly": [],
    "sc2.typeshed_builtins.builtins.memoryview.ndim": [],
    "sc2.typeshed_builtins.builtins.memoryview.obj": [],
    "sc2.typeshed_builtins.builtins.memoryview.c_contiguous": [],
    "sc2.typeshed_builtins.builtins.memoryview.f_contiguous": [],
    "sc2.typeshed_builtins.builtins.memoryview.contiguous": [],
    "sc2.typeshed_builtins.builtins.memoryview.nbytes": [],
    "sc2.typeshed_builtins.builtins.memoryview.__new__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__enter__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__exit__": [],
    "sc2.typeshed_builtins.builtins.memoryview.cast": [],
    "sc2.typeshed_builtins.builtins.memoryview.__getitem__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__contains__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__iter__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__len__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__eq__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__hash__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__setitem__": [],
    "sc2.typeshed_builtins.builtins.memoryview.tobytes": [],
    "sc2.typeshed_builtins.builtins.memoryview.tolist": [],
    "sc2.typeshed_builtins.builtins.memoryview.toreadonly": [],
    "sc2.typeshed_builtins.builtins.memoryview.release": [],
    "sc2.typeshed_builtins.builtins.memoryview.hex": [],
    "sc2.typeshed_builtins.builtins.memoryview.__buffer__": [],
    "sc2.typeshed_builtins.builtins.memoryview.__release_buffer__": [],
    "sc2.typeshed_builtins.builtins.bool.__new__": [],
    "sc2.typeshed_builtins.builtins.bool": [
        "typing_extensions.deprecated",
        "typing.overload",
    ],
    "sc2.typeshed_builtins.builtins.bool.__and__": [],
    "sc2.typeshed_builtins.builtins.bool.__or__": [],
    "sc2.typeshed_builtins.builtins.bool.__xor__": [],
    "sc2.typeshed_builtins.builtins.bool.__rand__": [],
    "sc2.typeshed_builtins.builtins.bool.__ror__": [],
    "sc2.typeshed_builtins.builtins.bool.__rxor__": [],
    "sc2.typeshed_builtins.builtins.bool.__getnewargs__": [],
    "typing_extensions.deprecated": [],
    "sc2.typeshed_builtins.builtins.bool.__invert__": [],
    "sc2.typeshed_builtins.builtins.slice": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.slice.start": [],
    "sc2.typeshed_builtins.builtins.slice.step": [],
    "sc2.typeshed_builtins.builtins.slice.stop": [],
    "sc2.typeshed_builtins.builtins.slice.__new__": [],
    "sc2.typeshed_builtins.builtins.slice.__eq__": [],
    "sc2.typeshed_builtins.builtins.slice.indices": [],
    "sc2.typeshed_builtins.builtins.tuple.__new__": [],
    "sc2.typeshed_builtins.builtins.tuple.__len__": [],
    "sc2.typeshed_builtins.builtins.tuple.__contains__": [],
    "sc2.typeshed_builtins.builtins.tuple": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.tuple.__getitem__": [],
    "sc2.typeshed_builtins.builtins.tuple.__iter__": [],
    "sc2.typeshed_builtins.builtins.tuple.__lt__": [],
    "sc2.typeshed_builtins.builtins.tuple.__le__": [],
    "sc2.typeshed_builtins.builtins.tuple.__gt__": [],
    "sc2.typeshed_builtins.builtins.tuple.__ge__": [],
    "sc2.typeshed_builtins.builtins.tuple.__eq__": [],
    "sc2.typeshed_builtins.builtins.tuple.__hash__": [],
    "sc2.typeshed_builtins.builtins.tuple.__add__": [],
    "sc2.typeshed_builtins.builtins.tuple.__mul__": [],
    "sc2.typeshed_builtins.builtins.tuple.__rmul__": [],
    "sc2.typeshed_builtins.builtins.tuple.count": [],
    "sc2.typeshed_builtins.builtins.tuple.index": [],
    "sc2.typeshed_builtins.builtins.tuple.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.function": [
        "sc2.typeshed_builtins.builtins.property"
    ],
    "sc2.typeshed_builtins.builtins.function.__closure__": [],
    "sc2.typeshed_builtins.builtins.function.__globals__": [],
    "sc2.typeshed_builtins.builtins.function.__builtins__": [],
    "sc2.typeshed_builtins.builtins.function.__get__": [],
    "sc2.typeshed_builtins.builtins.list": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.list.__init__": [],
    "sc2.typeshed_builtins.builtins.list.copy": [],
    "sc2.typeshed_builtins.builtins.list.append": [],
    "sc2.typeshed_builtins.builtins.list.extend": [],
    "sc2.typeshed_builtins.builtins.list.pop": [],
    "sc2.typeshed_builtins.builtins.list.index": [],
    "sc2.typeshed_builtins.builtins.list.count": [],
    "sc2.typeshed_builtins.builtins.list.insert": [],
    "sc2.typeshed_builtins.builtins.list.remove": [],
    "sc2.typeshed_builtins.builtins.list.sort": [],
    "sc2.typeshed_builtins.builtins.list.__len__": [],
    "sc2.typeshed_builtins.builtins.list.__iter__": [],
    "sc2.typeshed_builtins.builtins.list.__getitem__": [],
    "sc2.typeshed_builtins.builtins.list.__setitem__": [],
    "sc2.typeshed_builtins.builtins.list.__delitem__": [],
    "sc2.typeshed_builtins.builtins.list.__add__": [],
    "sc2.typeshed_builtins.builtins.list.__iadd__": [],
    "sc2.typeshed_builtins.builtins.list.__mul__": [],
    "sc2.typeshed_builtins.builtins.list.__rmul__": [],
    "sc2.typeshed_builtins.builtins.list.__imul__": [],
    "sc2.typeshed_builtins.builtins.list.__contains__": [],
    "sc2.typeshed_builtins.builtins.list.__reversed__": [],
    "sc2.typeshed_builtins.builtins.list.__gt__": [],
    "sc2.typeshed_builtins.builtins.list.__ge__": [],
    "sc2.typeshed_builtins.builtins.list.__lt__": [],
    "sc2.typeshed_builtins.builtins.list.__le__": [],
    "sc2.typeshed_builtins.builtins.list.__eq__": [],
    "sc2.typeshed_builtins.builtins.list.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.dict": [
        "sc2.typeshed_builtins.builtins.classmethod",
        "typing.overload",
    ],
    "sc2.typeshed_builtins.builtins.dict.__init__": [],
    "sc2.typeshed_builtins.builtins.dict.__new__": [],
    "sc2.typeshed_builtins.builtins.dict.copy": [],
    "sc2.typeshed_builtins.builtins.dict.keys": [],
    "sc2.typeshed_builtins.builtins.dict.values": [],
    "sc2.typeshed_builtins.builtins.dict.items": [],
    "sc2.typeshed_builtins.builtins.dict.fromkeys": [],
    "sc2.typeshed_builtins.builtins.dict.get": [],
    "sc2.typeshed_builtins.builtins.dict.pop": [],
    "sc2.typeshed_builtins.builtins.dict.__len__": [],
    "sc2.typeshed_builtins.builtins.dict.__getitem__": [],
    "sc2.typeshed_builtins.builtins.dict.__setitem__": [],
    "sc2.typeshed_builtins.builtins.dict.__delitem__": [],
    "sc2.typeshed_builtins.builtins.dict.__iter__": [],
    "sc2.typeshed_builtins.builtins.dict.__eq__": [],
    "sc2.typeshed_builtins.builtins.dict.__reversed__": [],
    "sc2.typeshed_builtins.builtins.dict.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.dict.__or__": [],
    "sc2.typeshed_builtins.builtins.dict.__ror__": [],
    "sc2.typeshed_builtins.builtins.dict.__ior__": [],
    "sc2.typeshed_builtins.builtins.set": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.set.__init__": [],
    "sc2.typeshed_builtins.builtins.set.add": [],
    "sc2.typeshed_builtins.builtins.set.copy": [],
    "sc2.typeshed_builtins.builtins.set.difference": [],
    "sc2.typeshed_builtins.builtins.set.difference_update": [],
    "sc2.typeshed_builtins.builtins.set.discard": [],
    "sc2.typeshed_builtins.builtins.set.intersection": [],
    "sc2.typeshed_builtins.builtins.set.intersection_update": [],
    "sc2.typeshed_builtins.builtins.set.isdisjoint": [],
    "sc2.typeshed_builtins.builtins.set.issubset": [],
    "sc2.typeshed_builtins.builtins.set.issuperset": [],
    "sc2.typeshed_builtins.builtins.set.remove": [],
    "sc2.typeshed_builtins.builtins.set.symmetric_difference": [],
    "sc2.typeshed_builtins.builtins.set.symmetric_difference_update": [],
    "sc2.typeshed_builtins.builtins.set.union": [],
    "sc2.typeshed_builtins.builtins.set.update": [],
    "sc2.typeshed_builtins.builtins.set.__len__": [],
    "sc2.typeshed_builtins.builtins.set.__contains__": [],
    "sc2.typeshed_builtins.builtins.set.__iter__": [],
    "sc2.typeshed_builtins.builtins.set.__and__": [],
    "sc2.typeshed_builtins.builtins.set.__iand__": [],
    "sc2.typeshed_builtins.builtins.set.__or__": [],
    "sc2.typeshed_builtins.builtins.set.__ior__": [],
    "sc2.typeshed_builtins.builtins.set.__sub__": [],
    "sc2.typeshed_builtins.builtins.set.__isub__": [],
    "sc2.typeshed_builtins.builtins.set.__xor__": [],
    "sc2.typeshed_builtins.builtins.set.__ixor__": [],
    "sc2.typeshed_builtins.builtins.set.__le__": [],
    "sc2.typeshed_builtins.builtins.set.__lt__": [],
    "sc2.typeshed_builtins.builtins.set.__ge__": [],
    "sc2.typeshed_builtins.builtins.set.__gt__": [],
    "sc2.typeshed_builtins.builtins.set.__eq__": [],
    "sc2.typeshed_builtins.builtins.set.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.frozenset": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.frozenset.__new__": [],
    "sc2.typeshed_builtins.builtins.frozenset.copy": [],
    "sc2.typeshed_builtins.builtins.frozenset.difference": [],
    "sc2.typeshed_builtins.builtins.frozenset.intersection": [],
    "sc2.typeshed_builtins.builtins.frozenset.isdisjoint": [],
    "sc2.typeshed_builtins.builtins.frozenset.issubset": [],
    "sc2.typeshed_builtins.builtins.frozenset.issuperset": [],
    "sc2.typeshed_builtins.builtins.frozenset.symmetric_difference": [],
    "sc2.typeshed_builtins.builtins.frozenset.union": [],
    "sc2.typeshed_builtins.builtins.frozenset.__len__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__contains__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__iter__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__and__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__or__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__sub__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__xor__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__le__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__lt__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__ge__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__gt__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__eq__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__hash__": [],
    "sc2.typeshed_builtins.builtins.frozenset.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.enumerate.__new__": [],
    "sc2.typeshed_builtins.builtins.enumerate.__iter__": [],
    "sc2.typeshed_builtins.builtins.enumerate.__next__": [],
    "sc2.typeshed_builtins.builtins.enumerate.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.range": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.range.start": [],
    "sc2.typeshed_builtins.builtins.range.stop": [],
    "sc2.typeshed_builtins.builtins.range.step": [],
    "sc2.typeshed_builtins.builtins.range.__new__": [],
    "sc2.typeshed_builtins.builtins.range.count": [],
    "sc2.typeshed_builtins.builtins.range.index": [],
    "sc2.typeshed_builtins.builtins.range.__len__": [],
    "sc2.typeshed_builtins.builtins.range.__eq__": [],
    "sc2.typeshed_builtins.builtins.range.__hash__": [],
    "sc2.typeshed_builtins.builtins.range.__contains__": [],
    "sc2.typeshed_builtins.builtins.range.__iter__": [],
    "sc2.typeshed_builtins.builtins.range.__getitem__": [],
    "sc2.typeshed_builtins.builtins.range.__reversed__": [],
    "sc2.typeshed_builtins.builtins.property.__init__": [],
    "sc2.typeshed_builtins.builtins.property.getter": [],
    "sc2.typeshed_builtins.builtins.property.setter": [],
    "sc2.typeshed_builtins.builtins.property.deleter": [],
    "sc2.typeshed_builtins.builtins.property.__get__": [],
    "sc2.typeshed_builtins.builtins.property.__set__": [],
    "sc2.typeshed_builtins.builtins.property.__delete__": [],
    "sc2.typeshed_builtins.builtins.abs": [],
    "sc2.typeshed_builtins.builtins.all": [],
    "sc2.typeshed_builtins.builtins.any": [],
    "sc2.typeshed_builtins.builtins.ascii": [],
    "sc2.typeshed_builtins.builtins.bin": [],
    "sc2.typeshed_builtins.builtins.breakpoint": [],
    "sc2.typeshed_builtins.builtins.callable": [],
    "sc2.typeshed_builtins.builtins.chr": [],
    "sc2.typeshed_builtins.builtins._PathLike.__fspath__": [],
    "sc2.typeshed_builtins.builtins.aiter": [],
    "sc2.typeshed_builtins.builtins._SupportsSynchronousAnext.__anext__": [],
    "sc2.typeshed_builtins.builtins.anext": [],
    "sc2.typeshed_builtins.builtins.compile": [],
    "sc2.typeshed_builtins.builtins.copyright": [],
    "sc2.typeshed_builtins.builtins.credits": [],
    "sc2.typeshed_builtins.builtins.delattr": [],
    "sc2.typeshed_builtins.builtins.dir": [],
    "sc2.typeshed_builtins.builtins.divmod": [],
    "sc2.typeshed_builtins.builtins.eval": [],
    "sc2.typeshed_builtins.builtins.exec": [],
    "sc2.typeshed_builtins.builtins.exit": [],
    "sc2.typeshed_builtins.builtins.filter": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.filter.__new__": [],
    "sc2.typeshed_builtins.builtins.filter.__iter__": [],
    "sc2.typeshed_builtins.builtins.filter.__next__": [],
    "sc2.typeshed_builtins.builtins.format": [],
    "sc2.typeshed_builtins.builtins.getattr": [],
    "sc2.typeshed_builtins.builtins.globals": [],
    "sc2.typeshed_builtins.builtins.hasattr": [],
    "sc2.typeshed_builtins.builtins.hash": [],
    "sc2.typeshed_builtins.builtins.help": [],
    "sc2.typeshed_builtins.builtins.hex": [],
    "sc2.typeshed_builtins.builtins.id": [],
    "sc2.typeshed_builtins.builtins.input": [],
    "sc2.typeshed_builtins.builtins._GetItemIterable.__getitem__": [],
    "sc2.typeshed_builtins.builtins.iter": [],
    "sc2.typeshed_builtins.builtins.isinstance": [],
    "sc2.typeshed_builtins.builtins.issubclass": [],
    "sc2.typeshed_builtins.builtins.len": [],
    "sc2.typeshed_builtins.builtins.license": [],
    "sc2.typeshed_builtins.builtins.locals": [],
    "sc2.typeshed_builtins.builtins.map": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.map.__new__": [],
    "sc2.typeshed_builtins.builtins.map.__iter__": [],
    "sc2.typeshed_builtins.builtins.map.__next__": [],
    "sc2.typeshed_builtins.builtins.max": [],
    "sc2.typeshed_builtins.builtins.min": [],
    "sc2.typeshed_builtins.builtins.next": [],
    "sc2.typeshed_builtins.builtins.oct": [],
    "sc2.typeshed_builtins.builtins.open": [],
    "sc2.typeshed_builtins.builtins.ord": [],
    "sc2.typeshed_builtins.builtins.print": [],
    "sc2.typeshed_builtins.builtins._SupportsPow2.__pow__": [],
    "sc2.typeshed_builtins.builtins._SupportsPow3NoneOnly.__pow__": [],
    "sc2.typeshed_builtins.builtins._SupportsPow3.__pow__": [],
    "sc2.typeshed_builtins.builtins.pow": [],
    "sc2.typeshed_builtins.builtins.quit": [],
    "sc2.typeshed_builtins.builtins.reversed": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.reversed.__init__": [],
    "sc2.typeshed_builtins.builtins.reversed.__iter__": [],
    "sc2.typeshed_builtins.builtins.reversed.__next__": [],
    "sc2.typeshed_builtins.builtins.reversed.__length_hint__": [],
    "sc2.typeshed_builtins.builtins.repr": [],
    "sc2.typeshed_builtins.builtins._SupportsRound1.__round__": [],
    "sc2.typeshed_builtins.builtins._SupportsRound2.__round__": [],
    "sc2.typeshed_builtins.builtins.round": [],
    "sc2.typeshed_builtins.builtins.setattr": [],
    "sc2.typeshed_builtins.builtins.sorted": [],
    "sc2.typeshed_builtins.builtins.sum": [],
    "sc2.typeshed_builtins.builtins.vars": [],
    "sc2.typeshed_builtins.builtins.zip": ["typing.overload"],
    "sc2.typeshed_builtins.builtins.zip.__new__": [],
    "sc2.typeshed_builtins.builtins.zip.__iter__": [],
    "sc2.typeshed_builtins.builtins.zip.__next__": [],
    "sc2.typeshed_builtins.builtins.__import__": [],
    "sc2.typeshed_builtins.builtins.__build_class__": [],
    "sc2.typeshed_builtins.builtins.BaseException.__init__": [],
    "sc2.typeshed_builtins.builtins.BaseException.__setstate__": [],
    "sc2.typeshed_builtins.builtins.BaseException.with_traceback": [],
    "sc2.typeshed_builtins.builtins.BaseException.add_note": [],
    "sc2.typeshed_builtins.builtins.AttributeError.__init__": [],
    "sc2.typeshed_builtins.builtins.ImportError.__init__": [],
    "sc2.typeshed_builtins.builtins.UnicodeDecodeError.__init__": [],
    "sc2.typeshed_builtins.builtins.UnicodeEncodeError.__init__": [],
    "sc2.typeshed_builtins.builtins.UnicodeTranslateError.__init__": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.__new__": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.__init__": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.message": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.exceptions": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.subgroup": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.split": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.derive": [],
    "sc2.typeshed_builtins.builtins.BaseExceptionGroup.__class_getitem__": [],
    "sc2.typeshed_builtins.builtins.ExceptionGroup.__new__": [],
    "sc2.typeshed_builtins.builtins.ExceptionGroup.__init__": [],
    "sc2.typeshed_builtins.builtins.ExceptionGroup": [
        "typing.overload",
        "sc2.typeshed_builtins.builtins.property",
    ],
    "sc2.typeshed_builtins.builtins.ExceptionGroup.exceptions": [],
    "sc2.typeshed_builtins.builtins.ExceptionGroup.subgroup": [],
    "sc2.typeshed_builtins.builtins.ExceptionGroup.split": [],
    "sc2.tmpfix": [],
    "generate_id_constants": [
        "os.path.basename",
        "generate_id_constants.generate_python_code",
        "generate_id_constants.clike_enum_parse",
        "requests.get",
    ],
    "generate_id_constants.clike_enum_parse": ["re.sub", "<builtin>.int", "re.findall"],
    "re.sub": [],
    "re.findall": [],
    "generate_id_constants.generate_python_code": [
        "pathlib.Path",
        "pathlib.Path.mkdir",
        "<builtin>.any",
        "pathlib.Path.with_suffix.open",
        "pathlib.Path.open",
        "pathlib.Path.with_suffix",
        "<builtin>.sorted",
    ],
    "generate_id_constants.generate_python_code.<lambda1>": [],
    "requests.get": [],
}
