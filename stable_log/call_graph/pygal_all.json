{
    "...pygal.pygal.maps": [],
    "...pygal.pygal.config": ["<builtin>.type"],
    "...pygal.pygal.config.<lambda1>": [],
    "<builtin>.type": [],
    "...pygal.pygal.config.Key.__init__": [],
    "...pygal.pygal.config.Key.__repr__": [],
    "...pygal.pygal.config.Key.is_boolean": [],
    "...pygal.pygal.config.Key.is_numeric": [],
    "...pygal.pygal.config.Key.is_string": [],
    "...pygal.pygal.config.Key.is_dict": [],
    "...pygal.pygal.config.Key.is_list": [],
    "...pygal.pygal.config.Key.coerce": ["pygal.style.Style", "<builtin>.map"],
    "...pygal.pygal.config.Key.coerce.<lambda1>": [],
    "<builtin>.map": [],
    "pygal.style.Style": [],
    "...pygal.pygal.config.MetaConfig.__new__": ["<builtin>.isinstance"],
    "<builtin>.isinstance": [],
    "...pygal.pygal.config.BaseConfig.__init__": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "...pygal.pygal.config.BaseConfig._update",
        "<builtin>.dir",
        "<builtin>.list",
        "<builtin>.setattr",
        "<builtin>.getattr",
    ],
    "<builtin>.dir": [],
    "<builtin>.getattr": [],
    "<builtin>.hasattr": [],
    "<builtin>.list": [],
    "<builtin>.setattr": [],
    "...pygal.pygal.config.BaseConfig._update": [
        "<builtin>.dir",
        "pygal.util.merge",
        "<builtin>.set",
        "<builtin>.dict",
    ],
    "...pygal.pygal.config.BaseConfig.__call__": [
        "...pygal.pygal.config.BaseConfig._update"
    ],
    "<builtin>.set": [],
    "<builtin>.dict": [],
    "pygal.util.merge": [],
    "...pygal.pygal.config.BaseConfig.to_dict": [
        "<builtin>.hasattr",
        "<builtin>.dir",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.config.BaseConfig.copy": ["copy.deepcopy"],
    "copy.deepcopy": [],
    "...pygal.pygal.config.CommonConfig": ["...pygal.pygal.config.Key.__init__"],
    "...pygal.pygal.config.Config": ["...pygal.pygal.config.Key.__init__"],
    "...pygal.pygal.config.SerieConfig": ["...pygal.pygal.config.Key.__init__"],
    "...pygal.pygal.formatters": [
        "...pygal.pygal.formatters.Significant.__init__",
        "...pygal.pygal.formatters.HumanReadable.__init__",
    ],
    "pygal._compat.u": [],
    "...pygal.pygal.formatters.HumanReadable": ["pygal._compat.u"],
    "...pygal.pygal.formatters.HumanReadable.__init__": [],
    "...pygal.pygal.formatters.HumanReadable.__call__": [
        "math.log",
        "pygal.util.float_format",
        "<builtin>.len",
        "<builtin>.abs",
        "pygal._compat.u.split",
        "<builtin>.int",
        "math.floor",
    ],
    "<builtin>.abs": [],
    "math.log": [],
    "math.floor": [],
    "<builtin>.int": [],
    "pygal._compat.u.split": [],
    "<builtin>.len": [],
    "pygal.util.float_format": [],
    "...pygal.pygal.formatters.Significant.__init__": [],
    "...pygal.pygal.formatters.Significant.__call__": [],
    "...pygal.pygal.formatters.Integer.__call__": [],
    "...pygal.pygal.formatters.Raw.__call__": ["pygal._compat.to_str"],
    "pygal._compat.to_str": [],
    "...pygal.pygal.formatters.IsoDateTime.__call__": [],
    "...pygal.pygal.formatters.Default.__call__": [
        "...pygal.pygal.formatters.Significant.__call__",
        "...pygal.pygal.formatters.Raw.__call__",
        "<builtin>.isinstance",
        "...pygal.pygal.formatters.IsoDateTime.__call__",
        "...pygal.pygal.formatters.Default.__call__",
    ],
    "...pygal.pygal.style": [],
    "...pygal.pygal.style.Style.__init__": [
        "<builtin>.setattr",
        "<builtin>.dir",
        "<builtin>.set",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.style.Style.get_colors": [
        "<builtin>.range",
        "pygal.colors.is_foreground_light",
        "pygal.colors.darken",
        "itertools.chain",
        "<builtin>.len",
        "<builtin>.map",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.style.Style.get_colors.color": [],
    "...pygal.pygal.style.Style.get_colors.value_color": [],
    "...pygal.pygal.style.Style.get_colors.ci_color": [],
    "<builtin>.range": [],
    "pygal.colors.darken": [],
    "pygal.colors.is_foreground_light": [],
    "<builtin>.enumerate": [],
    "itertools.chain": [],
    "...pygal.pygal.style.Style.to_dict": [
        "<builtin>.hasattr",
        "<builtin>.dir",
        "<builtin>.getattr",
    ],
    "pygal.colors.lighten": [],
    "...pygal.pygal.style.RedBlueStyle": [
        "pygal.colors.darken",
        "pygal.colors.lighten",
    ],
    "...pygal.pygal.style.LightColorizedStyle": [
        "pygal.colors.darken",
        "pygal.colors.lighten",
    ],
    "...pygal.pygal.style.DarkColorizedStyle": [
        "pygal.colors.lighten",
        "pygal.colors.darken",
    ],
    "...pygal.pygal.style.TurquoiseStyle": [
        "pygal.colors.lighten",
        "pygal.colors.darken",
    ],
    "...pygal.pygal.style.LightGreenStyle": [
        "pygal.colors.darken",
        "pygal.colors.lighten",
    ],
    "...pygal.pygal.style.DarkGreenStyle": [
        "pygal.colors.lighten",
        "pygal.colors.darken",
    ],
    "...pygal.pygal.style.DarkGreenBlueStyle": [
        "pygal.colors.darken",
        "pygal.colors.lighten",
    ],
    "...pygal.pygal.style.BlueStyle": ["pygal.colors.lighten", "pygal.colors.darken"],
    "...pygal.pygal.style.ParametricStyleBase.__init__": [
        "<builtin>.RuntimeError",
        "<builtin>.range",
        "<builtin>.isinstance",
        "<builtin>.max",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.super",
    ],
    "<builtin>.RuntimeError": [],
    "<builtin>.super": [],
    "...pygal.pygal.style.ParametricStyleBase.__init__.modifier": ["<builtin>.getattr"],
    "<builtin>.max": [],
    "...pygal.pygal.test.test_serie_config": [],
    "...pygal.pygal.test.test_serie_config.test_no_serie_config": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "pygal.Line": [],
    "pygal.Line.add": [],
    "pygal.Line.render_pyquery": [],
    "...pygal.pygal.test.test_serie_config.test_global_config": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_serie_config.test_serie_config": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_serie_config.test_serie_precedence_over_global_config": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_stacked": [],
    "...pygal.pygal.test.test_stacked.test_stacked_line": [
        "pygal.StackedLine.add",
        "pygal.StackedLine",
        "<builtin>.set",
        "pygal.StackedLine.render_pyquery",
    ],
    "pygal.StackedLine": [],
    "pygal.StackedLine.add": [],
    "pygal.StackedLine.render_pyquery": [],
    "...pygal.pygal.test.test_stacked.test_stacked_line_reverse": [
        "pygal.StackedLine.add",
        "pygal.StackedLine",
        "<builtin>.set",
        "pygal.StackedLine.render_pyquery",
    ],
    "...pygal.pygal.test.test_stacked.test_stacked_line_log": [
        "pygal.StackedLine.add",
        "pygal.StackedLine",
        "<builtin>.set",
        "pygal.StackedLine.render_pyquery",
    ],
    "...pygal.pygal.test.test_stacked.test_stacked_line_interpolate": [
        "pygal.StackedLine.add",
        "pygal.StackedLine",
        "<builtin>.set",
        "pygal.StackedLine.render_pyquery",
    ],
    "...pygal.pygal.test.test_PT_table": [],
    "...pygal.pygal.test.test_PT_table.test_PT_render": [
        "pygal.table.Table.render",
        "pygal.table.Table",
    ],
    "pygal.table.Table": [],
    "pygal.table.Table.render": [],
    "...pygal.pygal.test.test_PT_util": [],
    "...pygal.pygal.test.test_PT_util.test_PT_float_format": [
        "pygal.util.float_format",
        "pygal.util.deg",
    ],
    "pygal.util.deg": [],
    "...pygal.pygal.test.test_PT_util.test_PT_compute_logarithmic_scale": [
        "pygal.util.compute_logarithmic_scale"
    ],
    "pygal.util.compute_logarithmic_scale": [],
    "...pygal.pygal.test.test_PT_util.test_PT_safe_enumerate": [
        "pygal.util.safe_enumerate"
    ],
    "pygal.util.safe_enumerate": [],
    "...pygal.pygal.test.conftest": ["pytest.fixture"],
    "pytest.fixture": [],
    "...pygal.pygal.test.conftest.etreefx": [
        "pygal.etree.etree.to_etree",
        "pygal.etree.etree.to_lxml",
    ],
    "pygal.etree.etree.to_etree": [],
    "pygal.etree.etree.to_lxml": [],
    "...pygal.pygal.test.conftest.pytest_generate_tests": [
        "pygal.etree.etree.to_etree",
        "<builtin>.hasattr",
        "<builtin>.range",
        "pygal.etree.etree.to_lxml",
        "get_data",
    ],
    "get_data": [],
    "...pygal.pygal.test.test_PT_graph_public": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_in_browser": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_in_browser",
    ],
    "pygal.graph.public.PublicApi": [],
    "pygal.graph.public.PublicApi.render_in_browser": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_response": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_response",
    ],
    "pygal.graph.public.PublicApi.render_response": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_django_response": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_django_response",
    ],
    "pygal.graph.public.PublicApi.render_django_response": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_data_uri": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_data_uri",
    ],
    "pygal.graph.public.PublicApi.render_data_uri": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_to_file": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_to_file",
    ],
    "pygal.graph.public.PublicApi.render_to_file": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_to_png": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_to_png",
    ],
    "pygal.graph.public.PublicApi.render_to_png": [],
    "...pygal.pygal.test.test_PT_graph_public.test_PT_render_sparkline": [
        "pygal.graph.public.PublicApi",
        "pygal.graph.public.PublicApi.render_sparkline",
    ],
    "pygal.graph.public.PublicApi.render_sparkline": [],
    "...pygal.pygal.test.test_PT_graph_gauge": [],
    "...pygal.pygal.test.test_PT_graph_gauge.test_PT_needle": [
        "pygal.graph.gauge.Gauge",
        "pygal.graph.gauge.Gauge.needle",
    ],
    "pygal.graph.gauge.Gauge": [],
    "pygal.graph.gauge.Gauge.needle": [],
    "...pygal.pygal.test.test_maps": [
        "<builtin>.globals",
        "pkg_resources.iter_entry_points",
        "pkg_resources.iter_entry_points.load.__dict__.items",
        "pkg_resources.iter_entry_points.load",
    ],
    "pkg_resources.iter_entry_points": [],
    "pkg_resources.iter_entry_points.load": [],
    "pkg_resources.iter_entry_points.load.__dict__.items": [],
    "<builtin>.globals": [],
    "...pygal.pygal.test.test_PT_graph_time": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_datetime_to_timestamp": [
        "datetime.datetime",
        "pygal.graph.time.datetime_to_timestamp",
    ],
    "datetime.datetime": [],
    "pygal.graph.time.datetime_to_timestamp": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_datetime_to_time": [
        "datetime.datetime",
        "pygal.graph.time.datetime_to_time",
    ],
    "pygal.graph.time.datetime_to_time": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_date_to_datetime": [
        "datetime.datetime",
        "pygal.graph.time.date_to_datetime",
    ],
    "pygal.graph.time.date_to_datetime": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_time_to_datetime": [
        "pygal.graph.time.time_to_datetime",
        "datetime.time",
    ],
    "datetime.time": [],
    "pygal.graph.time.time_to_datetime": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_timedelta_to_seconds": [
        "datetime.timedelta",
        "pygal.graph.time.timedelta_to_seconds",
    ],
    "datetime.timedelta": [],
    "pygal.graph.time.timedelta_to_seconds": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_time_to_seconds": [
        "pygal.graph.time.time_to_seconds",
        "datetime.time",
    ],
    "pygal.graph.time.time_to_seconds": [],
    "...pygal.pygal.test.test_PT_graph_time.test_PT_seconds_to_time": [
        "pygal.graph.time.seconds_to_time"
    ],
    "pygal.graph.time.seconds_to_time": [],
    "...pygal.pygal.test.test_PT_graph_solidgauge": [],
    "...pygal.pygal.test.test_PT_graph_solidgauge.test_PT_gaugify": [
        "pygal.graph.solidgauge.SolidGauge",
        "pygal.graph.solidgauge.SolidGauge.gaugify",
    ],
    "pygal.graph.solidgauge.SolidGauge": [],
    "pygal.graph.solidgauge.SolidGauge.gaugify": [],
    "...pygal.pygal.test.test_pie": [],
    "...pygal.pygal.test.test_pie.test_donut": [
        "pygal.Pie.add",
        "pygal.Pie.render",
        "pygal.Pie",
    ],
    "pygal.Pie": [],
    "pygal.Pie.add": [],
    "pygal.Pie.render": [],
    "...pygal.pygal.test.test_pie.test_multiseries_donut": [
        "pygal.Pie.add",
        "pygal.Pie.render",
        "pygal.Pie",
    ],
    "...pygal.pygal.test.test_pie.test_half_pie": [
        "pygal.Pie.add",
        "pygal.Pie.render",
        "pygal.Pie",
    ],
    "...pygal.pygal.test.test_line_log_none_max_solved": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_table": [],
    "...pygal.pygal.test.test_table.test_pie_table": [
        "pygal.Pie.add",
        "<builtin>.len",
        "pygal.Pie",
        "pygal.Pie.render_table",
        "pyquery.PyQuery",
    ],
    "pygal.Pie.render_table": [],
    "pyquery.PyQuery": [],
    "...pygal.pygal.test.test_PT_interpolate": [],
    "...pygal.pygal.test.test_PT_interpolate.test_PT_quadratic_interpolate": [
        "pygal.interpolate.quadratic_interpolate"
    ],
    "pygal.interpolate.quadratic_interpolate": [],
    "...pygal.pygal.test.test_PT_interpolate.test_PT_cubic_interpolate": [
        "pygal.interpolate.cubic_interpolate"
    ],
    "pygal.interpolate.cubic_interpolate": [],
    "...pygal.pygal.test.test_PT_interpolate.test_PT_hermite_interpolate": [
        "pygal.interpolate.hermite_interpolate"
    ],
    "pygal.interpolate.hermite_interpolate": [],
    "...pygal.pygal.test.test_PT_interpolate.test_PT_lagrange_interpolate": [
        "pygal.interpolate.lagrange_interpolate"
    ],
    "pygal.interpolate.lagrange_interpolate": [],
    "...pygal.pygal.test.test_PT_interpolate.test_PT_trigonometric_interpolate": [
        "pygal.interpolate.trigonometric_interpolate"
    ],
    "pygal.interpolate.trigonometric_interpolate": [],
    "...pygal.pygal.test.test_PT_graph_histrogram": [],
    "...pygal.pygal.test.test_PT_graph_histrogram.test_PT_xvals": [
        "pygal.graph.histrogram.Histogram",
        "pygal.graph.histrogram.Histogram.xvals",
    ],
    "pygal.graph.histrogram.Histogram": [],
    "pygal.graph.histrogram.Histogram.xvals": [],
    "...pygal.pygal.test.test_PT_graph_histrogram.test_PT_yvals": [
        "pygal.graph.histrogram.Histogram",
        "pygal.graph.histrogram.Histogram.yvals",
    ],
    "pygal.graph.histrogram.Histogram.yvals": [],
    "...pygal.pygal.test.test_PT_graph_histrogram.test_PT_bar": [
        "pygal.graph.histrogram.Histogram",
        "pygal.graph.histrogram.Histogram.bar",
    ],
    "pygal.graph.histrogram.Histogram.bar": [],
    "...pygal.pygal.test.test_PT_graph_histrogram.test_PT_": [
        "pygal.graph.histrogram.Histogram",
        "pygal.graph.histrogram.Histogram.xxxx",
    ],
    "pygal.graph.histrogram.Histogram.xxxx": [],
    "...pygal.pygal.test.test_box": [],
    "...pygal.pygal.test.test_box.test_quartiles": ["pygal.graph.box.Box._box_points"],
    "pygal.graph.box.Box._box_points": [],
    "...pygal.pygal.test.test_box.test_quartiles_min_extremes": [
        "pygal.graph.box.Box._box_points"
    ],
    "...pygal.pygal.test.test_box.test_quartiles_tukey": [
        "pygal.graph.box.Box._box_points"
    ],
    "...pygal.pygal.test.test_box.test_quartiles_stdev": [
        "<builtin>.all",
        "pygal.graph.box.Box._box_points",
        "<builtin>.min",
        "<builtin>.max",
    ],
    "<builtin>.min": [],
    "<builtin>.all": [],
    "...pygal.pygal.test.test_box.test_simple_box": [
        "pygal.graph.box.Box",
        "pygal.graph.box.Box.render_pyquery",
        "pygal.graph.box.Box.add",
        "<builtin>.len",
    ],
    "pygal.graph.box.Box": [],
    "pygal.graph.box.Box.add": [],
    "pygal.graph.box.Box.render_pyquery": [],
    "...pygal.pygal.test.test_PT_graph_graph": [],
    "...pygal.pygal.test.test_PT_graph_graph.test_PT_add_squares": [
        "pygal.graph.graph.Graph.add_squares",
        "pygal.graph.graph.Graph",
    ],
    "pygal.graph.graph.Graph": [],
    "pygal.graph.graph.Graph.add_squares": [],
    "...pygal.pygal.test.test_line": [],
    "...pygal.pygal.test.test_line.test_simple_line": [
        "<builtin>.range",
        "<builtin>.len",
        "math.sin",
        "pygal.Line.render_pyquery",
        "math.cos",
        "pygal.Line.add",
        "<builtin>.map",
        "pygal.Line",
    ],
    "math.cos": [],
    "math.sin": [],
    "...pygal.pygal.test.test_line.test_line": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_line.test_one_dot": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_line.test_no_dot": [
        "pygal.Line.render_pyquery",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_line.test_no_dot_at_all": [
        "pygal.Line.render_pyquery",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_not_equal_x_labels": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "<builtin>.map",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_int_x_labels": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "pygal.Line.add",
        "<builtin>.list",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_only_major_dots_every": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "<builtin>.map",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_only_major_dots_no_labels": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_only_major_dots_count": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "<builtin>.map",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_only_major_dots": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "<builtin>.map",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_line_secondary": [
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "<builtin>.map",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_line.test_line_secondary.<lambda1>": [],
    "...pygal.pygal.test": [],
    "...pygal.pygal.test.test_PT_find_module": [
        "pygal.PluginImportFixer",
        "pygal.PluginImportFixer.find_module",
    ],
    "pygal.PluginImportFixer": [],
    "pygal.PluginImportFixer.find_module": [],
    "...pygal.pygal.test.test_PT_load_module": [
        "pygal.PluginImportFixer",
        "pygal.PluginImportFixer.find_module",
    ],
    "...pygal.pygal.test.test_PT_serie": [],
    "...pygal.pygal.test.test_PT_serie.test_PT_safe_values": [
        "pygal.serie.Serie",
        "pygal.serie.Serie.safe_values",
    ],
    "pygal.serie.Serie": [],
    "pygal.serie.Serie.safe_values": [],
    "...pygal.pygal.test.test_util": [],
    "...pygal.pygal.test.test_util.test_round_to_int": ["pygal.util.round_to_int"],
    "pygal.util.round_to_int": [],
    "...pygal.pygal.test.test_util.test_round_to_float": ["pygal.util.round_to_float"],
    "pygal.util.round_to_float": [],
    "...pygal.pygal.test.test_util.test_swap_curly": [
        "pygal.util._swap_curly",
        "pygal._compat.u",
    ],
    "pygal.util._swap_curly": [],
    "...pygal.pygal.test.test_util.test_format": [
        "pygal.util.template",
        "pytest.raises",
    ],
    "pygal.util.template": [],
    "pytest.raises": [],
    "...pygal.pygal.test.test_util.test_truncate": [
        "pygal._compat.u",
        "pygal.util.truncate",
    ],
    "pygal.util.truncate": [],
    "...pygal.pygal.test.test_util.test_minify_css": ["pygal.util.minify_css"],
    "pygal.util.minify_css": [],
    "...pygal.pygal.test.test_util.test_majorize": [
        "pygal.util.majorize",
        "<builtin>.range",
    ],
    "pygal.util.majorize": [],
    "...pygal.pygal.test.test_util.test_mergextend": [
        "<builtin>.eval",
        "pygal.util.mergextend",
    ],
    "pygal.util.mergextend": [],
    "<builtin>.eval": [],
    "...pygal.pygal.test.test_xml_filters": [],
    "...pygal.pygal.test.test_xml_filters.ChangeBarsXMLFilter.__init__": [
        "<builtin>.len",
        "<builtin>.range",
    ],
    "...pygal.pygal.test.test_xml_filters.ChangeBarsXMLFilter.__call__": [
        "pygal.Bar.render_tree",
        "pygal.Bar.render_tree.add",
        "pygal.Bar.render_tree.findall",
        "pygal.Bar",
        "pygal.Bar.findall",
        "pygal.Bar.add",
    ],
    "pygal.Bar": [],
    "pygal.Bar.render_tree.add": [],
    "pygal.Bar.add": [],
    "pygal.Bar.render_tree": [],
    "pygal.Bar.findall": [],
    "pygal.Bar.render_tree.findall": [],
    "...pygal.pygal.test.test_xml_filters.test_xml_filters_round_trip": [
        "pygal.Bar.add_xml_filter",
        "pygal.Bar",
        "pygal.Bar.add",
        "pygal.Bar.render",
    ],
    "pygal.Bar.render": [],
    "...pygal.pygal.test.test_xml_filters.test_xml_filters_round_trip.<lambda1>": [],
    "pygal.Bar.add_xml_filter": [],
    "...pygal.pygal.test.test_xml_filters.test_xml_filters_change_bars": [
        "pygal.Bar.render_tree",
        "pygal.Bar.render_tree.findall",
        "pygal.Bar.add_xml_filter",
        "...pygal.pygal.test.test_xml_filters.ChangeBarsXMLFilter.__init__",
        "<builtin>.len",
        "pygal.Bar",
        "pygal.Bar.add",
    ],
    "...pygal.pygal.test.test_colors": [],
    "...pygal.pygal.test.test_colors.test_parse_color": ["pygal.colors.parse_color"],
    "pygal.colors.parse_color": [],
    "...pygal.pygal.test.test_colors.test_unparse_color": [
        "pygal.colors.unparse_color"
    ],
    "pygal.colors.unparse_color": [],
    "...pygal.pygal.test.test_colors.test_darken": ["pygal.colors.darken"],
    "...pygal.pygal.test.test_colors.test_lighten": ["pygal.colors.lighten"],
    "...pygal.pygal.test.test_colors.test_saturate": ["pygal.colors.saturate"],
    "pygal.colors.saturate": [],
    "...pygal.pygal.test.test_colors.test_desaturate": ["pygal.colors.desaturate"],
    "pygal.colors.desaturate": [],
    "...pygal.pygal.test.test_colors.test_rotate": ["pygal.colors.rotate"],
    "pygal.colors.rotate": [],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_0": [
        "pygal.colors.hsl_to_rgb"
    ],
    "pygal.colors.hsl_to_rgb": [],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_0": [
        "pygal.colors.rgb_to_hsl"
    ],
    "pygal.colors.rgb_to_hsl": [],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_1": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_1": [],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_2": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_2": [],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_3": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_3": [],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_4": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_4": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_5": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_5": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_6": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_6": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_7": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_7": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_8": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_8": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_9": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_9": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_10": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_10": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_11": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_11": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_12": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_12": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_13": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_13": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_14": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_14": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_15": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_15": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_16": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_16": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_17": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_17": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_colors.test_hsl_to_rgb_part_18": [
        "pygal.colors.hsl_to_rgb"
    ],
    "...pygal.pygal.test.test_colors.test_rgb_to_hsl_part_18": [
        "pygal.colors.rgb_to_hsl"
    ],
    "...pygal.pygal.test.test_PT_stats": [],
    "...pygal.pygal.test.test_PT_stats.test_PT_erfinv": ["pygal.stats.erfinv"],
    "pygal.stats.erfinv": [],
    "...pygal.pygal.test.test_PT_stats.test_PT_norm_ppf": ["pygal.stats.norm_ppf"],
    "pygal.stats.norm_ppf": [],
    "...pygal.pygal.test.test_PT_stats.test_PT_ppf": ["pygal.stats.ppf"],
    "pygal.stats.ppf": [],
    "...pygal.pygal.test.test_PT_stats.test_PT_confidence_interval_continuous": [
        "pygal.stats.confidence_interval_continuous"
    ],
    "pygal.stats.confidence_interval_continuous": [],
    "...pygal.pygal.test.test_PT_stats.test_PT_confidence_interval_dichotomous": [
        "pygal.stats.confidence_interval_dichotomous"
    ],
    "pygal.stats.confidence_interval_dichotomous": [],
    "...pygal.pygal.test.test_PT_stats.test_PT_confidence_interval_manual": [],
    "...pygal.pygal.test.test_PT_colors": [],
    "...pygal.pygal.test.test_PT_colors.test_PT_normalize_float": [
        "pygal.colors.normalize_float"
    ],
    "pygal.colors.normalize_float": [],
    "...pygal.pygal.test.test_PT_colors.test_PT_is_foreground_light": [
        "pygal.colors.is_foreground_light"
    ],
    "...pygal.pygal.test.utils": ["pytest.mark.skip"],
    "pytest.mark.skip": [],
    "...pygal.pygal.test.utils.texts": ["pyquery.PyQuery.text", "pyquery.PyQuery"],
    "pyquery.PyQuery.text": [],
    "...pygal.pygal.test.test_PT_graph_dot": [],
    "...pygal.pygal.test.test_PT_graph_dot.test_PT_dot": [
        "pygal.graph.dot.Dot",
        "pygal.graph.dot.Dot.dot",
    ],
    "pygal.graph.dot.Dot": [],
    "pygal.graph.dot.Dot.dot": [],
    "...pygal.pygal.test.test_PT_svg": [],
    "...pygal.pygal.test.test_PT_svg.test_PT_gauge_background": [
        "pygal.svg.Svg",
        "pygal.svg.Svg.gauge_background",
    ],
    "pygal.svg.Svg": [],
    "pygal.svg.Svg.gauge_background": [],
    "...pygal.pygal.test.test_PT_svg.test_PT_solid_gauge": [
        "pygal.svg.Svg",
        "pygal.svg.Svg.solid_gauge",
    ],
    "pygal.svg.Svg.solid_gauge": [],
    "...pygal.pygal.test.test_view": [],
    "...pygal.pygal.test.test_view.test_all_logarithmic": [],
    "...pygal.pygal.test.test_PT_config": [],
    "...pygal.pygal.test.test_PT_config.test_PT_is_boolean": [
        "pygal.config.Key.is_boolean",
        "pygal.config.Key",
    ],
    "pygal.config.Key": [],
    "pygal.config.Key.is_boolean": [],
    "...pygal.pygal.test.test_PT_config.test_PT_is_numeric": [
        "pygal.config.Key",
        "pygal.config.Key.is_numeric",
    ],
    "pygal.config.Key.is_numeric": [],
    "...pygal.pygal.test.test_PT_config.test_PT_is_string": [
        "pygal.config.Key.is_string",
        "pygal.config.Key",
    ],
    "pygal.config.Key.is_string": [],
    "...pygal.pygal.test.test_PT_config.test_PT_is_dict": [
        "pygal.config.Key.is_dict",
        "pygal.config.Key",
    ],
    "pygal.config.Key.is_dict": [],
    "...pygal.pygal.test.test_PT_config.test_PT_is_list": [
        "pygal.config.Key.is_list",
        "pygal.config.Key",
    ],
    "pygal.config.Key.is_list": [],
    "...pygal.pygal.test.test_PT_config.test_PT_coerce": [
        "pygal.config.Key.coerce",
        "pygal.config.Key",
    ],
    "pygal.config.Key.coerce": [],
    "...pygal.pygal.test.test_PT_config.test_PT_to_dict": [
        "pygal.config.BaseConfig.to_dict",
        "pygal.config.BaseConfig",
    ],
    "pygal.config.BaseConfig": [],
    "pygal.config.BaseConfig.to_dict": [],
    "...pygal.pygal.test.test_PT_config.test_PT_copy": [
        "pygal.config.BaseConfig.copy",
        "pygal.config.BaseConfig",
    ],
    "pygal.config.BaseConfig.copy": [],
    "...pygal.pygal.test.test_PT_graph_xy": [],
    "...pygal.pygal.test.test_PT_graph_xy.test_PT_xvals": [
        "pygal.graph.xy.XY",
        "pygal.graph.xy.XY.xvals",
    ],
    "pygal.graph.xy.XY": [],
    "pygal.graph.xy.XY.xvals": [],
    "...pygal.pygal.test.test_PT_graph_xy.test_PT_yvals": [
        "pygal.graph.xy.XY",
        "pygal.graph.xy.XY.yvals",
    ],
    "pygal.graph.xy.XY.yvals": [],
    "...pygal.pygal.test.test_PT_graph_xy.test_PT_": [
        "pygal.graph.xy.XY",
        "pygal.graph.xy.XY.xxx",
    ],
    "pygal.graph.xy.XY.xxx": [],
    "...pygal.pygal.test.test_config": [],
    "...pygal.pygal.test.test_config.test_config_behaviours": [
        "pygal.Line.render",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "pygal.Config.__init__",
        "pygal.Line.add",
        "pygal.Line",
        "pygal.Config",
    ],
    "pygal.Line.render": [],
    "pygal.Config.__init__": [],
    "pygal.Config": [],
    "...pygal.pygal.test.test_config.test_config_alterations_class": [
        "pygal.Line",
        "pygal.Line.add",
        "pygal.Line.render",
    ],
    "...pygal.pygal.test.test_config.test_config_alterations_instance": [
        "pygal.Config.__init__",
        "pygal.Line.add",
        "pygal.Line.render",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_config.test_config_alterations_kwargs": [
        "pygal.Config.__init__",
        "pygal.Line.add",
        "pygal.Line.render",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_config.test_logarithmic": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_config.test_interpolation": ["<builtin>.len"],
    "...pygal.pygal.test.test_config.test_no_data_interpolation": [],
    "...pygal.pygal.test.test_config.test_no_data_with_empty_serie_interpolation": [],
    "...pygal.pygal.test.test_config.test_logarithmic_bad_interpolation": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_config.test_logarithmic_big_scale": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_config.test_value_formatter": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.Line.render_pyquery",
        "pygal.Line.add",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_config.test_value_formatter.<lambda1>": [
        "pygal._compat.u",
        "<builtin>.str",
    ],
    "<builtin>.str": [],
    "...pygal.pygal.test.test_config.test_value_formatter.<lambda2>": [
        "pygal._compat.u",
        "<builtin>.str",
    ],
    "...pygal.pygal.test.test_config.test_logarithmic_small_scale": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_config.test_human_readable": [
        "<builtin>.range",
        "pygal.Line.render_pyquery",
        "<builtin>.map",
        "pygal.Line.add",
        "<builtin>.list",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_config.test_human_readable.<lambda1>": [],
    "...pygal.pygal.test.test_config.test_show_legend": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_config.test_show_dots": [
        "pygal.Line.render_pyquery",
        "<builtin>.len",
        "pygal.Line",
        "pygal.Line.add",
    ],
    "...pygal.pygal.test.test_config.test_no_data": [
        "pygal.Line.render_pyquery",
        "pygal.Line",
        "pygal._compat.u",
    ],
    "...pygal.pygal.test.test_config.test_include_x_axis": [
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "<builtin>.getattr",
    ],
    "<builtin>.issubclass": [],
    "...pygal.pygal.test.test_config.test_css": [
        "pygal.Config.css.append",
        "tempfile.NamedTemporaryFile",
        "pygal.Config",
    ],
    "tempfile.NamedTemporaryFile": [],
    "pygal.Config.css.append": [],
    "...pygal.pygal.test.test_config.test_inline_css": [
        "pygal.Config.css.append",
        "pygal.Config",
    ],
    "...pygal.pygal.test.test_config.test_meta_config": ["<builtin>.all"],
    "...pygal.pygal.test.test_config.test_label_rotation": ["<builtin>.len"],
    "...pygal.pygal.test.test_config.test_legend_at_bottom": [],
    "...pygal.pygal.test.test_config.test_x_y_title": ["<builtin>.len"],
    "...pygal.pygal.test.test_config.test_range": [
        "<builtin>.range",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.issubclass",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.test.test_config.test_x_label_major": [
        "<builtin>.len",
        "<builtin>.issubclass",
        "<builtin>.map",
        "<builtin>.range",
    ],
    "...pygal.pygal.test.test_config.test_y_label_major": [
        "<builtin>.range",
        "<builtin>.len",
        "<builtin>.zip",
        "<builtin>.list",
        "<builtin>.issubclass",
    ],
    "<builtin>.zip": [],
    "...pygal.pygal.test.test_config.test_no_y_labels": [],
    "...pygal.pygal.test.test_config.test_fill": [],
    "...pygal.pygal.test.test_config.test_render_data_uri": ["pygal._compat.u"],
    "...pygal.pygal.test.test_config.test_formatters": [
        "pygal._compat.u",
        "<builtin>.set",
    ],
    "...pygal.pygal.test.test_config.test_formatters.<lambda1>": [],
    "...pygal.pygal.test.test_config.test_formatters.<lambda2>": ["pygal._compat.u"],
    "...pygal.pygal.test.test_config.test_classes": [],
    "...pygal.pygal.test.test_style": [],
    "...pygal.pygal.test.test_style.test_parametric_styles": [
        "pygal.Line",
        "pygal.Line.add",
        "pygal.Line.render",
    ],
    "...pygal.pygal.test.test_style.test_parametric_styles_with_parameters": [
        "pygal.Line",
        "pygal.Line.add",
        "pygal.style.RotateStyle",
        "pygal.Line.render",
    ],
    "pygal.style.RotateStyle": [],
    "...pygal.pygal.test.test_PT_view": [],
    "...pygal.pygal.test.test_PT_view.test_PT_set_polar_box": [
        "pygal.view.Box.set_polar_box",
        "pygal.view.Box",
    ],
    "pygal.view.Box": [],
    "pygal.view.Box.set_polar_box": [],
    "...pygal.pygal.test.test_PT_view.test_PT_xmin": [
        "pygal.view.Box.xmin",
        "pygal.view.Box",
    ],
    "pygal.view.Box.xmin": [],
    "...pygal.pygal.test.test_PT_view.test_PT_ymin": [
        "pygal.view.Box.ymin",
        "pygal.view.Box",
    ],
    "pygal.view.Box.ymin": [],
    "...pygal.pygal.test.test_PT_view.test_PT_xmax": [
        "pygal.view.Box.xmax",
        "pygal.view.Box",
    ],
    "pygal.view.Box.xmax": [],
    "...pygal.pygal.test.test_PT_view.test_PT_ymax": [
        "pygal.view.Box",
        "pygal.view.Box.ymax",
    ],
    "pygal.view.Box.ymax": [],
    "...pygal.pygal.test.test_PT_view.test_PT_width": [
        "pygal.view.Box.width",
        "pygal.view.Box",
    ],
    "pygal.view.Box.width": [],
    "...pygal.pygal.test.test_PT_view.test_PT_height": [
        "pygal.view.Box.height",
        "pygal.view.Box",
    ],
    "pygal.view.Box.height": [],
    "...pygal.pygal.test.test_PT_view.test_PT_swap": [
        "pygal.view.Box",
        "pygal.view.Box.swap",
    ],
    "pygal.view.Box.swap": [],
    "...pygal.pygal.test.test_PT_view.test_PT_fix": [
        "pygal.view.Box.fix",
        "pygal.view.Box",
    ],
    "pygal.view.Box.fix": [],
    "...pygal.pygal.test.test_sparktext": [],
    "...pygal.pygal.test.test_sparktext.test_basic_sparktext": [
        "pygal._compat.u",
        "pygal.Line",
        "pygal.Line.add",
        "pygal.Line.render_sparktext",
    ],
    "pygal.Line.render_sparktext": [],
    "...pygal.pygal.test.test_sparktext.test_all_sparktext": [
        "pygal._compat.u",
        "<builtin>.range",
        "pygal.Line.render_sparktext",
        "pygal.Line.add",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_sparktext.test_shifted_sparktext": [
        "<builtin>.range",
        "pygal.Line.render_sparktext",
        "pygal._compat.u",
        "<builtin>.map",
        "pygal.Line.add",
        "<builtin>.list",
        "pygal.Line",
    ],
    "...pygal.pygal.test.test_sparktext.test_shifted_sparktext.<lambda1>": [],
    "...pygal.pygal.test.test_sparktext.test_another_sparktext": [
        "pygal._compat.u",
        "pygal.Line.render_sparktext",
        "pygal.Bar",
        "pygal.Line.add",
        "pygal.Line",
        "pygal.Bar.add",
        "pygal.Bar.render_sparktext",
    ],
    "pygal.Bar.render_sparktext": [],
    "...pygal.pygal.test.test_sparktext.test_negative_and_float__sparktext": [
        "pygal._compat.u",
        "pygal.Line",
        "pygal.Line.add",
        "pygal.Line.render_sparktext",
    ],
    "...pygal.pygal.test.test_sparktext.test_no_data_sparktext": [
        "pygal._compat.u",
        "pygal.Line",
        "pygal.Line.add",
        "pygal.Line.render_sparktext",
    ],
    "...pygal.pygal.test.test_sparktext.test_same_max_and_relative_values_sparktext": [
        "pygal._compat.u",
        "pygal.Line",
        "pygal.Line.add",
        "pygal.Line.render_sparktext",
    ],
    "...pygal.pygal.test.test_PT_graph_map": [],
    "...pygal.pygal.test.test_PT_graph_map.test_PT_enumerate_values": [
        "pygal.graph.map.BaseMap",
        "pygal.graph.map.BaseMap.enumerate_values",
    ],
    "pygal.graph.map.BaseMap": [],
    "pygal.graph.map.BaseMap.enumerate_values": [],
    "...pygal.pygal.test.test_PT_graph_map.test_PT_adapt_code": [
        "pygal.graph.map.BaseMap",
        "pygal.graph.map.BaseMap.adapt_code",
    ],
    "pygal.graph.map.BaseMap.adapt_code": [],
    "...pygal.pygal.test.test_date": [],
    "...pygal.pygal.test.test_date.test_date": [
        "pygal.DateLine.add",
        "datetime.date",
        "pygal.DateLine.render_pyquery",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.DateLine",
    ],
    "pygal.DateLine": [],
    "datetime.date": [],
    "pygal.DateLine.add": [],
    "pygal.DateLine.render_pyquery": [],
    "...pygal.pygal.test.test_date.test_date.<lambda1>": [],
    "...pygal.pygal.test.test_date.test_time": [
        "datetime.time",
        "pygal.TimeLine.render_pyquery",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.TimeLine.add",
        "pygal.TimeLine",
    ],
    "pygal.TimeLine": [],
    "pygal.TimeLine.add": [],
    "pygal.TimeLine.render_pyquery": [],
    "...pygal.pygal.test.test_date.test_time.<lambda1>": [],
    "...pygal.pygal.test.test_date.test_datetime": [
        "pygal.DateTimeLine",
        "<builtin>.list",
        "datetime.datetime",
        "<builtin>.map",
        "pygal.DateTimeLine.add",
        "pygal.DateTimeLine.render_pyquery",
    ],
    "pygal.DateTimeLine": [],
    "pygal.DateTimeLine.add": [],
    "pygal.DateTimeLine.render_pyquery": [],
    "...pygal.pygal.test.test_date.test_datetime.<lambda1>": [],
    "...pygal.pygal.test.test_date.test_timedelta": [
        "datetime.timedelta",
        "pygal.TimeDeltaLine",
        "pygal.TimeDeltaLine.add",
        "pygal.TimeDeltaLine.render_pyquery",
        "<builtin>.list",
    ],
    "pygal.TimeDeltaLine": [],
    "pygal.TimeDeltaLine.add": [],
    "pygal.TimeDeltaLine.render_pyquery": [],
    "...pygal.pygal.test.test_date.test_date_xrange": [
        "pygal.DateLine.add",
        "datetime.date",
        "pygal.DateLine.render_pyquery",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.DateLine",
    ],
    "...pygal.pygal.test.test_date.test_date_xrange.<lambda1>": [],
    "...pygal.pygal.test.test_date.test_date_labels": [
        "pygal.DateLine.add",
        "datetime.date",
        "pygal.DateLine.render_pyquery",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.DateLine",
    ],
    "...pygal.pygal.test.test_date.test_date_labels.<lambda1>": [],
    "...pygal.pygal.test.test_date.test_utc_timestamping": [
        "datetime.timedelta",
        "datetime.datetime.utcnow",
        "datetime.datetime.utcfromtimestamp",
        "datetime.datetime",
        "datetime.datetime.replace",
        "pygal._compat.timestamp",
        "datetime.datetime.now",
    ],
    "datetime.datetime.replace": [],
    "pygal._compat.timestamp": [],
    "datetime.datetime.now": [],
    "datetime.datetime.utcnow": [],
    "datetime.datetime.utcfromtimestamp": [],
    "...pygal.pygal.test.test_graph": ["pytest.mark.skip", "pytest.mark.skipif"],
    "...pygal.pygal.test.test_graph.test_multi_render": [
        "pygal.test.make_data",
        "<builtin>.range",
        "pygal.test.make_data.render",
    ],
    "pygal.test.make_data": [],
    "pygal.test.make_data.render": [],
    "...pygal.pygal.test.test_graph.test_render_to_file": [
        "os.path.exists",
        "os.remove",
        "pygal.test.make_data",
        "uuid.uuid4",
        "io.open",
        "pygal.test.make_data.render_to_file",
    ],
    "uuid.uuid4": [],
    "os.path.exists": [],
    "os.remove": [],
    "pygal.test.make_data.render_to_file": [],
    "io.open": [],
    "pytest.mark.skipif": [],
    "...pygal.pygal.test.test_graph.test_render_to_png": [
        "os.path.exists",
        "os.remove",
        "pygal.test.make_data",
        "uuid.uuid4",
        "pygal.test.make_data.render_to_png",
        "pygal.test.make_data._repr_png_",
        "<builtin>.open",
    ],
    "pygal.test.make_data.render_to_png": [],
    "pygal.test.make_data._repr_png_": [],
    "<builtin>.open": [],
    "...pygal.pygal.test.test_graph.test_metadata": [
        "<builtin>.range",
        "<builtin>.len",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.issubclass",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.test.test_graph.test_metadata.<lambda1>": [],
    "pygal.util.cut": [],
    "...pygal.pygal.test.test_graph.test_empty_lists": ["<builtin>.len"],
    "...pygal.pygal.test.test_graph.test_empty_lists_with_nones": ["<builtin>.len"],
    "...pygal.pygal.test.test_graph.test_only_one_value": ["<builtin>.len"],
    "...pygal.pygal.test.test_graph.test_only_one_value_log": ["<builtin>.len"],
    "...pygal.pygal.test.test_graph.test_only_one_value_intrp": ["<builtin>.len"],
    "...pygal.pygal.test.test_graph.test_non_iterable_value": [],
    "...pygal.pygal.test.test_graph.test_iterable_types": ["<builtin>.tuple"],
    "<builtin>.tuple": [],
    "...pygal.pygal.test.test_graph.test_values_by_dict": ["<builtin>.issubclass"],
    "...pygal.pygal.test.test_graph.test_no_data_with_no_values": [],
    "...pygal.pygal.test.test_graph.test_no_data_with_no_values_with_include_x_axis": [],
    "...pygal.pygal.test.test_graph.test_no_data_with_empty_serie": [],
    "...pygal.pygal.test.test_graph.test_no_data_with_empty_series": [],
    "...pygal.pygal.test.test_graph.test_no_data_with_none": [],
    "...pygal.pygal.test.test_graph.test_no_data_with_list_of_none": [],
    "...pygal.pygal.test.test_graph.test_no_data_with_lists_of_nones": [],
    "...pygal.pygal.test.test_graph.test_unicode_labels_decode": ["pygal._compat.u"],
    "...pygal.pygal.test.test_graph.test_unicode_labels_python2": [
        "<builtin>.eval",
        "pygal._compat.u",
    ],
    "...pygal.pygal.test.test_graph.test_unicode_labels_python3": [
        "<builtin>.eval",
        "pygal._compat.u",
    ],
    "...pygal.pygal.test.test_graph.test_labels_with_links": [
        "<builtin>.len",
        "<builtin>.isinstance",
    ],
    "...pygal.pygal.test.test_graph.test_sparkline": [
        "pygal.test.make_data.render_sparkline",
        "pygal.test.make_data",
    ],
    "pygal.test.make_data.render_sparkline": [],
    "...pygal.pygal.test.test_graph.test_secondary": ["<builtin>.map"],
    "...pygal.pygal.test.test_graph.test_secondary.<lambda1>": [],
    "...pygal.pygal.test.test_graph.test_ipython_notebook": [
        "pygal.test.make_data._repr_svg_",
        "pygal.test.make_data",
    ],
    "pygal.test.make_data._repr_svg_": [],
    "...pygal.pygal.test.test_graph.test_long_title": [
        "<builtin>.len",
        "pygal.test.make_data.render_pyquery",
        "pygal.test.make_data",
    ],
    "pygal.test.make_data.render_pyquery": [],
    "...pygal.pygal.test.test_PT_style": [],
    "...pygal.pygal.test.test_PT_style.test_PT_get_colors": [
        "pygal.style.Style",
        "pygal.style.Style.get_colors",
    ],
    "pygal.style.Style.get_colors": [],
    "...pygal.pygal.test.test_formatters": [],
    "...pygal.pygal.test.test_formatters.test_human_readable": [
        "pygal.formatters.human_readable",
        "pygal._compat.u",
    ],
    "pygal.formatters.human_readable": [],
    "...pygal.pygal.test.test_formatters.test_human_readable_custom": [
        "pygal.formatters.HumanReadable",
        "pygal._compat.u",
    ],
    "pygal.formatters.HumanReadable": [],
    "...pygal.pygal.test.test_formatters.test_significant": [
        "pygal.formatters.significant"
    ],
    "pygal.formatters.significant": [],
    "...pygal.pygal.test.test_PT_graph_funnel": [],
    "...pygal.pygal.test.test_PT_graph_funnel.test_PT_funnel": [
        "pygal.graph.funnel.Funnel",
        "pygal.graph.funnel.Funnel.funnel",
    ],
    "pygal.graph.funnel.Funnel": [],
    "pygal.graph.funnel.Funnel.funnel": [],
    "...pygal.pygal.test.test_bar": [],
    "...pygal.pygal.test.test_bar.test_simple_bar": [
        "<builtin>.len",
        "pygal.Bar.render_pyquery",
        "pygal.Bar",
        "<builtin>.map",
        "pygal.Bar.add",
    ],
    "pygal.Bar.render_pyquery": [],
    "...pygal.pygal.test.test_histogram": [],
    "...pygal.pygal.test.test_histogram.test_histogram": [
        "pygal.Histogram.render_pyquery",
        "pygal.Histogram",
        "<builtin>.len",
        "pygal.Histogram.add",
    ],
    "pygal.Histogram": [],
    "pygal.Histogram.add": [],
    "pygal.Histogram.render_pyquery": [],
    "...pygal.pygal.test.test_PT_adapters": [],
    "...pygal.pygal.test.test_PT_adapters.test_PT_positive": [
        "pygal.adapters.positive"
    ],
    "pygal.adapters.positive": [],
    "...pygal.pygal.test.test_PT_adapters.test_PT_not_zero": [
        "pygal.adapters.not_zero"
    ],
    "pygal.adapters.not_zero": [],
    "...pygal.pygal.test.test_PT_adapters.test_PT_none_to_zero": [
        "pygal.adapters.none_to_zero"
    ],
    "pygal.adapters.none_to_zero": [],
    "...pygal.pygal.test.test_PT_adapters.test_PT_decimal_to_float": [
        "pygal.adapters.decimal_to_float"
    ],
    "pygal.adapters.decimal_to_float": [],
    "...pygal.pygal.test.test_interpolate": [],
    "...pygal.pygal.test.test_interpolate.test_cubic": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_cubic_prec": [
        "<builtin>.len",
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_quadratic": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_lagrange": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_trigonometric": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_hermite": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_hermite_finite": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_hermite_cardinal": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_hermite_catmull_rom": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.test.test_interpolate.test_hermite_kochanek_bartels": [
        "pygal.test.make_data",
        "pygal.test.make_data.render",
    ],
    "...pygal.pygal.util": ["re.compile"],
    "...pygal.pygal.util.float_format": [],
    "...pygal.pygal.util.majorize": [
        "<builtin>.sorted",
        "<builtin>.len",
        "<builtin>.abs",
        "math.log10",
        "<builtin>.round",
        "<builtin>.int",
    ],
    "<builtin>.sorted": [],
    "math.log10": [],
    "<builtin>.round": [],
    "...pygal.pygal.util.round_to_int": ["<builtin>.int"],
    "...pygal.pygal.util.round_to_float": [
        "<builtin>.float",
        "math.floor",
        "<builtin>.str",
        "decimal.Decimal",
    ],
    "decimal.Decimal": [],
    "<builtin>.float": [],
    "...pygal.pygal.util.round_to_scale": [
        "...pygal.pygal.util.round_to_float",
        "...pygal.pygal.util.round_to_int",
    ],
    "...pygal.pygal.util.cut": [
        "<builtin>.isinstance",
        "<builtin>.map",
        "<builtin>.list",
    ],
    "...pygal.pygal.util.cut.<lambda1>": [],
    "...pygal.pygal.util.cut.<lambda2>": ["<builtin>.getattr"],
    "...pygal.pygal.util.rad": [],
    "...pygal.pygal.util.deg": [],
    "...pygal.pygal.util._swap_curly": [],
    "...pygal.pygal.util.template": ["...pygal.pygal.util._swap_curly"],
    "...pygal.pygal.util.<lambda1>": ["<builtin>.reversed", "<builtin>.tuple"],
    "<builtin>.reversed": [],
    "...pygal.pygal.util.<lambda2>": [],
    "...pygal.pygal.util.compute_logarithmic_scale": [
        "<builtin>.range",
        "math.log10",
        "math.ceil",
        "...pygal.pygal.util.round_to_scale",
        "<builtin>.int",
        "math.floor",
    ],
    "math.ceil": [],
    "...pygal.pygal.util.compute_scale": [
        "...pygal.pygal.util.compute_logarithmic_scale",
        "<builtin>.len",
        "<builtin>.abs",
        "math.log10",
        "<builtin>.max",
        "<builtin>.round",
        "<builtin>.float",
        "...pygal.pygal.util.round_to_scale",
    ],
    "...pygal.pygal.util.text_len": [],
    "...pygal.pygal.util.reverse_text_len": ["<builtin>.int"],
    "...pygal.pygal.util.get_text_box": [
        "<builtin>.len",
        "...pygal.pygal.util.text_len",
    ],
    "...pygal.pygal.util.get_texts_box": [
        "<builtin>.max",
        "<builtin>.map",
        "...pygal.pygal.util.text_len",
    ],
    "...pygal.pygal.util.decorate": [
        "<builtin>.isinstance",
        "pygal._compat.to_unicode",
    ],
    "pygal._compat.to_unicode": [],
    "...pygal.pygal.util.alter": ["<builtin>.str", "<builtin>.dict"],
    "...pygal.pygal.util.truncate": ["<builtin>.len", "pygal._compat.u"],
    "...pygal.pygal.util.cached_property.__init__": [],
    "...pygal.pygal.util.cached_property.__get__": [
        "<builtin>.setattr",
        "<builtin>.hasattr",
    ],
    "re.compile": [],
    "...pygal.pygal.util.minify_css": [
        "re.sub.replace.strip",
        "re.sub",
        "re.compile.findall",
        "re.sub.replace",
        "re.sub.strip",
    ],
    "re.compile.findall": [],
    "re.sub.replace": [],
    "re.sub": [],
    "re.sub.replace.strip": [],
    "re.sub.strip": [],
    "...pygal.pygal.util.compose": [],
    "...pygal.pygal.util.compose.<lambda1>": [],
    "...pygal.pygal.util.safe_enumerate": ["<builtin>.enumerate"],
    "...pygal.pygal.util.split_title": [
        "<builtin>.len",
        "...pygal.pygal.util.reverse_text_len",
    ],
    "...pygal.pygal.util.filter_kwargs": ["<builtin>.hasattr", "<builtin>.dict"],
    "...pygal.pygal.util.coord_project": ["math.cos", "math.sin"],
    "...pygal.pygal.util.coord_diff": [],
    "...pygal.pygal.util.coord_format": [],
    "...pygal.pygal.util.coord_dual": ["...pygal.pygal.util.coord_format"],
    "...pygal.pygal.util.coord_abs_project": [
        "...pygal.pygal.util.coord_diff",
        "...pygal.pygal.util.coord_format",
        "...pygal.pygal.util.coord_project",
    ],
    "...pygal.pygal.util.mergextend": ["<builtin>.list"],
    "...pygal.pygal.util.merge": [
        "...pygal.pygal.util.mergextend",
        "<builtin>.isinstance",
    ],
    "...pygal.pygal.graph.time": [],
    "...pygal.pygal.graph.time.datetime_to_timestamp": [
        "<builtin>.isinstance",
        "pygal._compat.timestamp",
    ],
    "...pygal.pygal.graph.time.datetime_to_time": ["<builtin>.isinstance"],
    "...pygal.pygal.graph.time.date_to_datetime": [
        "<builtin>.isinstance",
        "datetime.datetime.combine",
        "datetime.time",
    ],
    "datetime.datetime.combine": [],
    "...pygal.pygal.graph.time.time_to_datetime": [
        "datetime.date",
        "<builtin>.isinstance",
        "datetime.datetime.combine",
    ],
    "...pygal.pygal.graph.time.timedelta_to_seconds": ["<builtin>.isinstance"],
    "...pygal.pygal.graph.time.time_to_seconds": [
        "<builtin>.min",
        "<builtin>.max",
        "pygal._compat.is_str",
        "<builtin>.isinstance",
    ],
    "pygal._compat.is_str": [],
    "...pygal.pygal.graph.time.seconds_to_time": ["<builtin>.int", "datetime.time"],
    "...pygal.pygal.graph.time.DateTimeLine._x_format": [],
    "...pygal.pygal.graph.time.DateTimeLine._x_format.datetime_to_str": [
        "datetime.datetime.utcfromtimestamp",
        "pygal.graph.xy.XY.x_value_formatter",
    ],
    "pygal.graph.xy.XY.x_value_formatter": [],
    "...pygal.pygal.graph.time.DateLine._x_format": [],
    "...pygal.pygal.graph.time.DateLine._x_format.date_to_str": [
        "datetime.datetime.utcfromtimestamp",
        "pygal.graph.xy.XY.x_value_formatter",
    ],
    "...pygal.pygal.graph.time.TimeLine._x_format": [],
    "...pygal.pygal.graph.time.TimeLine._x_format.date_to_str": [
        "...pygal.pygal.graph.time.seconds_to_time",
        "pygal.graph.xy.XY.x_value_formatter",
    ],
    "...pygal.pygal.graph.time.TimeDeltaLine._x_format": [],
    "...pygal.pygal.graph.time.TimeDeltaLine._x_format.timedelta_to_str": [
        "datetime.timedelta",
        "pygal.graph.xy.XY.x_value_formatter",
    ],
    "...pygal.pygal.graph.gauge": [],
    "...pygal.pygal.graph.gauge.Gauge._set_view": [
        "pygal.view.PolarThetaLogView",
        "pygal.view.PolarThetaView",
    ],
    "pygal.view.PolarThetaLogView": [],
    "pygal.view.PolarThetaView": [],
    "...pygal.pygal.graph.gauge.Gauge.needle": [
        "pygal.graph.graph.Graph._static_value",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.alter",
        "pygal.util.decorate.node.metadata.get",
        "<builtin>.min",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.serie",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.graph.Graph._tooltip_data",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph._format",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "...pygal.pygal.graph.gauge.Gauge.needle.point",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate",
        "pygal.graph.graph.Graph._get_x_label",
        "pygal.graph.public.PublicApi.svg.serie",
        "<builtin>.enumerate",
    ],
    "pygal.etree.etree.fromstring.findall.serie": [],
    "pygal.util.decorate.node.serie": [],
    "pygal.graph.graph.Graph.svg.node.serie": [],
    "pygal.graph.graph.Graph.svg.serie": [],
    "pygal.graph.dual.Dual.svg.serie": [],
    "pygal.etree.etree.fromstring.findall.node.serie": [],
    "pygal.util.decorate.serie": [],
    "pygal.graph.public.PublicApi.svg.serie": [],
    "pygal.graph.dual.Dual.svg.node.serie": [],
    "pygal.graph.public.PublicApi.svg.node.serie": [],
    "...pygal.pygal.graph.gauge.Gauge.needle.point": [],
    "pygal.graph.graph.Graph._format": [],
    "pygal.etree.etree.fromstring.findall.node.serie.metadata.get": [],
    "pygal.graph.graph.Graph.secondary_series.metadata.get": [],
    "pygal.util.decorate.serie.metadata.get": [],
    "pygal.graph.public.PublicApi.svg.node.metadata.get": [],
    "pygal.util.decorate.node.metadata.get": [],
    "pygal.etree.etree.fromstring.findall.metadata.get": [],
    "pygal.graph.public.PublicApi.svg.serie.node.metadata.get": [],
    "pygal.etree.etree.fromstring.findall.node.metadata.get": [],
    "pygal.util.decorate.node.serie.metadata.get": [],
    "pygal.graph.dual.Dual.svg.serie.node.metadata.get": [],
    "pygal.graph.dual.Dual.svg.node.metadata.get": [],
    "pygal.graph.graph.Graph.svg.node.serie.metadata.get": [],
    "pygal.graph.graph.Graph.svg.metadata.get": [],
    "pygal.graph.dual.Dual.svg.serie.metadata.get": [],
    "pygal.util.decorate.serie.node.metadata.get": [],
    "pygal.graph.public.PublicApi.svg.serie.metadata.get": [],
    "pygal.graph.graph.Graph.svg.serie.metadata.get": [],
    "pygal.graph.dual.Dual.svg.metadata.get": [],
    "pygal.etree.etree.fromstring.findall.serie.node.metadata.get": [],
    "pygal.graph.graph.Graph.secondary_series.node.metadata.get": [],
    "pygal.graph.graph.Graph.svg.serie.node.metadata.get": [],
    "pygal.graph.graph.Graph.series.node.metadata.get": [],
    "pygal.graph.graph.Graph.svg.node.metadata.get": [],
    "pygal.graph.public.PublicApi.svg.metadata.get": [],
    "pygal.util.decorate.metadata.get": [],
    "pygal.graph.dual.Dual.svg.node.serie.metadata.get": [],
    "pygal.etree.etree.fromstring.findall.serie.metadata.get": [],
    "pygal.graph.graph.Graph.series.metadata.get": [],
    "pygal.graph.public.PublicApi.svg.node.serie.metadata.get": [],
    "pygal.graph.graph.Graph.secondary_series.node": [],
    "pygal.util.decorate.node": [],
    "pygal.etree.etree.fromstring.findall.serie.node": [],
    "pygal.graph.graph.Graph.series.node": [],
    "pygal.graph.dual.Dual.svg.node": [],
    "pygal.graph.public.PublicApi.svg.node": [],
    "pygal.etree.etree.fromstring.findall.node": [],
    "pygal.graph.public.PublicApi.svg.serie.node": [],
    "pygal.graph.graph.Graph.svg.node": [],
    "pygal.graph.graph.Graph.svg.serie.node": [],
    "pygal.util.decorate.serie.node": [],
    "pygal.graph.dual.Dual.svg.serie.node": [],
    "pygal.util.decorate": [],
    "pygal.util.alter": [],
    "pygal.graph.graph.Graph._get_x_label": [],
    "pygal.graph.graph.Graph._tooltip_data": [],
    "pygal.graph.graph.Graph._static_value": [],
    "...pygal.pygal.graph.gauge.Gauge._y_axis": [
        "pygal.etree.etree.fromstring.findall.serie.node.line",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.util.decorate.line",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.series.line",
        "pygal.graph.public.PublicApi.svg.serie.node.line",
        "pygal.etree.etree.fromstring.findall.line",
        "pygal.graph.graph.Graph.svg.serie.line",
        "pygal.etree.etree.fromstring.findall.node.line",
        "pygal.util.decorate.serie.line",
        "pygal.etree.etree.fromstring.findall.node.serie.line",
        "pygal.util.decorate.serie.node.line",
        "pygal.graph.graph.Graph.svg.serie.node.line",
        "pygal.graph.dual.Dual.svg.node.serie.line",
        "pygal.graph.graph.Graph.secondary_series.node.line",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.dual.Dual.svg.line",
        "pygal.graph.public.PublicApi.svg.node.serie.line",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.graph.graph.Graph._y_format",
        "pygal.util.decorate.node.line",
        "pygal.graph.dual.Dual.svg.serie.node.line",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph.secondary_series.line",
        "pygal.util.decorate.node.serie.line",
        "pygal.graph.graph.Graph.svg.node.serie.line",
        "pygal.graph.dual.Dual.svg.serie.line",
        "pygal.graph.graph.Graph.series.node.line",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.etree.etree.fromstring.findall.serie.line",
        "pygal.graph.public.PublicApi.svg.serie.line",
        "pygal.graph.dual.Dual.svg.node.line",
        "pygal.util.decorate.serie.node",
        "pygal.graph.public.PublicApi.svg.line",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.graph.public.PublicApi.svg.node.line",
        "<builtin>.len",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node.line",
        "pygal.graph.graph.Graph.svg.line",
        "<builtin>.enumerate",
    ],
    "pygal.etree.etree.fromstring.findall.serie.node.line": [],
    "pygal.util.decorate.line": [],
    "pygal.graph.graph.Graph.series.line": [],
    "pygal.graph.public.PublicApi.svg.serie.node.line": [],
    "pygal.etree.etree.fromstring.findall.line": [],
    "pygal.graph.graph.Graph.svg.serie.line": [],
    "pygal.etree.etree.fromstring.findall.node.line": [],
    "pygal.util.decorate.serie.line": [],
    "pygal.etree.etree.fromstring.findall.node.serie.line": [],
    "pygal.util.decorate.serie.node.line": [],
    "pygal.graph.graph.Graph.svg.serie.node.line": [],
    "pygal.graph.dual.Dual.svg.node.serie.line": [],
    "pygal.graph.graph.Graph.secondary_series.node.line": [],
    "pygal.graph.dual.Dual.svg.line": [],
    "pygal.graph.public.PublicApi.svg.node.serie.line": [],
    "pygal.util.decorate.node.line": [],
    "pygal.graph.dual.Dual.svg.serie.node.line": [],
    "pygal.graph.graph.Graph.secondary_series.line": [],
    "pygal.util.decorate.node.serie.line": [],
    "pygal.graph.graph.Graph.svg.node.serie.line": [],
    "pygal.graph.dual.Dual.svg.serie.line": [],
    "pygal.graph.graph.Graph.series.node.line": [],
    "pygal.etree.etree.fromstring.findall.serie.line": [],
    "pygal.graph.public.PublicApi.svg.serie.line": [],
    "pygal.graph.dual.Dual.svg.node.line": [],
    "pygal.graph.public.PublicApi.svg.line": [],
    "pygal.graph.public.PublicApi.svg.node.line": [],
    "pygal.graph.graph.Graph.svg.node.line": [],
    "pygal.graph.graph.Graph.svg.line": [],
    "pygal.graph.graph.Graph._y_format": [],
    "...pygal.pygal.graph.gauge.Gauge._x_axis": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.gauge.Gauge._compute": [
        "pygal.graph.graph.Graph._box.set_polar_box"
    ],
    "pygal.graph.graph.Graph._box.set_polar_box": [],
    "...pygal.pygal.graph.gauge.Gauge._compute_x_labels": [],
    "...pygal.pygal.graph.gauge.Gauge._compute_y_labels": [
        "pygal.graph.graph.Graph._adapt",
        "pygal._compat.is_str",
        "<builtin>.min",
        "pygal.graph.graph.Graph._box.set_polar_box",
        "<builtin>.isinstance",
        "pygal.graph.graph.Graph._y_format",
        "<builtin>.zip",
        "<builtin>.max",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.util.compute_scale",
        "<builtin>.enumerate",
    ],
    "pygal.util.compute_scale": [],
    "pygal.graph.graph.Graph._adapt": [],
    "...pygal.pygal.graph.gauge.Gauge._plot": [
        "...pygal.pygal.graph.gauge.Gauge.needle"
    ],
    "...pygal.pygal.graph.public": [],
    "...pygal.pygal.graph.public.PublicApi.add": [
        "<builtin>.isinstance",
        "pygal._compat.is_list_like",
        "pygal.graph.base.BaseGraph.raw_series.append",
    ],
    "pygal._compat.is_list_like": [],
    "pygal.graph.base.BaseGraph.raw_series.append": [],
    "...pygal.pygal.graph.public.PublicApi.__call__": [
        "pygal.graph.base.BaseGraph.raw_series.append"
    ],
    "...pygal.pygal.graph.public.PublicApi.add_xml_filter": [
        "pygal.graph.base.BaseGraph.xml_filters.append"
    ],
    "pygal.graph.base.BaseGraph.xml_filters.append": [],
    "...pygal.pygal.graph.public.PublicApi.render": [
        "pygal.graph.base.BaseGraph.svg.render",
        "pygal.graph.base.BaseGraph.setup",
        "pygal.graph.base.BaseGraph.teardown",
    ],
    "pygal.graph.base.BaseGraph.setup": [],
    "pygal.graph.base.BaseGraph.svg.render": [],
    "pygal.graph.base.BaseGraph.teardown": [],
    "...pygal.pygal.graph.public.PublicApi.render_tree": [
        "pygal.graph.base.BaseGraph.setup",
        "pygal.graph.base.BaseGraph.xml_filters",
        "pygal.graph.base.BaseGraph.teardown",
    ],
    "pygal.graph.base.BaseGraph.xml_filters": [],
    "...pygal.pygal.graph.public.PublicApi.render_table": [
        "pygal.table.Table.render",
        "<builtin>.ImportError",
        "pygal.table.Table",
    ],
    "<builtin>.ImportError": [],
    "...pygal.pygal.graph.public.PublicApi.render_pyquery": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "pyquery.PyQuery",
    ],
    "...pygal.pygal.graph.public.PublicApi.render_in_browser": [
        "lxml.html.open_in_browser",
        "<builtin>.ImportError",
        "...pygal.pygal.graph.public.PublicApi.render_tree",
    ],
    "lxml.html.open_in_browser": [],
    "...pygal.pygal.graph.public.PublicApi.render_response": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "flask.Response",
    ],
    "flask.Response": [],
    "...pygal.pygal.graph.public.PublicApi.render_django_response": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "django.http.HttpResponse",
    ],
    "django.http.HttpResponse": [],
    "...pygal.pygal.graph.public.PublicApi.render_data_uri": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "base64.b64encode.decode",
        "base64.b64encode",
        "base64.b64encode.decode.replace",
    ],
    "base64.b64encode": [],
    "base64.b64encode.decode": [],
    "base64.b64encode.decode.replace": [],
    "...pygal.pygal.graph.public.PublicApi.render_to_file": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "io.open",
    ],
    "...pygal.pygal.graph.public.PublicApi.render_to_png": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "cairosvg.svg2png",
    ],
    "cairosvg.svg2png": [],
    "...pygal.pygal.graph.public.PublicApi.render_sparktext": [
        "<builtin>.min",
        "pygal._compat.u",
        "<builtin>.len",
        "<builtin>.max",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.int",
    ],
    "...pygal.pygal.graph.public.PublicApi.render_sparktext.<lambda1>": [
        "<builtin>.max"
    ],
    "...pygal.pygal.graph.public.PublicApi.render_sparkline": [
        "...pygal.pygal.graph.public.PublicApi.render",
        "<builtin>.dict",
    ],
    "...pygal.pygal.graph.horizontalstackedline": [],
    "...pygal.pygal.graph.horizontalstackedline.HorizontalStackedLine._plot": [
        "pygal.graph.horizontal.HorizontalGraph.line"
    ],
    "pygal.graph.horizontal.HorizontalGraph.line": [],
    "...pygal.pygal.graph.box": [],
    "...pygal.pygal.graph.box.Box._value_format": [
        "<builtin>.map",
        "<builtin>.tuple",
        "pygal.graph.graph.Graph._y_format",
    ],
    "...pygal.pygal.graph.box.Box._compute": [
        "...pygal.pygal.graph.box.Box._box_points",
        "<builtin>.max",
        "<builtin>.min",
        "<builtin>.range",
    ],
    "...pygal.pygal.graph.box.Box._box_points": [
        "bisect.bisect_right",
        "<builtin>.sorted",
        "<builtin>.len",
        "...pygal.pygal.graph.box.Box._box_points.median",
        "bisect.bisect_left",
        "...pygal.pygal.graph.box.Box._box_points.pstdev",
        "...pygal.pygal.graph.box.Box._box_points.stdev",
    ],
    "...pygal.pygal.graph.box.Box._plot": ["...pygal.pygal.graph.box.Box._boxf"],
    "...pygal.pygal.graph.box.Box._boxf": [
        "pygal.graph.graph.Graph._static_value",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.decorate.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.util.decorate.serie",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.graph.Graph._tooltip_data",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph._format",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "...pygal.pygal.graph.box.Box._draw_box",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.util.decorate",
        "pygal.graph.graph.Graph._get_x_label",
        "pygal.graph.public.PublicApi.svg.serie",
    ],
    "...pygal.pygal.graph.box.Box._len": [],
    "...pygal.pygal.graph.box.Box._draw_box": [
        "pygal.etree.etree.fromstring.findall.serie.node.line",
        "pygal.util.decorate.line",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.graph.Graph.series.line",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.node.line",
        "pygal.etree.etree.fromstring.findall.line",
        "pygal.graph.graph.Graph.svg.serie.line",
        "pygal.etree.etree.fromstring.findall.node.line",
        "pygal.util.alter",
        "pygal.etree.etree.fromstring.findall.node.serie.line",
        "pygal.util.decorate.serie.line",
        "pygal.util.decorate.serie.node.line",
        "pygal.graph.graph.Graph.svg.serie.node.line",
        "pygal.graph.dual.Dual.svg.node.serie.line",
        "pygal.graph.graph.Graph.secondary_series.node.line",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.dual.Dual.svg.line",
        "pygal.graph.public.PublicApi.svg.node.serie.line",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.node.line",
        "pygal.graph.dual.Dual.svg.serie.node.line",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph.secondary_series.line",
        "pygal.util.decorate.node.serie.line",
        "pygal.graph.graph.Graph.svg.node.serie.line",
        "pygal.graph.dual.Dual.svg.serie.line",
        "pygal.graph.graph.Graph.series.node.line",
        "pygal.etree.etree.fromstring.findall.serie.line",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.serie.line",
        "pygal.graph.dual.Dual.svg.node.line",
        "<builtin>.sum",
        "pygal.util.decorate.serie.node",
        "pygal.graph.public.PublicApi.svg.line",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.graph.public.PublicApi.svg.node.line",
        "<builtin>.len",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node.line",
        "pygal.graph.graph.Graph.svg.line",
        "<builtin>.enumerate",
    ],
    "<builtin>.sum": [],
    "...pygal.pygal.graph.box.Box._box_points.median": ["<builtin>.len"],
    "...pygal.pygal.graph.box.Box._box_points.mean": ["<builtin>.sum", "<builtin>.len"],
    "...pygal.pygal.graph.box.Box._box_points.stdev": [
        "<builtin>.sum",
        "<builtin>.len",
        "...pygal.pygal.graph.box.Box._box_points.mean",
    ],
    "...pygal.pygal.graph.box.Box._box_points.pstdev": [
        "<builtin>.sum",
        "<builtin>.len",
        "...pygal.pygal.graph.box.Box._box_points.mean",
    ],
    "bisect.bisect_left": [],
    "bisect.bisect_right": [],
    "...pygal.pygal.graph.xy": [],
    "...pygal.pygal.graph.xy.XY": ["pygal.util.cached_property"],
    "pygal.util.cached_property": [],
    "...pygal.pygal.graph.xy.XY.xvals": [],
    "...pygal.pygal.graph.xy.XY.yvals": [],
    "...pygal.pygal.graph.xy.XY._min": ["<builtin>.min"],
    "...pygal.pygal.graph.xy.XY._max": ["<builtin>.max"],
    "...pygal.pygal.graph.xy.XY._compute": [
        "<builtin>.min",
        "pygal.graph.line.Line._interpolate",
        "<builtin>.sorted",
        "<builtin>.filter",
        "<builtin>.zip",
        "functools.reduce",
        "<builtin>.max",
        "<builtin>.list",
        "<builtin>.getattr",
    ],
    "functools.reduce": [],
    "...pygal.pygal.graph.xy.XY._compute.<lambda1>": [],
    "<builtin>.filter": [],
    "...pygal.pygal.graph.xy.XY._compute.<lambda2>": [],
    "pygal.graph.line.Line._interpolate": [],
    "...pygal.pygal.graph.horizontal": [],
    "...pygal.pygal.graph.horizontal.HorizontalGraph.__init__": ["<builtin>.super"],
    "...pygal.pygal.graph.horizontal.HorizontalGraph._post_compute": [],
    "...pygal.pygal.graph.horizontal.HorizontalGraph._axes": ["<builtin>.super"],
    "...pygal.pygal.graph.horizontal.HorizontalGraph._set_view": [
        "pygal.view.HorizontalLogView",
        "pygal.view.HorizontalView",
    ],
    "pygal.view.HorizontalLogView": [],
    "pygal.view.HorizontalView": [],
    "...pygal.pygal.graph.horizontal.HorizontalGraph._get_x_label": ["<builtin>.len"],
    "...pygal.pygal.graph.pyramid": [],
    "...pygal.pygal.graph.pyramid.VerticalPyramid._value_format": [
        "<builtin>.super",
        "<builtin>.abs",
    ],
    "...pygal.pygal.graph.pyramid.VerticalPyramid._get_separated_values": [
        "<builtin>.list",
        "<builtin>.map",
        "<builtin>.enumerate",
        "<builtin>.zip",
    ],
    "...pygal.pygal.graph.pyramid.VerticalPyramid._compute_box": ["<builtin>.max"],
    "...pygal.pygal.graph.pyramid.VerticalPyramid._pre_compute_secondary": [
        "<builtin>.max"
    ],
    "...pygal.pygal.graph.pyramid.VerticalPyramid._bar": ["<builtin>.super"],
    "...pygal.pygal.graph.histogram": [],
    "...pygal.pygal.graph.histogram.Histogram": ["pygal.util.cached_property"],
    "...pygal.pygal.graph.histogram.Histogram._values": [],
    "...pygal.pygal.graph.histogram.Histogram._secondary_values": [],
    "...pygal.pygal.graph.histogram.Histogram.xvals": [],
    "...pygal.pygal.graph.histogram.Histogram.yvals": [],
    "...pygal.pygal.graph.histogram.Histogram._bar": [
        "pygal.graph.public.PublicApi.svg.serie.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.transposable_node",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.transposable_node",
        "pygal.graph.graph.Graph.svg.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.transposable_node",
        "pygal.util.alter",
        "pygal.util.decorate.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.transposable_node",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.serie.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.transposable_node",
        "pygal.graph.dual.Dual.view",
        "pygal.graph.graph.Graph.svg.transposable_node",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.node.transposable_node",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.public.PublicApi.svg.transposable_node",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.serie.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.serie.transposable_node",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.transposable_node",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.transposable_node",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "...pygal.pygal.graph.histogram.Histogram.view.y",
        "pygal.graph.graph.Graph.series.transposable_node",
        "pygal.graph.dual.Dual.svg.node.serie.transposable_node",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.transposable_node",
        "pygal.util.decorate.node.serie.transposable_node",
        "pygal.util.decorate.serie.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.node.transposable_node",
        "pygal.util.decorate.node.transposable_node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.transposable_node",
    ],
    "pygal.graph.dual.Dual.view": [],
    "...pygal.pygal.graph.histogram.Histogram.view.y": [],
    "pygal.graph.public.PublicApi.svg.serie.node.transposable_node": [],
    "pygal.graph.dual.Dual.svg.serie.transposable_node": [],
    "pygal.graph.public.PublicApi.svg.node.transposable_node": [],
    "pygal.graph.dual.Dual.svg.serie.node.transposable_node": [],
    "pygal.graph.graph.Graph.svg.node.transposable_node": [],
    "pygal.etree.etree.fromstring.findall.serie.transposable_node": [],
    "pygal.graph.graph.Graph.svg.serie.transposable_node": [],
    "pygal.util.decorate.serie.node.transposable_node": [],
    "pygal.graph.graph.Graph.svg.serie.node.transposable_node": [],
    "pygal.graph.graph.Graph.svg.transposable_node": [],
    "pygal.etree.etree.fromstring.findall.node.transposable_node": [],
    "pygal.graph.graph.Graph.series.node.transposable_node": [],
    "pygal.graph.public.PublicApi.svg.transposable_node": [],
    "pygal.etree.etree.fromstring.findall.node.serie.transposable_node": [],
    "pygal.graph.public.PublicApi.svg.node.serie.transposable_node": [],
    "pygal.graph.dual.Dual.svg.node.transposable_node": [],
    "pygal.etree.etree.fromstring.findall.transposable_node": [],
    "pygal.graph.public.PublicApi.svg.serie.transposable_node": [],
    "pygal.graph.graph.Graph.secondary_series.transposable_node": [],
    "pygal.graph.graph.Graph.series.transposable_node": [],
    "pygal.graph.dual.Dual.svg.node.serie.transposable_node": [],
    "pygal.graph.graph.Graph.svg.node.serie.transposable_node": [],
    "pygal.etree.etree.fromstring.findall.serie.node.transposable_node": [],
    "pygal.util.decorate.transposable_node": [],
    "pygal.util.decorate.serie.transposable_node": [],
    "pygal.graph.graph.Graph.secondary_series.node.transposable_node": [],
    "pygal.util.decorate.node.transposable_node": [],
    "pygal.graph.dual.Dual.svg.transposable_node": [],
    "pygal.util.decorate.node.serie.transposable_node": [],
    "...pygal.pygal.graph.histogram.Histogram.bar": [
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.public.PublicApi.svg",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.series",
        "pygal.graph.graph.Graph.svg",
        "pygal.graph.dual.Dual._format",
        "...pygal.pygal.graph.histogram.Histogram._bar",
        "pygal.graph.dual.Dual.svg",
        "pygal.util.decorate.node.metadata.get",
        "pygal.graph.dual.Dual._tooltip_and_print_values",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.util.decorate.serie",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.graph.Graph.secondary_series",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.etree.etree.fromstring.findall",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.util.decorate",
        "pygal.graph.public.PublicApi.svg.serie",
        "<builtin>.enumerate",
    ],
    "pygal.graph.public.PublicApi.svg": [],
    "pygal.graph.graph.Graph.series": [],
    "pygal.graph.graph.Graph.svg": [],
    "pygal.graph.dual.Dual.svg": [],
    "pygal.etree.etree.fromstring.findall": [],
    "pygal.graph.graph.Graph.secondary_series": [],
    "pygal.graph.dual.Dual._format": [],
    "pygal.graph.dual.Dual._tooltip_and_print_values": [],
    "...pygal.pygal.graph.histogram.Histogram._compute": [
        "<builtin>.max",
        "<builtin>.min",
    ],
    "...pygal.pygal.graph.horizontalstackedbar": [],
    "...pygal.pygal.graph.treemap": [],
    "...pygal.pygal.graph.treemap.Treemap._rect": [
        "pygal.graph.graph.Graph._format",
        "pygal.graph.graph.Graph._static_value",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph._get_x_label",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate",
        "pygal.util.alter",
        "pygal.graph.graph.Graph._tooltip_data",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.treemap.Treemap._binary_tree": [
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.decorate.node.serie",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "...pygal.pygal.graph.treemap.Treemap._rect",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.cut",
        "pygal.util.decorate.serie",
        "<builtin>.map",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "...pygal.pygal.graph.treemap.Treemap._binary_tree",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "<builtin>.sum",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "<builtin>.len",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "<builtin>.list",
        "pygal.graph.public.PublicApi.svg.serie",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.treemap.Treemap._binary_tree.<lambda1>": [],
    "...pygal.pygal.graph.treemap.Treemap._binary_tree.<lambda2>": [],
    "...pygal.pygal.graph.treemap.Treemap._compute_x_labels": [],
    "...pygal.pygal.graph.treemap.Treemap._compute_y_labels": [],
    "...pygal.pygal.graph.treemap.Treemap._plot": [
        "...pygal.pygal.graph.treemap.Treemap._binary_tree",
        "<builtin>.sum",
        "<builtin>.map",
    ],
    "...pygal.pygal.graph.treemap.Treemap._plot.<lambda1>": [],
    "...pygal.pygal.graph.line": [],
    "...pygal.pygal.graph.line.Line.__init__": ["<builtin>.super"],
    "...pygal.pygal.graph.line.Line": ["pygal.util.cached_property"],
    "...pygal.pygal.graph.line.Line._values": [],
    "...pygal.pygal.graph.line.Line._secondary_values": [],
    "...pygal.pygal.graph.line.Line._fill": [
        "<builtin>.max",
        "<builtin>.min",
        "<builtin>.len",
        "<builtin>.ValueError",
    ],
    "<builtin>.ValueError": [],
    "...pygal.pygal.graph.line.Line.line": [
        "pygal.graph.public.PublicApi.svg.serie.node.transposable_node",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.transposable_node",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.graph.graph.Graph.series.line",
        "pygal.etree.etree.fromstring.findall.line",
        "pygal.graph.graph.Graph.svg.serie.line",
        "pygal.etree.etree.fromstring.findall.node.line",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node.transposable_node",
        "pygal.graph.graph.Graph.series.node.transposable_node",
        "pygal.graph.graph.Graph._format",
        "pygal.etree.etree.fromstring.findall.transposable_node",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.line",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.util.decorate.node.transposable_node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node.line",
        "<builtin>.enumerate",
        "pygal.graph.graph.Graph.svg.serie",
        "...pygal.pygal.graph.line.Line._fill",
        "pygal.util.decorate.line",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.alter",
        "pygal.util.decorate.serie.line",
        "pygal.graph.graph.Graph._rescale",
        "pygal.etree.etree.fromstring.findall.node.serie.line",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.graph.graph.Graph.svg.serie.node.line",
        "pygal.graph.graph.Graph.secondary_series.node.line",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.transposable_node",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.line",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.dual.Dual.svg.node.transposable_node",
        "pygal.graph.dual.Dual.svg.serie.line",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.transposable_node",
        "pygal.graph.public.PublicApi.svg.serie.line",
        "pygal.util.decorate.serie.node",
        "pygal.etree.etree.fromstring.findall.serie.node.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.node.transposable_node",
        "pygal.util.decorate",
        "pygal.graph.dual.Dual.svg.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.transposable_node",
        "pygal.util.decorate.node.serie.transposable_node",
        "pygal.graph.graph.Graph._static_value",
        "pygal.graph.public.PublicApi.svg",
        "pygal.etree.etree.fromstring.findall.serie.node.line",
        "pygal.graph.graph.Graph.svg.node.transposable_node",
        "pygal.graph.graph.Graph.series",
        "pygal.graph.graph.Graph.svg",
        "pygal.graph.public.PublicApi.svg.serie.node.line",
        "pygal.graph.graph.Graph._confidence_interval",
        "pygal.graph.dual.Dual.svg",
        "pygal.graph.dual.Dual.svg.node.serie.line",
        "pygal.graph.graph.Graph.svg.transposable_node",
        "pygal.util.decorate.serie",
        "<builtin>.map",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.transposable_node",
        "pygal.etree.etree.fromstring.findall.node.serie.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.public.PublicApi.svg.node.serie.transposable_node",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.line",
        "pygal.graph.graph.Graph.series.node.line",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.etree.etree.fromstring.findall.serie.line",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.graph.Graph.series.transposable_node",
        "pygal.graph.dual.Dual.svg.node.line",
        "pygal.etree.etree.fromstring.findall",
        "pygal.util.decorate.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph._get_x_label",
        "<builtin>.list",
        "pygal.graph.public.PublicApi.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.public.PublicApi.svg.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.etree.etree.fromstring.findall.serie.transposable_node",
        "pygal.util.decorate.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.transposable_node",
        "pygal.util.decorate.serie.node.line",
        "pygal.util.decorate.serie.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.dual.Dual.svg.line",
        "pygal.graph.public.PublicApi.svg.node.serie.line",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.util.decorate.node.line",
        "pygal.graph.graph.Graph._tooltip_data",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.line",
        "pygal.util.decorate.node.serie.line",
        "pygal.graph.public.PublicApi.svg.serie.transposable_node",
        "pygal.graph.graph.Graph.svg.node.serie.transposable_node",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.public.PublicApi.svg.line",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.transposable_node",
        "<builtin>.len",
        "pygal.util.decorate.serie.transposable_node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.line",
    ],
    "pygal.graph.graph.Graph._rescale": [],
    "pygal.graph.graph.Graph._confidence_interval": [],
    "...pygal.pygal.graph.line.Line._compute": [
        "<builtin>.max",
        "<builtin>.min",
        "pygal.graph.graph.Graph._points",
        "<builtin>.range",
    ],
    "pygal.graph.graph.Graph._points": [],
    "...pygal.pygal.graph.line.Line._plot": ["...pygal.pygal.graph.line.Line.line"],
    "...pygal.pygal.graph.graph": [],
    "...pygal.pygal.graph.graph.Graph._decorate": [
        "...pygal.pygal.graph.graph.Graph._make_title",
        "...pygal.pygal.graph.graph.Graph._make_graph",
        "...pygal.pygal.graph.graph.Graph._axes",
        "...pygal.pygal.graph.graph.Graph._make_x_title",
        "...pygal.pygal.graph.graph.Graph._legend",
        "...pygal.pygal.graph.graph.Graph._make_y_title",
        "...pygal.pygal.graph.graph.Graph._set_view",
    ],
    "...pygal.pygal.graph.graph.Graph._set_view": [
        "pygal.view.LogView",
        "pygal.view.XYLogView",
    ],
    "...pygal.pygal.graph.graph.Graph._make_graph": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.public.PublicApi.__class__.__name__.lower",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.graph.Graph._axes": [
        "...pygal.pygal.graph.graph.Graph._x_axis",
        "...pygal.pygal.graph.graph.Graph._y_axis",
    ],
    "...pygal.pygal.graph.graph.Graph._legend": [
        "pygal.util.get_texts_box",
        "...pygal.pygal.stats.sqrt",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.util.rad",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "<builtin>.max",
        "pygal.util.truncate",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.cut",
        "pygal.util.reverse_text_len",
        "pygal.graph.dual.Dual.svg.serie.node",
        "<builtin>.isinstance",
        "pygal.graph.dual.Dual.svg.node",
        "math.cos",
        "math.ceil",
        "pygal.util.decorate.serie.node",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "...pygal.pygal.graph.graph.Graph._order",
        "pygal.graph.graph.Graph.series.node",
        "<builtin>.abs",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate",
    ],
    "...pygal.pygal.graph.graph.Graph._make_title": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.graph.Graph._make_x_title": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.graph.Graph._make_y_title": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.graph.Graph._y_axis": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "...pygal.pygal.graph.graph.Graph._y_format",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.graph.Graph._x_axis": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.util.truncate",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "<builtin>.len",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "<builtin>.max",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "...pygal.pygal.graph.graph.Graph._x_format",
        "pygal.util.decorate.serie.node",
        "pygal.util.reverse_text_len",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "pygal.view.LogView": [],
    "pygal.view.XYLogView": [],
    "pygal.graph.public.PublicApi.__class__.__name__.lower": [],
    "pygal.util.reverse_text_len": [],
    "...pygal.pygal.graph.graph.Graph._x_format": [],
    "...pygal.pygal.graph.graph.Graph._y_format": [],
    "...pygal.pygal.stats.sqrt": [],
    "...pygal.pygal.graph.graph.Graph._order": ["<builtin>.len"],
    "pygal.util.get_texts_box": [],
    "pygal.util.rad": [],
    "...pygal.pygal.graph.graph.Graph._interpolate": [
        "<builtin>.len",
        "<builtin>.range",
        "<builtin>.list",
    ],
    "...pygal.pygal.graph.graph.Graph._rescale": [],
    "...pygal.pygal.graph.graph.Graph._tooltip_data": [
        "pygal._compat.to_str",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.graph.Graph._static_value": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.graph.Graph._points": [
        "...pygal.pygal.graph.graph.Graph._interpolate",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.graph.Graph._compute_secondary": [
        "<builtin>.min",
        "<builtin>.len",
        "...pygal.pygal.graph.graph.Graph._y_format",
        "<builtin>.abs",
        "<builtin>.zip",
        "<builtin>.max",
        "<builtin>.list",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.graph.Graph._post_compute": [],
    "...pygal.pygal.graph.graph.Graph._get_x_label": ["<builtin>.len"],
    "...pygal.pygal.graph.graph.Graph.all_series": [],
    "...pygal.pygal.graph.graph.Graph._default_formatter": [],
    "...pygal.pygal.graph.graph.Graph._value_format": [
        "...pygal.pygal.graph.graph.Graph._y_format"
    ],
    "...pygal.pygal.graph.graph.Graph._format": ["pygal.util.filter_kwargs"],
    "pygal.util.filter_kwargs": [],
    "...pygal.pygal.graph.graph.Graph._serie_format": ["pygal.util.filter_kwargs"],
    "...pygal.pygal.graph.graph.Graph._compute": [],
    "...pygal.pygal.graph.graph.Graph._compute_margin": [
        "pygal.util.get_texts_box",
        "...pygal.pygal.stats.sqrt",
        "<builtin>.len",
        "<builtin>.isinstance",
        "...pygal.pygal.graph.graph.Graph._order",
        "math.sin",
        "<builtin>.abs",
        "pygal.util.rad",
        "<builtin>.max",
        "math.cos",
        "<builtin>.round",
        "pygal.util.cut",
        "<builtin>.map",
        "math.ceil",
        "pygal.util.split_title",
        "pygal.util.get_text_box",
    ],
    "...pygal.pygal.graph.graph.Graph._compute_margin.<lambda1>": [
        "pygal.util.truncate"
    ],
    "...pygal.pygal.graph.graph.Graph._compute_margin.<lambda2>": [
        "pygal.util.truncate"
    ],
    "pygal.util.split_title": [],
    "pygal.util.get_text_box": [],
    "...pygal.pygal.graph.graph.Graph._confidence_interval": [
        "pygal.graph.graph.Graph.svg.serie.node.confidence_interval",
        "pygal.graph.graph.Graph.svg.serie.confidence_interval",
        "pygal.graph.dual.Dual.svg.confidence_interval",
        "pygal.graph.graph.Graph.svg.node.confidence_interval",
        "pygal.graph.public.PublicApi.svg.serie.confidence_interval",
        "pygal.graph.graph.Graph.svg.node.serie.confidence_interval",
        "pygal.graph.graph.Graph.series.node.confidence_interval",
        "pygal.util.decorate.serie.node.confidence_interval",
        "pygal.graph.graph.Graph.secondary_series.node.confidence_interval",
        "pygal.graph.dual.Dual.svg.node.confidence_interval",
        "pygal.graph.public.PublicApi.svg.node.serie.confidence_interval",
        "pygal.etree.etree.fromstring.findall.node.serie.confidence_interval",
        "pygal.graph.dual.Dual.svg.serie.node.confidence_interval",
        "pygal.graph.graph.Graph.series.confidence_interval",
        "pygal.etree.etree.fromstring.findall.node.confidence_interval",
        "pygal.graph.dual.Dual.svg.serie.confidence_interval",
        "pygal.util.decorate.serie.confidence_interval",
        "pygal.graph.dual.Dual.svg.node.serie.confidence_interval",
        "pygal.etree.etree.fromstring.findall.serie.confidence_interval",
        "pygal.graph.public.PublicApi.svg.serie.node.confidence_interval",
        "pygal.etree.etree.fromstring.findall.serie.node.confidence_interval",
        "pygal.graph.graph.Graph.secondary_series.confidence_interval",
        "pygal.etree.etree.fromstring.findall.confidence_interval",
        "pygal.graph.public.PublicApi.svg.confidence_interval",
        "pygal.util.decorate.node.serie.confidence_interval",
        "pygal.util.decorate.node.confidence_interval",
        "pygal.graph.graph.Graph.svg.confidence_interval",
        "pygal.graph.public.PublicApi.svg.node.confidence_interval",
        "pygal.util.decorate.confidence_interval",
        "<builtin>.getattr",
    ],
    "pygal.graph.graph.Graph.svg.serie.node.confidence_interval": [],
    "pygal.graph.graph.Graph.svg.serie.confidence_interval": [],
    "pygal.graph.dual.Dual.svg.confidence_interval": [],
    "pygal.graph.graph.Graph.svg.node.confidence_interval": [],
    "pygal.graph.public.PublicApi.svg.serie.confidence_interval": [],
    "pygal.graph.graph.Graph.svg.node.serie.confidence_interval": [],
    "pygal.graph.graph.Graph.series.node.confidence_interval": [],
    "pygal.util.decorate.serie.node.confidence_interval": [],
    "pygal.graph.graph.Graph.secondary_series.node.confidence_interval": [],
    "pygal.graph.dual.Dual.svg.node.confidence_interval": [],
    "pygal.graph.public.PublicApi.svg.node.serie.confidence_interval": [],
    "pygal.etree.etree.fromstring.findall.node.serie.confidence_interval": [],
    "pygal.graph.dual.Dual.svg.serie.node.confidence_interval": [],
    "pygal.graph.graph.Graph.series.confidence_interval": [],
    "pygal.etree.etree.fromstring.findall.node.confidence_interval": [],
    "pygal.graph.dual.Dual.svg.serie.confidence_interval": [],
    "pygal.util.decorate.serie.confidence_interval": [],
    "pygal.graph.dual.Dual.svg.node.serie.confidence_interval": [],
    "pygal.etree.etree.fromstring.findall.serie.confidence_interval": [],
    "pygal.graph.public.PublicApi.svg.serie.node.confidence_interval": [],
    "pygal.etree.etree.fromstring.findall.serie.node.confidence_interval": [],
    "pygal.graph.graph.Graph.secondary_series.confidence_interval": [],
    "pygal.etree.etree.fromstring.findall.confidence_interval": [],
    "pygal.graph.public.PublicApi.svg.confidence_interval": [],
    "pygal.util.decorate.node.serie.confidence_interval": [],
    "pygal.util.decorate.node.confidence_interval": [],
    "pygal.graph.graph.Graph.svg.confidence_interval": [],
    "pygal.graph.public.PublicApi.svg.node.confidence_interval": [],
    "pygal.util.decorate.confidence_interval": [],
    "...pygal.pygal.graph.graph.Graph": ["pygal.util.cached_property"],
    "...pygal.pygal.graph.graph.Graph._legends": [],
    "...pygal.pygal.graph.graph.Graph._secondary_legends": [],
    "...pygal.pygal.graph.graph.Graph._values": [],
    "...pygal.pygal.graph.graph.Graph._secondary_values": [],
    "...pygal.pygal.graph.graph.Graph._len": ["<builtin>.max", "<builtin>.len"],
    "...pygal.pygal.graph.graph.Graph._secondary_min": ["<builtin>.min"],
    "...pygal.pygal.graph.graph.Graph._min": ["<builtin>.min"],
    "...pygal.pygal.graph.graph.Graph._max": ["<builtin>.max"],
    "...pygal.pygal.graph.graph.Graph._secondary_max": ["<builtin>.max"],
    "...pygal.pygal.graph.graph.Graph._x_label_format_if_value": [
        "pygal._compat.is_str",
        "...pygal.pygal.graph.graph.Graph._x_format",
    ],
    "...pygal.pygal.graph.graph.Graph._compute_x_labels": [
        "<builtin>.list",
        "<builtin>.map",
        "<builtin>.zip",
    ],
    "...pygal.pygal.graph.graph.Graph._compute_x_labels_major": [
        "<builtin>.range",
        "<builtin>.len",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.int",
    ],
    "...pygal.pygal.graph.graph.Graph._compute_y_labels": [
        "pygal._compat.is_str",
        "<builtin>.min",
        "...pygal.pygal.graph.graph.Graph._y_format",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.zip",
        "<builtin>.max",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.graph.public.PublicApi._adapt",
        "pygal.util.compute_scale",
        "<builtin>.enumerate",
    ],
    "pygal.graph.public.PublicApi._adapt": [],
    "...pygal.pygal.graph.graph.Graph._compute_y_labels_major": [
        "pygal.util.majorize",
        "<builtin>.range",
        "<builtin>.len",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.int",
    ],
    "...pygal.pygal.graph.graph.Graph.add_squares": [
        "pygal.graph.graph.Graph.secondary_series.node",
        "<builtin>.range",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.serie.node",
    ],
    "...pygal.pygal.graph.graph.Graph._draw": [
        "pygal.util.decorate.serie.node.draw_no_data",
        "pygal.graph.public.PublicApi.svg.node.serie.draw_no_data",
        "pygal.graph.graph.Graph.svg.node.serie.draw_no_data",
        "pygal.etree.etree.fromstring.findall.serie.node.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._compute_x_labels",
        "pygal.util.decorate.node.draw_no_data",
        "pygal.graph.dual.Dual.svg.serie.draw_no_data",
        "pygal.graph.graph.Graph.secondary_series.draw_no_data",
        "pygal.etree.etree.fromstring.findall.serie.draw_no_data",
        "pygal.graph.graph.Graph.svg.serie.draw_no_data",
        "pygal.graph.dual.Dual.svg.node.draw_no_data",
        "pygal.etree.etree.fromstring.findall.node.draw_no_data",
        "pygal.util.decorate.node.serie.draw_no_data",
        "pygal.graph.public.PublicApi._plot",
        "...pygal.pygal.graph.graph.Graph._compute_y_labels_major",
        "pygal.graph.dual.Dual.svg.serie.node.draw_no_data",
        "pygal.etree.etree.fromstring.findall.node.serie.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._has_data",
        "pygal.graph.public.PublicApi.svg.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._compute_y_labels",
        "pygal.graph.graph.Graph.secondary_series.node.draw_no_data",
        "pygal.util.decorate.serie.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._decorate",
        "pygal.graph.dual.Dual.svg.node.serie.draw_no_data",
        "pygal.graph.dual.Dual.svg.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._post_compute",
        "pygal.graph.public.PublicApi.svg.node.draw_no_data",
        "pygal.etree.etree.fromstring.findall.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._compute_margin",
        "pygal.graph.graph.Graph.svg.draw_no_data",
        "pygal.graph.public.PublicApi.svg.serie.node.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._compute_x_labels_major",
        "pygal.graph.graph.Graph.svg.serie.node.draw_no_data",
        "...pygal.pygal.graph.graph.Graph._compute_secondary",
        "...pygal.pygal.graph.graph.Graph._compute",
        "pygal.graph.graph.Graph.series.node.draw_no_data",
        "pygal.graph.public.PublicApi.svg.serie.draw_no_data",
        "pygal.graph.graph.Graph.svg.node.draw_no_data",
        "pygal.graph.graph.Graph.series.draw_no_data",
        "pygal.util.decorate.draw_no_data",
    ],
    "...pygal.pygal.graph.graph.Graph._has_data": [
        "<builtin>.len",
        "<builtin>.any",
        "pygal._compat.is_list_like",
    ],
    "pygal.graph.public.PublicApi._plot": [],
    "pygal.util.decorate.serie.node.draw_no_data": [],
    "pygal.graph.public.PublicApi.svg.node.serie.draw_no_data": [],
    "pygal.graph.graph.Graph.svg.node.serie.draw_no_data": [],
    "pygal.etree.etree.fromstring.findall.serie.node.draw_no_data": [],
    "pygal.util.decorate.node.draw_no_data": [],
    "pygal.graph.dual.Dual.svg.serie.draw_no_data": [],
    "pygal.graph.graph.Graph.secondary_series.draw_no_data": [],
    "pygal.etree.etree.fromstring.findall.serie.draw_no_data": [],
    "pygal.graph.graph.Graph.svg.serie.draw_no_data": [],
    "pygal.graph.dual.Dual.svg.node.draw_no_data": [],
    "pygal.etree.etree.fromstring.findall.node.draw_no_data": [],
    "pygal.util.decorate.node.serie.draw_no_data": [],
    "pygal.graph.dual.Dual.svg.serie.node.draw_no_data": [],
    "pygal.etree.etree.fromstring.findall.node.serie.draw_no_data": [],
    "pygal.graph.public.PublicApi.svg.draw_no_data": [],
    "pygal.graph.graph.Graph.secondary_series.node.draw_no_data": [],
    "pygal.util.decorate.serie.draw_no_data": [],
    "pygal.graph.dual.Dual.svg.node.serie.draw_no_data": [],
    "pygal.graph.dual.Dual.svg.draw_no_data": [],
    "pygal.graph.public.PublicApi.svg.node.draw_no_data": [],
    "pygal.etree.etree.fromstring.findall.draw_no_data": [],
    "pygal.graph.graph.Graph.svg.draw_no_data": [],
    "pygal.graph.public.PublicApi.svg.serie.node.draw_no_data": [],
    "pygal.graph.graph.Graph.svg.serie.node.draw_no_data": [],
    "pygal.graph.graph.Graph.series.node.draw_no_data": [],
    "pygal.graph.public.PublicApi.svg.serie.draw_no_data": [],
    "pygal.graph.graph.Graph.svg.node.draw_no_data": [],
    "pygal.graph.graph.Graph.series.draw_no_data": [],
    "pygal.util.decorate.draw_no_data": [],
    "<builtin>.any": [],
    "...pygal.pygal.graph.radar": [],
    "...pygal.pygal.graph.radar.Radar.__init__": ["<builtin>.super"],
    "...pygal.pygal.graph.radar.Radar._fill": [],
    "...pygal.pygal.graph.radar.Radar": ["pygal.util.cached_property"],
    "...pygal.pygal.graph.radar.Radar._values": ["<builtin>.super"],
    "...pygal.pygal.graph.radar.Radar._set_view": [
        "pygal.view.PolarLogView",
        "pygal.view.PolarView",
    ],
    "pygal.view.PolarLogView": [],
    "pygal.view.PolarView": [],
    "...pygal.pygal.graph.radar.Radar._x_axis": [
        "pygal.graph.line.Line._x_format",
        "pygal.util.truncate",
        "pygal.graph.line.Line.svg.node",
        "math.cos",
        "...pygal.pygal.graph.radar.Radar._x_axis.<lambda1>",
        "pygal.util.deg",
    ],
    "pygal.graph.line.Line.svg.node": [],
    "...pygal.pygal.graph.radar.Radar._x_axis.<lambda1>": [],
    "pygal.graph.line.Line._x_format": [],
    "...pygal.pygal.graph.radar.Radar._y_axis": [
        "<builtin>.reversed",
        "pygal.graph.line.Line._y_format",
        "pygal.graph.line.Line.svg.node",
        "...pygal.pygal.graph.radar.Radar.svg.line",
    ],
    "...pygal.pygal.graph.radar.Radar.svg.line": [],
    "pygal.graph.line.Line._y_format": [],
    "...pygal.pygal.graph.radar.Radar._compute": [
        "<builtin>.range",
        "pygal.graph.line.Line._interpolate",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.graph.line.Line._box.set_polar_box",
        "<builtin>.enumerate",
    ],
    "pygal.graph.line.Line._box.set_polar_box": [],
    "...pygal.pygal.graph.radar.Radar._compute_y_labels": [
        "pygal._compat.is_str",
        "<builtin>.min",
        "pygal.graph.line.Line._box.set_polar_box",
        "<builtin>.isinstance",
        "<builtin>.zip",
        "pygal.graph.line.Line._adapt",
        "pygal.graph.line.Line._y_format",
        "<builtin>.max",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.util.compute_scale",
        "<builtin>.enumerate",
    ],
    "pygal.graph.line.Line._adapt": [],
    "...pygal.pygal.graph": [],
    "...pygal.pygal.graph.dual": [],
    "...pygal.pygal.graph.dual.Dual._value_format": [
        "pygal.graph.graph.Graph._y_format",
        "pygal.graph.graph.Graph._x_format",
    ],
    "pygal.graph.graph.Graph._x_format": [],
    "...pygal.pygal.graph.dual.Dual._compute_x_labels": [
        "pygal.graph.graph.Graph._x_adapt",
        "pygal._compat.is_str",
        "<builtin>.min",
        "pygal.graph.graph.Graph._x_format",
        "<builtin>.len",
        "<builtin>.isinstance",
        "<builtin>.zip",
        "<builtin>.max",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "pygal.util.compute_scale",
        "<builtin>.enumerate",
    ],
    "pygal.graph.graph.Graph._x_adapt": [],
    "...pygal.pygal.graph.dual.Dual._compute_x_labels_major": [
        "<builtin>.super",
        "<builtin>.map",
        "<builtin>.list",
    ],
    "...pygal.pygal.graph.dual.Dual._get_x_label": [],
    "...pygal.pygal.graph.pie": [],
    "...pygal.pygal.graph.pie.Pie.slice": [
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.util.decorate.serie.node.slice",
        "pygal.graph.graph.Graph.secondary_series.node.slice",
        "pygal.util.decorate.serie.slice",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.graph.graph.Graph._format",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node",
        "<builtin>.enumerate",
        "pygal.graph.dual.Dual.svg.node.slice",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.slice",
        "pygal.graph.public.PublicApi.svg.node.serie.slice",
        "pygal.util.alter",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.etree.etree.fromstring.findall.serie.node.slice",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.util.decorate.node.serie.slice",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "<builtin>.sum",
        "pygal.util.decorate.serie.node",
        "pygal.graph.graph.Graph.svg.node.slice",
        "pygal.etree.etree.fromstring.findall.serie.slice",
        "pygal.util.decorate",
        "pygal.graph.public.PublicApi.svg.slice",
        "pygal.graph.graph.Graph.svg.slice",
        "pygal.util.decorate.node.slice",
        "pygal.graph.dual.Dual.svg.node.serie.slice",
        "pygal.util.decorate.serie",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.util.decorate.slice",
        "pygal.graph.graph.Graph.svg.serie.node.slice",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.graph.Graph.series.slice",
        "pygal.util.decorate.node",
        "pygal.graph.dual.Dual.svg.serie.slice",
        "pygal.graph.public.PublicApi.svg.serie.node.slice",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.node.slice",
        "pygal.graph.public.PublicApi.svg.serie",
        "pygal.graph.graph.Graph.svg.node.serie.slice",
        "pygal.graph.graph.Graph._serie_format",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.util.decorate.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.slice",
        "<builtin>.min",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.svg.serie.slice",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.slice",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.slice",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.public.PublicApi.svg.node.slice",
        "pygal.graph.dual.Dual.svg.serie.node.slice",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.etree.etree.fromstring.findall.node.slice",
        "pygal.etree.etree.fromstring.findall.node.serie.slice",
    ],
    "pygal.graph.public.PublicApi.svg.slice": [],
    "pygal.graph.public.PublicApi.svg.serie.slice": [],
    "pygal.graph.public.PublicApi.svg.node.serie.slice": [],
    "pygal.graph.graph.Graph.svg.slice": [],
    "pygal.etree.etree.fromstring.findall.slice": [],
    "pygal.etree.etree.fromstring.findall.serie.node.slice": [],
    "pygal.util.decorate.node.slice": [],
    "pygal.util.decorate.serie.node.slice": [],
    "pygal.graph.graph.Graph.secondary_series.node.slice": [],
    "pygal.graph.graph.Graph.svg.serie.slice": [],
    "pygal.util.decorate.serie.slice": [],
    "pygal.graph.dual.Dual.svg.node.serie.slice": [],
    "pygal.util.decorate.node.serie.slice": [],
    "pygal.graph.graph.Graph.secondary_series.slice": [],
    "pygal.graph.dual.Dual.svg.slice": [],
    "pygal.util.decorate.slice": [],
    "pygal.graph.graph.Graph.svg.serie.node.slice": [],
    "pygal.graph.graph.Graph.series.slice": [],
    "pygal.graph.public.PublicApi.svg.node.slice": [],
    "pygal.graph.graph.Graph.svg.node.slice": [],
    "pygal.graph.dual.Dual.svg.serie.node.slice": [],
    "pygal.graph.dual.Dual.svg.serie.slice": [],
    "pygal.graph.public.PublicApi.svg.serie.node.slice": [],
    "pygal.etree.etree.fromstring.findall.serie.slice": [],
    "pygal.graph.graph.Graph.series.node.slice": [],
    "pygal.etree.etree.fromstring.findall.node.slice": [],
    "pygal.etree.etree.fromstring.findall.node.serie.slice": [],
    "pygal.graph.graph.Graph.svg.node.serie.slice": [],
    "pygal.graph.dual.Dual.svg.node.slice": [],
    "pygal.graph.graph.Graph._serie_format": [],
    "...pygal.pygal.graph.pie.Pie._compute_x_labels": [],
    "...pygal.pygal.graph.pie.Pie._compute_y_labels": [],
    "...pygal.pygal.graph.pie.Pie._plot": [
        "<builtin>.sum",
        "...pygal.pygal.graph.pie.Pie.slice",
        "<builtin>.map",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.pie.Pie._plot.<lambda1>": [],
    "...pygal.pygal.graph.stackedline": [],
    "...pygal.pygal.graph.stackedline.StackedLine.__init__": ["<builtin>.super"],
    "...pygal.pygal.graph.stackedline.StackedLine._value_format": [
        "pygal.graph.line.Line.series.index",
        "pygal.graph.line.Line._y_format",
        "<builtin>.super",
    ],
    "pygal.graph.line.Line.series.index": [],
    "...pygal.pygal.graph.stackedline.StackedLine._fill": [
        "<builtin>.reversed",
        "<builtin>.super",
        "<builtin>.list",
    ],
    "...pygal.pygal.graph.stackedline.StackedLine._points": [
        "pygal.graph.line.Line._interpolate",
        "<builtin>.zip",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.stackedline.StackedLine._plot": [
        "pygal.graph.line.Line.line"
    ],
    "pygal.graph.line.Line.line": [],
    "...pygal.pygal.graph.map": [],
    "...pygal.pygal.graph.map.BaseMap": ["pygal.util.cached_property"],
    "...pygal.pygal.graph.map.BaseMap._values": [],
    "...pygal.pygal.graph.map.BaseMap.enumerate_values": ["<builtin>.enumerate"],
    "...pygal.pygal.graph.map.BaseMap.adapt_code": [],
    "...pygal.pygal.graph.map.BaseMap._value_format": [
        "pygal.graph.graph.Graph.area_names.get",
        "...pygal.pygal.graph.map.BaseMap.adapt_code",
        "pygal.graph.graph.Graph._y_format",
    ],
    "pygal.graph.graph.Graph.area_names.get": [],
    "...pygal.pygal.graph.map.BaseMap._plot": [
        "pygal.graph.dual.Dual.svg.remove",
        "pygal.etree.etree.fromstring.findall.node.serie.append",
        "pygal.graph.graph.Graph.secondary_series.node.get.split",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.graph.Graph.svg.remove",
        "pygal.etree.etree.fromstring.insert",
        "pygal.graph.graph.Graph.secondary_series.get.split",
        "pygal.graph.graph.Graph.secondary_series.node.get",
        "pygal.graph.graph.Graph.svg.get",
        "pygal.graph.public.PublicApi.svg.serie.set",
        "pygal.graph.graph.Graph.svg.set",
        "pygal.graph.graph.Graph.series.node.get.split",
        "pygal.util.decorate.node.append",
        "pygal.graph.dual.Dual.svg.node.get",
        "pygal.graph.public.PublicApi.svg.node.serie.get.split.append",
        "pygal.graph.dual.Dual.svg.node.serie.get.split",
        "pygal.graph.dual.Dual.svg.serie.get.split.append",
        "pygal.util.decorate.serie.set",
        "pygal.etree.etree.fromstring.findall.serie.get.split",
        "pygal.etree.etree.fromstring.findall.node.get.split",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.graph.public.PublicApi.svg.serie.node.get",
        "pygal.graph.graph.Graph.svg.get.split",
        "pygal.graph.public.PublicApi.svg.append",
        "pygal.etree.etree.fromstring.findall.serie.node.append",
        "pygal.graph.public.PublicApi.svg.get.split.append",
        "pygal.util.decorate.node.remove",
        "pygal.graph.graph.Graph._format",
        "pygal.util.decorate.serie.get.split.append",
        "pygal.graph.public.PublicApi.svg.set",
        "pygal.graph.dual.Dual.svg.serie.node.remove",
        "pygal.graph.graph.Graph.svg.node.get.split.append",
        "pygal.graph.public.PublicApi.svg.node.get.split.append",
        "pygal.etree.etree.fromstring.findall.node.append",
        "pygal.graph.graph.Graph.svg.node.get.split",
        "pygal.etree.etree.fromstring.findall.get.split.append",
        "pygal.graph.graph.Graph.series.append",
        "pygal.graph.graph.Graph.svg.serie.append",
        "pygal.graph.public.PublicApi.svg.serie.node.append",
        "pygal.util.decorate.serie.get.split",
        "pygal.etree.etree.fromstring.findall.append",
        "pygal.graph.dual.Dual.svg.node.serie.append",
        "pygal.graph.public.PublicApi.svg.serie.node.get.split.append",
        "pygal.graph.dual.Dual.svg.node.get.split",
        "pygal.graph.public.PublicApi.svg.serie.get.split",
        "pygal.etree.etree.fromstring.findall.serie.remove",
        "pygal.graph.graph.Graph.secondary_series.append",
        "pygal.util.decorate.get.split",
        "pygal.graph.graph.Graph.series.node.get.split.append",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.etree.etree.fromstring.findall.node.get",
        "pygal.graph.dual.Dual.svg.serie.append",
        "pygal.graph.public.PublicApi.svg.remove",
        "pygal.graph.graph.Graph.series.node.remove",
        "<builtin>.enumerate",
        "pygal.graph.dual.Dual.svg.serie.remove",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.graph.graph.Graph.svg.node.serie.get.split.append",
        "pygal.graph.graph.Graph.svg.append",
        "pygal.etree.etree.fromstring.findall.get.split",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.alter",
        "pygal.graph.public.PublicApi.svg.serie.node.get.split",
        "pygal.util.decorate.serie.node.get",
        "pygal.graph.public.PublicApi.svg.node.serie.get",
        "pygal.util.decorate.node.set",
        "pygal.util.decorate.node.serie",
        "pygal.etree.etree.fromstring.findall.node.serie.get.split.append",
        "pygal.graph.public.PublicApi.svg.node.remove",
        "pygal.graph.public.PublicApi.svg.node.append",
        "pygal.graph.dual.Dual.svg.serie.node.get.split.append",
        "pygal.graph.graph.Graph.secondary_series.node.set",
        "...pygal.pygal.graph.map.BaseMap.enumerate_values",
        "pygal.util.decorate.serie.node.append",
        "pygal.util.cut",
        "pygal.graph.graph.Graph.svg.serie.set",
        "pygal.graph.graph.Graph.svg.serie.node.get",
        "pygal.graph.graph.Graph.secondary_series",
        "pygal.etree.etree.fromstring.findall.get",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.node.set",
        "pygal.graph.dual.Dual.svg.get.split",
        "pygal.util.decorate.serie.get",
        "pygal.graph.graph.Graph.secondary_series.set",
        "pygal.graph.public.PublicApi.svg.node.set",
        "pygal.graph.dual.Dual.svg.node.remove",
        "pygal.graph.graph.Graph.svg.node.serie.get",
        "pygal.graph.public.PublicApi.svg.serie.remove",
        "pygal.graph.public.PublicApi.svg.serie.node.remove",
        "pygal.util.decorate.serie.node.set",
        "pygal.etree.etree.fromstring.findall.node.remove",
        "pygal.util.decorate.serie.node",
        "pygal.util.decorate.append",
        "pygal.util.decorate.get.split.append",
        "pygal.graph.dual.Dual.svg.serie.node.set",
        "pygal.graph.graph.Graph.series.node.append",
        "pygal.util.decorate.node.serie.get.split",
        "pygal.graph.graph.Graph.svg.node.append",
        "pygal.graph.dual.Dual.svg.serie.get",
        "pygal.graph.public.PublicApi.svg.serie.get.split.append",
        "pygal.util.decorate",
        "pygal.graph.graph.Graph.svg.serie.get",
        "pygal.graph.public.PublicApi.svg.node.serie.remove",
        "pygal.graph.graph.Graph.svg.node.serie.get.split",
        "pygal.graph.public.PublicApi.svg",
        "pygal.graph.dual.Dual.svg.node.set",
        "pygal.graph.dual.Dual.svg.serie.node.get",
        "pygal.graph.graph.Graph.series.node.set",
        "pygal.graph.dual.Dual.svg.node.serie.set",
        "<builtin>.max",
        "pygal.etree.etree.fromstring.findall.serie.get.split.append",
        "pygal.graph.graph.Graph.series",
        "pygal.graph.graph.Graph.svg",
        "pygal.graph.graph.Graph.series.node.get",
        "pygal.graph.graph.Graph.series.get.split.append",
        "pygal.graph.dual.Dual.svg",
        "pygal.etree.etree.fromstring.findall.serie.append",
        "pygal.graph.dual.Dual.svg.node.serie.get",
        "pygal.graph.graph.Graph.secondary_series.get",
        "pygal.graph.public.PublicApi.svg.get.split",
        "pygal.graph.graph.Graph.svg.serie.node.get.split",
        "pygal.util.decorate.serie",
        "pygal.graph.dual.Dual.svg.serie.set",
        "pygal.etree.etree.fromstring.findall.node.serie.get.split",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.graph.Graph.series.remove",
        "pygal.util.decorate.serie.append",
        "pygal.graph.dual.Dual.svg.serie.get.split",
        "pygal.etree.etree.fromstring.findall.node.serie.remove",
        "pygal.etree.etree.fromstring.set",
        "pygal.util.decorate.node.serie.remove",
        "pygal.graph.graph.Graph.svg.serie.node.get.split.append",
        "pygal.util.decorate.serie.remove",
        "pygal.graph.dual.Dual.svg.serie.node.append",
        "pygal.graph.dual.Dual.svg.get.split.append",
        "pygal.etree.etree.fromstring.findall.serie.set",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.public.PublicApi.svg.serie.append",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.util.decorate.node.serie.append",
        "pygal.graph.graph.Graph.svg.serie.get.split",
        "pygal.util.decorate.node.serie.get.split.append",
        "pygal.etree.etree.fromstring.findall",
        "pygal.util.decorate.set",
        "pygal.graph.dual.Dual.svg.node.serie.remove",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.serie.node.get",
        "pygal.etree.etree.fromstring.findall.serie.get",
        "pygal.graph.graph.Graph.svg.node.serie.append",
        "pygal.graph.graph.Graph.series.node",
        "<builtin>.filter",
        "pygal.graph.dual.Dual.svg.append",
        "pygal.util.decorate.get",
        "pygal.graph.graph.Graph.svg.node.serie.remove",
        "pygal.graph.graph.Graph.svg.serie.get.split.append",
        "<builtin>.list",
        "pygal.graph.graph.Graph.svg.node.serie.set",
        "pygal.graph.public.PublicApi.svg.serie",
        "pygal.util.decorate.node.serie.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.util.decorate.serie.node.get.split.append",
        "pygal.graph.graph.Graph.secondary_series.node.remove",
        "pygal.graph.graph.Graph.svg.node.get",
        "pygal.util.decorate.node.serie.set",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.etree.etree.fromstring.findall.node.serie.set",
        "pygal.util.decorate.serie.node.get.split",
        "pygal.graph.dual.Dual.svg.node.get.split.append",
        "pygal.graph.dual.Dual.svg.node.append",
        "pygal.util.decorate.node.get.split.append",
        "pygal.etree.etree.fromstring.findall.set",
        "pygal.graph.public.PublicApi.svg.get",
        "pygal.graph.graph.Graph.secondary_series.node.append",
        "pygal.graph.graph.Graph.svg.get.split.append",
        "pygal.graph.graph.Graph.secondary_series.get.split.append",
        "pygal.etree.etree.fromstring.findall.node.get.split.append",
        "pygal.etree.etree.fromstring.findall.serie.node.get.split.append",
        "<builtin>.min",
        "pygal.graph.graph.Graph.svg.node.remove",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.util.decorate.node.get.split",
        "pygal.graph.public.PublicApi.svg.node.serie.set",
        "pygal.graph.graph.Graph.svg.serie.node.append",
        "pygal.etree.etree.fromstring.findall.serie.node.get.split",
        "pygal.graph.public.PublicApi.svg.node.serie.append",
        "pygal.graph.graph.Graph._tooltip_data",
        "<builtin>.str",
        "pygal.etree.etree.fromstring.findall.remove",
        "pygal.graph.dual.Dual.svg.node.serie.get.split.append",
        "pygal.graph.graph.Graph.svg.serie.node.remove",
        "pygal.etree.etree.fromstring.findall.serie.node.remove",
        "pygal.graph.graph.Graph.series.get",
        "pygal.graph.dual.Dual.svg.serie.node.get.split",
        "pygal.etree.etree.fromstring.remove",
        "pygal.etree.etree.fromstring.findall.node.serie.get",
        "pygal.etree.etree.fromstring",
        "pygal.util.decorate.node.get",
        "pygal.util.decorate.serie.node.remove",
        "pygal.graph.public.PublicApi.svg.serie.get",
        "pygal.graph.dual.Dual.svg.get",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie.node.set",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.graph.Graph.secondary_series.remove",
        "pygal.graph.public.PublicApi.svg.node.serie.get.split",
        "pygal.graph.graph.Graph.series.set",
        "pygal.graph.graph.Graph.svg.serie.remove",
        "...pygal.pygal.graph.map.BaseMap.adapt_code",
        "pygal.etree.etree.fromstring.findall.node.set",
        "pygal.graph.public.PublicApi.svg.node.get",
        "pygal.graph.graph.Graph.series.get.split",
        "pygal.graph.dual.Dual.svg.set",
        "pygal.graph.graph.Graph.svg.node.set",
        "pygal.graph.public.PublicApi.svg.node.get.split",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.util.decorate.remove",
        "pygal.etree.etree.fromstring.findall.serie.node.set",
        "pygal.graph.graph.Graph.secondary_series.node.get.split.append",
    ],
    "pygal.etree.etree.fromstring": [],
    "pygal.etree.etree.fromstring.set": [],
    "...pygal.pygal.graph.map.BaseMap._plot.<lambda1>": [],
    "pygal.graph.dual.Dual.svg.serie.node.get": [],
    "pygal.graph.graph.Graph.svg.node.get": [],
    "pygal.graph.graph.Graph.secondary_series.node.get": [],
    "pygal.graph.graph.Graph.svg.get": [],
    "pygal.graph.graph.Graph.series.node.get": [],
    "pygal.graph.public.PublicApi.svg.get": [],
    "pygal.graph.dual.Dual.svg.node.get": [],
    "pygal.util.decorate.serie.node.get": [],
    "pygal.graph.public.PublicApi.svg.node.serie.get": [],
    "pygal.graph.dual.Dual.svg.node.serie.get": [],
    "pygal.graph.graph.Graph.secondary_series.get": [],
    "pygal.graph.public.PublicApi.svg.serie.node.get": [],
    "pygal.graph.graph.Graph.svg.serie.node.get": [],
    "pygal.etree.etree.fromstring.findall.get": [],
    "pygal.graph.graph.Graph.series.get": [],
    "pygal.util.decorate.serie.get": [],
    "pygal.etree.etree.fromstring.findall.node.serie.get": [],
    "pygal.util.decorate.node.get": [],
    "pygal.graph.graph.Graph.svg.node.serie.get": [],
    "pygal.graph.public.PublicApi.svg.serie.get": [],
    "pygal.graph.dual.Dual.svg.get": [],
    "pygal.etree.etree.fromstring.findall.serie.node.get": [],
    "pygal.etree.etree.fromstring.findall.serie.get": [],
    "pygal.graph.dual.Dual.svg.serie.get": [],
    "pygal.graph.public.PublicApi.svg.node.get": [],
    "pygal.util.decorate.get": [],
    "pygal.etree.etree.fromstring.findall.node.get": [],
    "pygal.graph.graph.Graph.svg.serie.get": [],
    "pygal.util.decorate.node.serie.get": [],
    "pygal.graph.graph.Graph.svg.node.serie.get.split": [],
    "pygal.graph.graph.Graph.secondary_series.node.get.split": [],
    "pygal.graph.graph.Graph.secondary_series.get.split": [],
    "pygal.etree.etree.fromstring.findall.get.split": [],
    "pygal.util.decorate.serie.node.get.split": [],
    "pygal.graph.graph.Graph.series.node.get.split": [],
    "pygal.graph.public.PublicApi.svg.serie.node.get.split": [],
    "pygal.graph.dual.Dual.svg.node.serie.get.split": [],
    "pygal.util.decorate.node.get.split": [],
    "pygal.graph.public.PublicApi.svg.get.split": [],
    "pygal.etree.etree.fromstring.findall.serie.get.split": [],
    "pygal.etree.etree.fromstring.findall.node.get.split": [],
    "pygal.graph.graph.Graph.svg.get.split": [],
    "pygal.etree.etree.fromstring.findall.serie.node.get.split": [],
    "pygal.graph.graph.Graph.svg.serie.node.get.split": [],
    "pygal.etree.etree.fromstring.findall.node.serie.get.split": [],
    "pygal.graph.dual.Dual.svg.get.split": [],
    "pygal.graph.dual.Dual.svg.serie.get.split": [],
    "pygal.graph.dual.Dual.svg.serie.node.get.split": [],
    "pygal.graph.graph.Graph.svg.node.get.split": [],
    "pygal.graph.graph.Graph.svg.serie.get.split": [],
    "pygal.util.decorate.serie.get.split": [],
    "pygal.graph.public.PublicApi.svg.node.serie.get.split": [],
    "pygal.util.decorate.node.serie.get.split": [],
    "pygal.graph.dual.Dual.svg.node.get.split": [],
    "pygal.graph.public.PublicApi.svg.serie.get.split": [],
    "pygal.util.decorate.get.split": [],
    "pygal.graph.graph.Graph.series.get.split": [],
    "pygal.graph.public.PublicApi.svg.node.get.split": [],
    "pygal.util.decorate.serie.node.get.split.append": [],
    "pygal.graph.graph.Graph.svg.node.serie.get.split.append": [],
    "pygal.etree.etree.fromstring.findall.serie.get.split.append": [],
    "pygal.graph.dual.Dual.svg.node.get.split.append": [],
    "pygal.util.decorate.node.get.split.append": [],
    "pygal.graph.graph.Graph.series.get.split.append": [],
    "pygal.graph.graph.Graph.svg.get.split.append": [],
    "pygal.graph.graph.Graph.secondary_series.get.split.append": [],
    "pygal.etree.etree.fromstring.findall.node.get.split.append": [],
    "pygal.etree.etree.fromstring.findall.serie.node.get.split.append": [],
    "pygal.graph.public.PublicApi.svg.node.serie.get.split.append": [],
    "pygal.etree.etree.fromstring.findall.node.serie.get.split.append": [],
    "pygal.graph.dual.Dual.svg.serie.get.split.append": [],
    "pygal.graph.dual.Dual.svg.serie.node.get.split.append": [],
    "pygal.graph.public.PublicApi.svg.get.split.append": [],
    "pygal.graph.dual.Dual.svg.node.serie.get.split.append": [],
    "pygal.util.decorate.serie.get.split.append": [],
    "pygal.graph.graph.Graph.svg.node.get.split.append": [],
    "pygal.graph.graph.Graph.svg.serie.node.get.split.append": [],
    "pygal.graph.public.PublicApi.svg.node.get.split.append": [],
    "pygal.graph.dual.Dual.svg.get.split.append": [],
    "pygal.etree.etree.fromstring.findall.get.split.append": [],
    "pygal.util.decorate.node.serie.get.split.append": [],
    "pygal.util.decorate.get.split.append": [],
    "pygal.graph.public.PublicApi.svg.serie.node.get.split.append": [],
    "pygal.graph.public.PublicApi.svg.serie.get.split.append": [],
    "pygal.graph.graph.Graph.series.node.get.split.append": [],
    "pygal.graph.graph.Graph.svg.serie.get.split.append": [],
    "pygal.graph.graph.Graph.secondary_series.node.get.split.append": [],
    "pygal.graph.dual.Dual.svg.node.set": [],
    "pygal.graph.graph.Graph.series.node.set": [],
    "pygal.util.decorate.node.serie.set": [],
    "pygal.graph.dual.Dual.svg.node.serie.set": [],
    "pygal.graph.public.PublicApi.svg.serie.set": [],
    "pygal.etree.etree.fromstring.findall.node.serie.set": [],
    "pygal.graph.graph.Graph.svg.set": [],
    "pygal.etree.etree.fromstring.findall.set": [],
    "pygal.util.decorate.node.set": [],
    "pygal.util.decorate.serie.set": [],
    "pygal.graph.graph.Graph.secondary_series.node.set": [],
    "pygal.graph.public.PublicApi.svg.node.serie.set": [],
    "pygal.graph.graph.Graph.svg.serie.set": [],
    "pygal.graph.dual.Dual.svg.serie.set": [],
    "pygal.graph.public.PublicApi.svg.serie.node.set": [],
    "pygal.graph.public.PublicApi.svg.set": [],
    "pygal.graph.graph.Graph.secondary_series.set": [],
    "pygal.etree.etree.fromstring.findall.serie.set": [],
    "pygal.graph.public.PublicApi.svg.node.set": [],
    "pygal.util.decorate.serie.node.set": [],
    "pygal.graph.graph.Graph.svg.serie.node.set": [],
    "pygal.graph.dual.Dual.svg.serie.node.set": [],
    "pygal.util.decorate.set": [],
    "pygal.etree.etree.fromstring.findall.node.set": [],
    "pygal.graph.dual.Dual.svg.set": [],
    "pygal.graph.graph.Graph.svg.node.set": [],
    "pygal.graph.graph.Graph.svg.node.serie.set": [],
    "pygal.etree.etree.fromstring.findall.serie.node.set": [],
    "pygal.graph.graph.Graph.series.set": [],
    "pygal.graph.dual.Dual.svg.remove": [],
    "pygal.graph.dual.Dual.svg.serie.remove": [],
    "pygal.graph.graph.Graph.svg.remove": [],
    "pygal.graph.graph.Graph.secondary_series.node.remove": [],
    "pygal.graph.public.PublicApi.svg.node.remove": [],
    "pygal.graph.graph.Graph.svg.node.remove": [],
    "pygal.etree.etree.fromstring.findall.remove": [],
    "pygal.graph.graph.Graph.series.remove": [],
    "pygal.util.decorate.node.remove": [],
    "pygal.etree.etree.fromstring.findall.node.serie.remove": [],
    "pygal.graph.graph.Graph.svg.serie.node.remove": [],
    "pygal.etree.etree.fromstring.findall.serie.node.remove": [],
    "pygal.util.decorate.node.serie.remove": [],
    "pygal.graph.dual.Dual.svg.serie.node.remove": [],
    "pygal.util.decorate.serie.remove": [],
    "pygal.graph.dual.Dual.svg.node.remove": [],
    "pygal.util.decorate.serie.node.remove": [],
    "pygal.graph.public.PublicApi.svg.serie.remove": [],
    "pygal.graph.public.PublicApi.svg.serie.node.remove": [],
    "pygal.etree.etree.fromstring.findall.node.remove": [],
    "pygal.graph.graph.Graph.secondary_series.remove": [],
    "pygal.graph.dual.Dual.svg.node.serie.remove": [],
    "pygal.graph.graph.Graph.svg.serie.remove": [],
    "pygal.etree.etree.fromstring.findall.serie.remove": [],
    "pygal.graph.graph.Graph.svg.node.serie.remove": [],
    "pygal.util.decorate.remove": [],
    "pygal.graph.public.PublicApi.svg.remove": [],
    "pygal.graph.graph.Graph.series.node.remove": [],
    "pygal.graph.public.PublicApi.svg.node.serie.remove": [],
    "pygal.etree.etree.fromstring.remove": [],
    "pygal.etree.etree.fromstring.findall.node.serie.append": [],
    "pygal.graph.graph.Graph.svg.append": [],
    "pygal.graph.dual.Dual.svg.node.append": [],
    "pygal.util.decorate.node.append": [],
    "pygal.graph.graph.Graph.secondary_series.node.append": [],
    "pygal.etree.etree.fromstring.findall.serie.append": [],
    "pygal.graph.public.PublicApi.svg.node.append": [],
    "pygal.graph.graph.Graph.svg.serie.node.append": [],
    "pygal.util.decorate.serie.node.append": [],
    "pygal.graph.public.PublicApi.svg.append": [],
    "pygal.graph.public.PublicApi.svg.node.serie.append": [],
    "pygal.etree.etree.fromstring.findall.serie.node.append": [],
    "pygal.util.decorate.serie.append": [],
    "pygal.graph.dual.Dual.svg.serie.node.append": [],
    "pygal.etree.etree.fromstring.findall.node.append": [],
    "pygal.graph.public.PublicApi.svg.serie.append": [],
    "pygal.graph.graph.Graph.series.append": [],
    "pygal.util.decorate.node.serie.append": [],
    "pygal.graph.graph.Graph.svg.serie.append": [],
    "pygal.graph.public.PublicApi.svg.serie.node.append": [],
    "pygal.util.decorate.append": [],
    "pygal.graph.graph.Graph.series.node.append": [],
    "pygal.etree.etree.fromstring.findall.append": [],
    "pygal.graph.graph.Graph.svg.node.serie.append": [],
    "pygal.graph.graph.Graph.svg.node.append": [],
    "pygal.graph.dual.Dual.svg.node.serie.append": [],
    "pygal.graph.dual.Dual.svg.append": [],
    "pygal.graph.graph.Graph.secondary_series.append": [],
    "pygal.graph.dual.Dual.svg.serie.append": [],
    "pygal.etree.etree.fromstring.insert": [],
    "...pygal.pygal.graph.map.BaseMap._compute_x_labels": [],
    "...pygal.pygal.graph.map.BaseMap._compute_y_labels": [],
    "...pygal.pygal.graph.solidgauge": [],
    "...pygal.pygal.graph.solidgauge.SolidGauge.gaugify": [
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.graph.Graph.series.node.gauge_background",
        "pygal.graph.dual.Dual.svg.gauge_background",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.util.decorate.solid_gauge",
        "pygal.graph.public.PublicApi.svg.solid_gauge",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.graph.public.PublicApi.svg.node.serie.gauge_background",
        "pygal.etree.etree.fromstring.findall.node.serie.solid_gauge",
        "pygal.etree.etree.fromstring.findall.serie.node.solid_gauge",
        "pygal.graph.graph.Graph._format",
        "pygal.graph.dual.Dual.svg.serie.solid_gauge",
        "pygal.graph.graph.Graph.svg.solid_gauge",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.solid_gauge",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.graph.public.PublicApi.svg.gauge_background",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node",
        "<builtin>.enumerate",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.etree.etree.fromstring.findall.solid_gauge",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.alter",
        "pygal.graph.dual.Dual.svg.serie.gauge_background",
        "pygal.util.decorate.gauge_background",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.graph.graph.Graph.series.node.solid_gauge",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.graph.Graph.secondary_series",
        "pygal.util.decorate.serie.solid_gauge",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.gauge_background",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie.solid_gauge",
        "pygal.etree.etree.fromstring.findall.serie.gauge_background",
        "pygal.graph.graph.Graph.secondary_series.node.gauge_background",
        "pygal.graph.graph.Graph.svg.node.gauge_background",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.solid_gauge",
        "pygal.util.decorate.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.solid_gauge",
        "pygal.util.decorate",
        "pygal.util.decorate.node.solid_gauge",
        "pygal.graph.public.PublicApi.svg",
        "pygal.graph.graph.Graph.svg.serie.gauge_background",
        "pygal.etree.etree.fromstring.findall.node.serie.gauge_background",
        "pygal.graph.graph.Graph.series",
        "pygal.graph.graph.Graph.svg",
        "pygal.graph.public.PublicApi.svg.node.solid_gauge",
        "pygal.graph.dual.Dual.svg",
        "pygal.graph.public.PublicApi.svg.serie.node.solid_gauge",
        "pygal.graph.graph.Graph.svg.serie.solid_gauge",
        "pygal.graph.graph.Graph.svg.gauge_background",
        "pygal.util.decorate.serie",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.gauge_background",
        "pygal.util.decorate.serie.gauge_background",
        "pygal.util.decorate.node.serie.gauge_background",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.solid_gauge",
        "pygal.util.decorate.node.gauge_background",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.etree.etree.fromstring.findall",
        "pygal.util.decorate.node",
        "pygal.etree.etree.fromstring.findall.node.gauge_background",
        "pygal.etree.etree.fromstring.findall.serie.node.gauge_background",
        "pygal.graph.graph.Graph.series.node",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.solid_gauge",
        "pygal.graph.graph.Graph.svg.node.serie.solid_gauge",
        "pygal.graph.public.PublicApi.svg.serie",
        "pygal.graph.graph.Graph._serie_format",
        "pygal.graph.graph.Graph.svg.node.serie.gauge_background",
        "pygal.etree.etree.fromstring.findall.node.solid_gauge",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.serie.node.gauge_background",
        "pygal.graph.public.PublicApi.svg.serie.node.gauge_background",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.graph.Graph.secondary_series.node.solid_gauge",
        "pygal.graph.graph.Graph.secondary_series.gauge_background",
        "pygal.util.decorate.node.metadata.get",
        "<builtin>.min",
        "pygal.util.decorate.node.serie.solid_gauge",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.graph.Graph.svg.node.solid_gauge",
        "pygal.graph.dual.Dual.svg.solid_gauge",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.gauge_background",
        "pygal.util.decorate.serie.node.solid_gauge",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.node.gauge_background",
        "pygal.graph.public.PublicApi.svg.node.gauge_background",
        "pygal.util.decorate.serie.node.gauge_background",
        "pygal.etree.etree.fromstring.findall.gauge_background",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.graph.Graph.svg.serie.node.solid_gauge",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.solid_gauge",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.secondary_series.solid_gauge",
        "pygal.graph.graph.Graph.series.gauge_background",
    ],
    "pygal.graph.graph.Graph.svg.node.serie.gauge_background": [],
    "pygal.graph.graph.Graph.svg.serie.gauge_background": [],
    "pygal.graph.graph.Graph.series.node.gauge_background": [],
    "pygal.graph.dual.Dual.svg.gauge_background": [],
    "pygal.graph.graph.Graph.svg.serie.node.gauge_background": [],
    "pygal.graph.public.PublicApi.svg.serie.node.gauge_background": [],
    "pygal.etree.etree.fromstring.findall.node.serie.gauge_background": [],
    "pygal.graph.dual.Dual.svg.serie.gauge_background": [],
    "pygal.graph.graph.Graph.secondary_series.gauge_background": [],
    "pygal.util.decorate.gauge_background": [],
    "pygal.graph.graph.Graph.svg.gauge_background": [],
    "pygal.graph.public.PublicApi.svg.serie.gauge_background": [],
    "pygal.graph.dual.Dual.svg.serie.node.gauge_background": [],
    "pygal.util.decorate.serie.gauge_background": [],
    "pygal.graph.public.PublicApi.svg.node.serie.gauge_background": [],
    "pygal.util.decorate.node.serie.gauge_background": [],
    "pygal.graph.dual.Dual.svg.node.gauge_background": [],
    "pygal.graph.dual.Dual.svg.node.serie.gauge_background": [],
    "pygal.graph.public.PublicApi.svg.node.gauge_background": [],
    "pygal.util.decorate.node.gauge_background": [],
    "pygal.etree.etree.fromstring.findall.serie.gauge_background": [],
    "pygal.util.decorate.serie.node.gauge_background": [],
    "pygal.graph.graph.Graph.secondary_series.node.gauge_background": [],
    "pygal.graph.graph.Graph.svg.node.gauge_background": [],
    "pygal.etree.etree.fromstring.findall.gauge_background": [],
    "pygal.etree.etree.fromstring.findall.node.gauge_background": [],
    "pygal.graph.public.PublicApi.svg.gauge_background": [],
    "pygal.etree.etree.fromstring.findall.serie.node.gauge_background": [],
    "pygal.graph.graph.Graph.series.gauge_background": [],
    "pygal.etree.etree.fromstring.findall.node.solid_gauge": [],
    "pygal.graph.graph.Graph.secondary_series.node.solid_gauge": [],
    "pygal.etree.etree.fromstring.findall.solid_gauge": [],
    "pygal.util.decorate.solid_gauge": [],
    "pygal.graph.public.PublicApi.svg.node.solid_gauge": [],
    "pygal.graph.public.PublicApi.svg.solid_gauge": [],
    "pygal.util.decorate.node.solid_gauge": [],
    "pygal.graph.public.PublicApi.svg.serie.node.solid_gauge": [],
    "pygal.graph.graph.Graph.series.node.solid_gauge": [],
    "pygal.util.decorate.node.serie.solid_gauge": [],
    "pygal.graph.graph.Graph.svg.node.solid_gauge": [],
    "pygal.graph.dual.Dual.svg.solid_gauge": [],
    "pygal.graph.graph.Graph.svg.serie.solid_gauge": [],
    "pygal.util.decorate.serie.node.solid_gauge": [],
    "pygal.etree.etree.fromstring.findall.node.serie.solid_gauge": [],
    "pygal.util.decorate.serie.solid_gauge": [],
    "pygal.etree.etree.fromstring.findall.serie.node.solid_gauge": [],
    "pygal.graph.dual.Dual.svg.node.serie.solid_gauge": [],
    "pygal.graph.dual.Dual.svg.serie.solid_gauge": [],
    "pygal.graph.dual.Dual.svg.serie.node.solid_gauge": [],
    "pygal.graph.graph.Graph.svg.solid_gauge": [],
    "pygal.graph.public.PublicApi.svg.node.serie.solid_gauge": [],
    "pygal.etree.etree.fromstring.findall.serie.solid_gauge": [],
    "pygal.graph.public.PublicApi.svg.serie.solid_gauge": [],
    "pygal.graph.graph.Graph.svg.serie.node.solid_gauge": [],
    "pygal.graph.graph.Graph.series.solid_gauge": [],
    "pygal.graph.dual.Dual.svg.node.solid_gauge": [],
    "pygal.graph.graph.Graph.secondary_series.solid_gauge": [],
    "pygal.graph.graph.Graph.svg.node.serie.solid_gauge": [],
    "...pygal.pygal.graph.solidgauge.SolidGauge._compute_x_labels": [],
    "...pygal.pygal.graph.solidgauge.SolidGauge._compute_y_labels": [],
    "...pygal.pygal.graph.solidgauge.SolidGauge._plot": [
        "pygal.graph.graph.Graph.add_squares",
        "...pygal.pygal.graph.solidgauge.SolidGauge._current_square",
        "...pygal.pygal.graph.solidgauge.SolidGauge._squares",
        "<builtin>.enumerate",
        "...pygal.pygal.graph.solidgauge.SolidGauge.gaugify",
    ],
    "...pygal.pygal.graph.solidgauge.SolidGauge._squares": [
        "...pygal.pygal.stats.sqrt",
        "<builtin>.len",
        "...pygal.pygal.graph.graph.Graph._order",
        "<builtin>.abs",
        "<builtin>.int",
        "...pygal.pygal.stats.sqrt.is_integer",
    ],
    "...pygal.pygal.graph.solidgauge.SolidGauge._current_square": [
        "<builtin>.Exception",
        "<builtin>.range",
        "<builtin>.tuple",
    ],
    "...pygal.pygal.stats.sqrt.is_integer": [],
    "<builtin>.Exception": [],
    "...pygal.pygal.graph.horizontalbar": [],
    "...pygal.pygal.graph.horizontalbar.HorizontalBar._plot": [
        "pygal.graph.horizontal.HorizontalGraph.bar"
    ],
    "pygal.graph.horizontal.HorizontalGraph.bar": [],
    "...pygal.pygal.graph.bar": [],
    "...pygal.pygal.graph.bar.Bar._bar": [
        "pygal.graph.public.PublicApi.svg.serie.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.transposable_node",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.node.transposable_node",
        "pygal.graph.graph.Graph.svg.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.transposable_node",
        "pygal.util.alter",
        "pygal.util.decorate.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.transposable_node",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.serie.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.transposable_node",
        "pygal.graph.graph.Graph.svg.transposable_node",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.series.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.node.transposable_node",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.public.PublicApi.svg.transposable_node",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.serie.transposable_node",
        "pygal.graph.public.PublicApi.svg.node.serie.transposable_node",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.transposable_node",
        "pygal.etree.etree.fromstring.findall.transposable_node",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.transposable_node",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.graph.Graph.series.transposable_node",
        "pygal.graph.dual.Dual.svg.node.serie.transposable_node",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.transposable_node",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.transposable_node",
        "pygal.util.decorate.node.serie.transposable_node",
        "pygal.util.decorate.serie.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.node.transposable_node",
        "pygal.util.decorate.node.transposable_node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.transposable_node",
        "pygal.graph.graph.Graph.secondary_series.transposable_node",
    ],
    "...pygal.pygal.graph.bar.Bar._tooltip_and_print_values": [
        "pygal.graph.graph.Graph._static_value",
        "pygal.graph.graph.Graph._get_x_label",
        "pygal.graph.graph.Graph._tooltip_data",
    ],
    "...pygal.pygal.graph.bar.Bar.bar": [
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.public.PublicApi.svg",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.graph.graph.Graph.series",
        "pygal.graph.graph.Graph.svg",
        "pygal.graph.graph.Graph._confidence_interval",
        "pygal.graph.graph.Graph._rescale",
        "pygal.graph.dual.Dual.svg",
        "pygal.util.decorate.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.util.decorate.serie",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.graph.Graph.secondary_series",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph._format",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "...pygal.pygal.graph.bar.Bar._bar",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.etree.etree.fromstring.findall",
        "...pygal.pygal.graph.bar.Bar._tooltip_and_print_values",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.node",
        "pygal.graph.graph.Graph.series.node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.util.decorate",
        "pygal.graph.public.PublicApi.svg.serie",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.bar.Bar._compute": [
        "<builtin>.max",
        "<builtin>.min",
        "pygal.graph.graph.Graph._points",
        "<builtin>.range",
    ],
    "...pygal.pygal.graph.bar.Bar._plot": ["...pygal.pygal.graph.bar.Bar.bar"],
    "...pygal.pygal.graph.horizontalline": [],
    "...pygal.pygal.graph.horizontalline.HorizontalLine._plot": [
        "pygal.graph.horizontal.HorizontalGraph.line"
    ],
    "...pygal.pygal.graph.dot": [],
    "...pygal.pygal.graph.dot.Dot.dot": [
        "pygal.graph.graph.Graph._static_value",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.safe_enumerate",
        "pygal.util.alter",
        "pygal.util.decorate.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.serie",
        "<builtin>.map",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph._format",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.graph.Graph._tooltip_data",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.node",
        "<builtin>.abs",
        "pygal.graph.graph.Graph.series.node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "math.log10",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "<builtin>.list",
        "pygal.util.decorate",
        "pygal.graph.public.PublicApi.svg.serie",
        "pygal.graph.graph.Graph._get_x_label",
    ],
    "...pygal.pygal.graph.dot.Dot._compute": [
        "<builtin>.reversed",
        "<builtin>.range",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.dot.Dot._compute_y_labels": [
        "<builtin>.list",
        "<builtin>.isinstance",
        "<builtin>.map",
        "<builtin>.zip",
    ],
    "...pygal.pygal.graph.dot.Dot._set_view": [],
    "...pygal.pygal.graph.dot.Dot": ["pygal.util.cached_property"],
    "...pygal.pygal.graph.dot.Dot._values": ["<builtin>.super", "<builtin>.abs"],
    "...pygal.pygal.graph.dot.Dot._max": ["<builtin>.max", "<builtin>.map"],
    "...pygal.pygal.graph.dot.Dot._plot": [
        "<builtin>.min",
        "...pygal.pygal.graph.dot.Dot.dot",
    ],
    "...pygal.pygal.graph.stackedbar": [],
    "...pygal.pygal.graph.stackedbar.StackedBar._get_separated_values": [
        "<builtin>.sum",
        "<builtin>.list",
        "<builtin>.zip",
    ],
    "...pygal.pygal.graph.stackedbar.StackedBar._compute_box": [
        "<builtin>.max",
        "<builtin>.min",
    ],
    "...pygal.pygal.graph.stackedbar.StackedBar._compute": [
        "<builtin>.range",
        "pygal.graph.bar.Bar._points",
        "...pygal.pygal.graph.stackedbar.StackedBar._pre_compute_secondary",
        "<builtin>.filter",
        "...pygal.pygal.graph.stackedbar.StackedBar._get_separated_values",
        "...pygal.pygal.graph.stackedbar.StackedBar._compute_box",
        "<builtin>.list",
    ],
    "...pygal.pygal.graph.stackedbar.StackedBar._compute.<lambda1>": [],
    "...pygal.pygal.graph.stackedbar.StackedBar._compute.<lambda2>": [],
    "pygal.graph.bar.Bar._points": [],
    "...pygal.pygal.graph.stackedbar.StackedBar._pre_compute_secondary": [
        "<builtin>.max",
        "<builtin>.min",
    ],
    "...pygal.pygal.graph.stackedbar.StackedBar._bar": [
        "pygal.graph.bar.Bar.view.x",
        "...pygal.pygal.graph.stackedbar.StackedBar.view.y",
        "pygal.graph.bar.Bar.svg.transposable_node",
        "pygal.graph.bar.Bar.view",
        "<builtin>.int",
    ],
    "pygal.graph.bar.Bar.view.x": [],
    "pygal.graph.bar.Bar.view": [],
    "...pygal.pygal.graph.stackedbar.StackedBar.view.y": [],
    "pygal.graph.bar.Bar.svg.transposable_node": [],
    "...pygal.pygal.graph.stackedbar.StackedBar._plot": ["pygal.graph.bar.Bar.bar"],
    "pygal.graph.bar.Bar.bar": [],
    "...pygal.pygal.graph.funnel": [],
    "...pygal.pygal.graph.funnel.Funnel._value_format": [
        "<builtin>.super",
        "<builtin>.abs",
    ],
    "...pygal.pygal.graph.funnel.Funnel.funnel": [
        "pygal.graph.graph.Graph._static_value",
        "pygal.etree.etree.fromstring.findall.node.serie.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie",
        "pygal.graph.graph.Graph.svg.node.serie",
        "pygal.graph.graph.Graph.svg.serie",
        "pygal.util.decorate.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.node",
        "pygal.graph.public.PublicApi.svg.serie.node",
        "pygal.util.alter",
        "pygal.util.decorate.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.metadata.get",
        "pygal.util.decorate.node.serie",
        "pygal.graph.public.PublicApi.svg.serie.node.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node",
        "...pygal.pygal.graph.funnel.Funnel._center",
        "pygal.etree.etree.fromstring.findall.node.metadata.get",
        "pygal.util.decorate.node.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node",
        "pygal.util.decorate.serie",
        "pygal.graph.dual.Dual.svg.serie.node.metadata.get",
        "pygal.graph.dual.Dual.svg.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.metadata.get",
        "<builtin>.map",
        "pygal.graph.dual.Dual.svg.serie.metadata.get",
        "pygal.util.decorate.serie.node.metadata.get",
        "pygal.graph.public.PublicApi.svg.serie.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie",
        "pygal.graph.dual.Dual.svg.serie.node",
        "pygal.graph.graph.Graph._format",
        "pygal.graph.graph.Graph.svg.serie.metadata.get",
        "pygal.graph.graph.Graph._tooltip_data",
        "pygal.graph.dual.Dual.svg.node",
        "pygal.graph.dual.Dual.svg.serie",
        "pygal.etree.etree.fromstring.findall.node.serie",
        "pygal.graph.dual.Dual.svg.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.serie.node.metadata.get",
        "pygal.util.decorate.serie.node",
        "pygal.graph.dual.Dual.svg.node.serie",
        "<builtin>.sum",
        "pygal.graph.graph.Graph.series.node.metadata.get",
        "pygal.graph.graph.Graph.svg.node.metadata.get",
        "pygal.graph.graph.Graph.secondary_series.node",
        "pygal.graph.public.PublicApi.svg.metadata.get",
        "pygal.util.decorate.node",
        "<builtin>.len",
        "pygal.graph.graph.Graph.series.node",
        "pygal.util.decorate.metadata.get",
        "pygal.graph.dual.Dual.svg.node.serie.metadata.get",
        "pygal.etree.etree.fromstring.findall.serie.metadata.get",
        "pygal.graph.graph.Graph.series.metadata.get",
        "pygal.graph.public.PublicApi.svg.node.serie.metadata.get",
        "pygal.graph.graph.Graph.svg.node",
        "pygal.graph.graph.Graph.svg.serie.node",
        "pygal.util.decorate",
        "pygal.graph.graph.Graph._get_x_label",
        "pygal.graph.public.PublicApi.svg.serie",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.funnel.Funnel.funnel.<lambda1>": [],
    "...pygal.pygal.graph.funnel.Funnel._center": [],
    "...pygal.pygal.graph.funnel.Funnel._compute": [
        "<builtin>.range",
        "<builtin>.max",
        "pygal.util.cut",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.sum",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.graph.funnel.Funnel._compute_x_labels": [
        "<builtin>.list",
        "<builtin>.isinstance",
        "<builtin>.map",
        "<builtin>.zip",
    ],
    "...pygal.pygal.graph.funnel.Funnel._plot": [
        "...pygal.pygal.graph.funnel.Funnel.funnel"
    ],
    "...pygal.pygal.graph.base": [],
    "...pygal.pygal.graph.base.BaseGraph.__init__": [
        "<builtin>.isinstance",
        "uuid.uuid4",
        "pygal.config.Config",
        "pygal.config.Config.copy",
        "<builtin>.str",
    ],
    "pygal.config.Config.copy": [],
    "pygal.config.Config": [],
    "...pygal.pygal.graph.base.BaseGraph.__setattr__": [
        "<builtin>.setattr",
        "<builtin>.super",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.graph.base.BaseGraph.__getattribute__": [
        "<builtin>.super",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.graph.base.BaseGraph.prepare_values": [
        "...pygal.pygal.graph.base.BaseGraph.state.__dict__.items",
        "pygal._compat.is_list_like",
        "pygal.config.SerieConfig",
        "<builtin>.len",
        "<builtin>.isinstance",
        "pygal.serie.Serie",
        "<builtin>.dict",
        "functools.reduce",
        "<builtin>.max",
        "<builtin>.dir",
        "<builtin>.map",
        "<builtin>.list",
        "<builtin>.setattr",
        "<builtin>.enumerate",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.graph.base.BaseGraph.prepare_values.<list1>.<lambda1>": [],
    "pygal.config.SerieConfig": [],
    "...pygal.pygal.graph.base.BaseGraph.state.__dict__.items": [],
    "...pygal.pygal.graph.base.BaseGraph.setup": [
        "<builtin>.min",
        "pygal.svg.Svg.pre_render",
        "pygal.state.State",
        "<builtin>.len",
        "<builtin>.isinstance",
        "pygal.view.Margin",
        "<builtin>.filter",
        "pygal.svg.Svg",
        "<builtin>.list",
        "...pygal.pygal.graph.base.BaseGraph.prepare_values",
        "pygal.view.Box",
        "<builtin>.getattr",
    ],
    "pygal.state.State": [],
    "pygal.view.Margin": [],
    "...pygal.pygal.graph.base.BaseGraph.setup.<lambda1>": [],
    "pygal.svg.Svg.pre_render": [],
    "...pygal.pygal.graph.base.BaseGraph.teardown": ["os.getenv"],
    "os.getenv": [],
    "...pygal.pygal.graph.base.BaseGraph._repr_svg_": [],
    "...pygal.pygal.graph.base.BaseGraph._repr_png_": [],
    "...pygal.pygal": [
        "<builtin>.locals",
        "pkg_resources.iter_entry_points.load.__dict__.items",
        "pkg_resources.iter_entry_points.load",
        "<builtin>.isinstance",
        "traceback.format_exc",
        "pkg_resources.iter_entry_points",
        "<builtin>.dict",
        "warnings.warn",
        "<builtin>.list",
        "<builtin>.setattr",
        "pkg_resources.iter_entry_points.name.capitalize",
        "<builtin>.issubclass",
    ],
    "<builtin>.locals": [],
    "traceback.format_exc": [],
    "warnings.warn": [],
    "pkg_resources.iter_entry_points.name.capitalize": [],
    "...pygal.pygal.PluginImportFixer.find_module": ["<builtin>.hasattr"],
    "...pygal.pygal.PluginImportFixer.load_module": ["<builtin>.getattr"],
    "...pygal.pygal.view": [],
    "...pygal.pygal.view.Margin.__init__": [],
    "...pygal.pygal.view.Margin.x": [],
    "...pygal.pygal.view.Margin.y": [],
    "...pygal.pygal.view.Box.__init__": [],
    "...pygal.pygal.view.Box.set_polar_box": [],
    "...pygal.pygal.view.Box.xmin": [],
    "...pygal.pygal.view.Box.ymin": [],
    "...pygal.pygal.view.Box.xmax": [],
    "...pygal.pygal.view.Box.ymax": [],
    "...pygal.pygal.view.Box.width": [],
    "...pygal.pygal.view.Box.height": [],
    "...pygal.pygal.view.Box.swap": [],
    "...pygal.pygal.view.Box.fix": [],
    "...pygal.pygal.view.View.__init__": [],
    "...pygal.pygal.view.View.x": [],
    "...pygal.pygal.view.View.y": [],
    "...pygal.pygal.view.View.__call__": [
        "...pygal.pygal.view.View.x",
        "...pygal.pygal.view.View.y",
    ],
    "...pygal.pygal.view.ReverseView.y": [],
    "...pygal.pygal.view.HorizontalView.__init__": [],
    "...pygal.pygal.view.HorizontalView.x": ["<builtin>.super"],
    "...pygal.pygal.view.HorizontalView.y": ["<builtin>.super"],
    "...pygal.pygal.view.PolarView.__call__": [
        "math.cos",
        "<builtin>.super",
        "math.sin",
    ],
    "...pygal.pygal.view.PolarLogView.__init__": [
        "math.log10",
        "<builtin>.hasattr",
        "<builtin>.super",
        "<builtin>.Exception",
    ],
    "...pygal.pygal.view.PolarLogView.__call__": [
        "math.log10",
        "math.cos",
        "<builtin>.super",
        "math.sin",
    ],
    "...pygal.pygal.view.PolarThetaView.__init__": [
        "<builtin>.hasattr",
        "<builtin>.super",
        "<builtin>.Exception",
    ],
    "...pygal.pygal.view.PolarThetaView.__call__": [
        "math.cos",
        "<builtin>.super",
        "math.sin",
    ],
    "...pygal.pygal.view.PolarThetaLogView.__init__": [
        "math.log10",
        "<builtin>.hasattr",
        "<builtin>.super",
        "<builtin>.Exception",
    ],
    "...pygal.pygal.view.PolarThetaLogView.__call__": [
        "math.log10",
        "math.cos",
        "<builtin>.super",
        "math.sin",
    ],
    "...pygal.pygal.view.LogView.__init__": ["math.log10"],
    "...pygal.pygal.view.LogView.y": ["math.log10"],
    "...pygal.pygal.view.XLogView.__init__": ["math.log10"],
    "...pygal.pygal.view.XLogView.x": ["math.log10"],
    "...pygal.pygal.view.XYLogView.__init__": ["math.log10"],
    "...pygal.pygal.view.HorizontalLogView.__init__": ["math.log10"],
    "...pygal.pygal.view.HorizontalLogView.x": ["<builtin>.super"],
    "...pygal.pygal.view.HorizontalLogView.y": ["<builtin>.super"],
    "...pygal.pygal.svg": [],
    "...pygal.pygal.svg.Svg.__init__": [
        "pygal.etree.etree.Element",
        "pygal.etree.etree.Comment",
        "<builtin>.hasattr",
        "datetime.date.today.isoformat",
        "pygal._compat.u",
        "pygal.etree.etree.Element.append",
        "datetime.date.today",
        "pygal.etree.etree.fromstring",
        "pygal.etree.etree.SubElement.append",
        "...pygal.pygal.svg.Svg.node",
        "pygal.etree.etree.register_namespace",
    ],
    "pygal.etree.etree.register_namespace": [],
    "pygal.etree.etree.Element": [],
    "datetime.date.today": [],
    "datetime.date.today.isoformat": [],
    "pygal.etree.etree.Comment": [],
    "pygal.etree.etree.Element.append": [],
    "...pygal.pygal.svg.Svg.node": [
        "pygal._compat.to_str",
        "pygal.etree.etree.QName",
        "<builtin>.dict",
        "pygal.etree.etree.SubElement",
        "...pygal.pygal.svg.Svg.node.in_attrib_and_number",
    ],
    "pygal.etree.etree.SubElement.append": [],
    "...pygal.pygal.svg.Svg.add_styles": [
        "os.path.exists",
        "os.path.dirname",
        "pygal.util.template",
        "pygal._compat.u",
        "<builtin>.len",
        "...pygal.pygal.svg.Svg.get_strokes",
        "pygal._compat.quote_plus",
        "io.open",
        "...pygal.pygal.svg.Svg.node",
        "<builtin>.list",
        "os.path.join",
        "pygal.etree.etree.PI",
        "os.path.join.startswith",
        "pygal.util.minify_css",
    ],
    "...pygal.pygal.svg.Svg.get_strokes": [
        "...pygal.pygal.svg.Svg.get_strokes.stroke_dict_to_css"
    ],
    "pygal._compat.quote_plus": [],
    "os.path.join.startswith": [],
    "os.path.dirname": [],
    "os.path.join": [],
    "pygal.etree.etree.PI": [],
    "...pygal.pygal.svg.Svg.add_scripts": [
        "json.dumps",
        "<builtin>.len",
        "<builtin>.isinstance",
        "io.open",
        "...pygal.pygal.svg.Svg.node",
        "...pygal.pygal.svg.Svg.add_scripts.get_js_dict",
    ],
    "...pygal.pygal.svg.Svg.add_scripts.get_js_dict": [
        "<builtin>.dict",
        "<builtin>.hasattr",
        "<builtin>.dir",
        "<builtin>.getattr",
    ],
    "...pygal.pygal.svg.Svg.add_scripts.json_default": [
        "json.JSONEncoder.default",
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "json.JSONEncoder",
    ],
    "json.JSONEncoder": [],
    "json.JSONEncoder.default": [],
    "json.dumps": [],
    "...pygal.pygal.svg.Svg.node.in_attrib_and_number": ["<builtin>.isinstance"],
    "pygal.etree.etree.QName": [],
    "pygal.etree.etree.SubElement": [],
    "...pygal.pygal.svg.Svg.transposable_node": ["...pygal.pygal.svg.Svg.node"],
    "...pygal.pygal.svg.Svg.serie": ["...pygal.pygal.svg.Svg.node", "<builtin>.dict"],
    "...pygal.pygal.svg.Svg.line": [
        "...pygal.pygal.svg.Svg.line.<lambda2>",
        "...pygal.pygal.svg.Svg.node",
        "<builtin>.len",
        "...pygal.pygal.svg.Svg.line.<lambda1>",
    ],
    "...pygal.pygal.svg.Svg.line.<lambda1>": [],
    "...pygal.pygal.svg.Svg.line.<lambda2>": [],
    "...pygal.pygal.svg.Svg.slice": [
        "pygal.util.coord_dual",
        "pygal.util.coord_project",
        "...pygal.pygal.svg.Svg.node",
        "pygal.util.coord_abs_project",
        "pygal.util.coord_diff",
        "<builtin>.int",
    ],
    "pygal.util.coord_abs_project": [],
    "pygal.util.coord_dual": [],
    "pygal.util.coord_project": [],
    "pygal.util.coord_diff": [],
    "...pygal.pygal.svg.Svg.gauge_background": [
        "pygal.util.coord_dual",
        "pygal.util.coord_project",
        "...pygal.pygal.svg.Svg.node",
        "pygal.util.coord_abs_project",
        "pygal.util.coord_diff",
    ],
    "...pygal.pygal.svg.Svg.solid_gauge": [
        "pygal.util.coord_dual",
        "pygal.util.coord_project",
        "...pygal.pygal.svg.Svg.node",
        "pygal.util.coord_abs_project",
        "pygal.util.coord_diff",
        "<builtin>.int",
    ],
    "...pygal.pygal.svg.Svg.confidence_interval": [
        "...pygal.pygal.svg.Svg.confidence_interval.<lambda2>",
        "...pygal.pygal.svg.Svg.node",
        "...pygal.pygal.svg.Svg.confidence_interval.<lambda3>",
        "<builtin>.map",
        "<builtin>.tuple",
    ],
    "...pygal.pygal.svg.Svg.confidence_interval.<lambda1>": [],
    "...pygal.pygal.svg.Svg.confidence_interval.<lambda2>": [],
    "...pygal.pygal.svg.Svg.confidence_interval.<lambda3>": [],
    "...pygal.pygal.svg.Svg.pre_render": [
        "...pygal.pygal.svg.Svg.add_scripts",
        "...pygal.pygal.svg.Svg.add_styles",
        "pygal.etree.etree.Element.set",
        "<builtin>.str",
    ],
    "pygal.etree.etree.Element.set": [],
    "...pygal.pygal.svg.Svg.draw_no_data": ["...pygal.pygal.svg.Svg.node"],
    "...pygal.pygal.svg.Svg.render": ["pygal.etree.etree.tostring"],
    "pygal.etree.etree.tostring": [],
    "...pygal.pygal.svg.Svg.get_strokes.stroke_dict_to_css": [],
    "...pygal.pygal.typeshed_builtins.builtins": [
        "typing.TypeVar",
        "typing_extensions.ParamSpec",
        "typing.overload",
    ],
    "typing.TypeVar": [],
    "typing_extensions.ParamSpec": [],
    "...pygal.pygal.typeshed_builtins.builtins.object": [
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "...pygal.pygal.typeshed_builtins.builtins.property",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.property": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__class__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__setattr__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__delattr__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__str__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__repr__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__format__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__getattribute__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__sizeof__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__reduce__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__reduce_ex__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__getstate__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__dir__": [],
    "...pygal.pygal.typeshed_builtins.builtins.object.__init_subclass__": [],
    "...pygal.pygal.typeshed_builtins.builtins.classmethod": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.object.__subclasshook__": [],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod.__func__": [],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod.__isabstractmethod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod.__init__": [],
    "typing.overload": [],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod.__get__": [],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod.__wrapped__": [],
    "...pygal.pygal.typeshed_builtins.builtins.staticmethod.__call__": [],
    "...pygal.pygal.typeshed_builtins.builtins.classmethod.__func__": [],
    "...pygal.pygal.typeshed_builtins.builtins.classmethod.__isabstractmethod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.classmethod.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.classmethod.__get__": [],
    "...pygal.pygal.typeshed_builtins.builtins.classmethod.__wrapped__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type": [
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.type.__base__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__basicsize__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__dict__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__dictoffset__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__flags__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__itemsize__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__mro__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__text_signature__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__weakrefoffset__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__call__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__subclasses__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.mro": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__instancecheck__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__subclasscheck__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__prepare__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__or__": [],
    "...pygal.pygal.typeshed_builtins.builtins.type.__ror__": [],
    "...pygal.pygal.typeshed_builtins.builtins.super": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.super.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int": [
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.int.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.as_integer_ratio": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.real": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.imag": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.numerator": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.denominator": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.conjugate": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.bit_length": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.bit_count": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.to_bytes": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.from_bytes": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.is_integer": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__sub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__floordiv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__truediv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__mod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__divmod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__radd__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rsub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rfloordiv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rtruediv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rmod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rdivmod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__pow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rpow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__and__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__or__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__xor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__lshift__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rshift__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rand__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__ror__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rxor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rlshift__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__rrshift__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__neg__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__pos__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__invert__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__trunc__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__ceil__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__floor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__round__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__getnewargs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__float__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__int__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__abs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__bool__": [],
    "...pygal.pygal.typeshed_builtins.builtins.int.__index__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.as_integer_ratio": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.hex": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.is_integer": [],
    "...pygal.pygal.typeshed_builtins.builtins.float": [
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.float.fromhex": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.real": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.imag": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.conjugate": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__sub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__floordiv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__truediv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__mod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__divmod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__pow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__radd__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rsub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rfloordiv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rtruediv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rmod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rdivmod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__rpow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__getnewargs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__trunc__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__ceil__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__floor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__round__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__neg__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__pos__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__int__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__float__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__abs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.float.__bool__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.real": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.imag": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.conjugate": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__sub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__pow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__truediv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__radd__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__rsub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__rpow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__rtruediv__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__neg__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__pos__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__abs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__bool__": [],
    "...pygal.pygal.typeshed_builtins.builtins.complex.__complex__": [],
    "...pygal.pygal.typeshed_builtins.builtins._FormatMapMapping.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins._TranslateTable.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str": [
        "...pygal.pygal.typeshed_builtins.builtins.staticmethod",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.str.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.capitalize": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.casefold": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.center": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.count": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.encode": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.endswith": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.expandtabs": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.find": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.format": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.format_map": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.index": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isalnum": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isalpha": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isascii": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isdecimal": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isdigit": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isidentifier": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.islower": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isnumeric": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isprintable": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isspace": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.istitle": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.isupper": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.join": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.ljust": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.lower": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.lstrip": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.partition": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.replace": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.removeprefix": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.removesuffix": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.rfind": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.rindex": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.rjust": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.rpartition": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.rsplit": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.rstrip": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.split": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.splitlines": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.startswith": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.strip": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.swapcase": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.title": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.translate": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.upper": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.zfill": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.maketrans": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__mod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.str.__getnewargs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes": [
        "...pygal.pygal.typeshed_builtins.builtins.staticmethod",
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.capitalize": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.center": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.count": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.decode": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.endswith": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.expandtabs": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.find": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.hex": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.index": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.isalnum": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.isalpha": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.isascii": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.isdigit": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.islower": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.isspace": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.istitle": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.isupper": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.join": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.ljust": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.lower": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.lstrip": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.partition": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.replace": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.removeprefix": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.removesuffix": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.rfind": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.rindex": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.rjust": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.rpartition": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.rsplit": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.rstrip": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.split": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.splitlines": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.startswith": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.strip": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.swapcase": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.title": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.translate": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.upper": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.zfill": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.fromhex": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.maketrans": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__mod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__getnewargs__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__bytes__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytes.__buffer__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray": [
        "...pygal.pygal.typeshed_builtins.builtins.staticmethod",
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.append": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.capitalize": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.center": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.count": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.copy": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.decode": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.endswith": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.expandtabs": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.extend": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.find": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.hex": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.index": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.insert": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.isalnum": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.isalpha": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.isascii": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.isdigit": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.islower": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.isspace": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.istitle": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.isupper": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.join": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.ljust": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.lower": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.lstrip": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.partition": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.pop": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.remove": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.removeprefix": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.removesuffix": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.replace": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.rfind": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.rindex": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.rjust": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.rpartition": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.rsplit": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.rstrip": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.split": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.splitlines": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.startswith": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.strip": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.swapcase": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.title": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.translate": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.upper": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.zfill": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.fromhex": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.maketrans": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__setitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__delitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__iadd__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__imul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__mod__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__ne__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__alloc__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__buffer__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bytearray.__release_buffer__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.format": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.itemsize": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.shape": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.strides": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.suboffsets": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.readonly": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.ndim": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.obj": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.c_contiguous": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.f_contiguous": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.contiguous": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.nbytes": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__enter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__exit__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.cast": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__setitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.tobytes": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.tolist": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.toreadonly": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.release": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.hex": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__buffer__": [],
    "...pygal.pygal.typeshed_builtins.builtins.memoryview.__release_buffer__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool": [
        "typing_extensions.deprecated",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__and__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__or__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__xor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__rand__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__ror__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__rxor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__getnewargs__": [],
    "typing_extensions.deprecated": [],
    "...pygal.pygal.typeshed_builtins.builtins.bool.__invert__": [],
    "...pygal.pygal.typeshed_builtins.builtins.slice": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.slice.start": [],
    "...pygal.pygal.typeshed_builtins.builtins.slice.step": [],
    "...pygal.pygal.typeshed_builtins.builtins.slice.stop": [],
    "...pygal.pygal.typeshed_builtins.builtins.slice.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.slice.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.slice.indices": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.count": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.index": [],
    "...pygal.pygal.typeshed_builtins.builtins.tuple.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.function": [
        "...pygal.pygal.typeshed_builtins.builtins.property"
    ],
    "...pygal.pygal.typeshed_builtins.builtins.function.__closure__": [],
    "...pygal.pygal.typeshed_builtins.builtins.function.__globals__": [],
    "...pygal.pygal.typeshed_builtins.builtins.function.__builtins__": [],
    "...pygal.pygal.typeshed_builtins.builtins.function.__get__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.list.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.copy": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.append": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.extend": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.pop": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.index": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.count": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.insert": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.remove": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.sort": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__setitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__delitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__add__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__iadd__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__mul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__rmul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__imul__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__reversed__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.list.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict": [
        "...pygal.pygal.typeshed_builtins.builtins.classmethod",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.copy": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.keys": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.values": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.items": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.fromkeys": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.get": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.pop": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__setitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__delitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__reversed__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__or__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__ror__": [],
    "...pygal.pygal.typeshed_builtins.builtins.dict.__ior__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.set.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.add": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.copy": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.difference": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.difference_update": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.discard": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.intersection": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.intersection_update": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.isdisjoint": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.issubset": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.issuperset": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.remove": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.symmetric_difference": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.symmetric_difference_update": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.union": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.update": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__and__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__iand__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__or__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__ior__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__sub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__isub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__xor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__ixor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.set.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.copy": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.difference": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.intersection": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.isdisjoint": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.issubset": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.issuperset": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.symmetric_difference": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.union": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__and__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__or__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__sub__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__xor__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__le__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__lt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__ge__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__gt__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.frozenset.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.enumerate.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.enumerate.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.enumerate.__next__": [],
    "...pygal.pygal.typeshed_builtins.builtins.enumerate.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.range.start": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.stop": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.step": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.count": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.index": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__len__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__eq__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__hash__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__contains__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.range.__reversed__": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.getter": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.setter": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.deleter": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.__get__": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.__set__": [],
    "...pygal.pygal.typeshed_builtins.builtins.property.__delete__": [],
    "...pygal.pygal.typeshed_builtins.builtins.abs": [],
    "...pygal.pygal.typeshed_builtins.builtins.all": [],
    "...pygal.pygal.typeshed_builtins.builtins.any": [],
    "...pygal.pygal.typeshed_builtins.builtins.ascii": [],
    "...pygal.pygal.typeshed_builtins.builtins.bin": [],
    "...pygal.pygal.typeshed_builtins.builtins.breakpoint": [],
    "...pygal.pygal.typeshed_builtins.builtins.callable": [],
    "...pygal.pygal.typeshed_builtins.builtins.chr": [],
    "...pygal.pygal.typeshed_builtins.builtins._PathLike.__fspath__": [],
    "...pygal.pygal.typeshed_builtins.builtins.aiter": [],
    "...pygal.pygal.typeshed_builtins.builtins._SupportsSynchronousAnext.__anext__": [],
    "...pygal.pygal.typeshed_builtins.builtins.anext": [],
    "...pygal.pygal.typeshed_builtins.builtins.compile": [],
    "...pygal.pygal.typeshed_builtins.builtins.copyright": [],
    "...pygal.pygal.typeshed_builtins.builtins.credits": [],
    "...pygal.pygal.typeshed_builtins.builtins.delattr": [],
    "...pygal.pygal.typeshed_builtins.builtins.dir": [],
    "...pygal.pygal.typeshed_builtins.builtins.divmod": [],
    "...pygal.pygal.typeshed_builtins.builtins.eval": [],
    "...pygal.pygal.typeshed_builtins.builtins.exec": [],
    "...pygal.pygal.typeshed_builtins.builtins.exit": [],
    "...pygal.pygal.typeshed_builtins.builtins.filter": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.filter.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.filter.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.filter.__next__": [],
    "...pygal.pygal.typeshed_builtins.builtins.format": [],
    "...pygal.pygal.typeshed_builtins.builtins.getattr": [],
    "...pygal.pygal.typeshed_builtins.builtins.globals": [],
    "...pygal.pygal.typeshed_builtins.builtins.hasattr": [],
    "...pygal.pygal.typeshed_builtins.builtins.hash": [],
    "...pygal.pygal.typeshed_builtins.builtins.help": [],
    "...pygal.pygal.typeshed_builtins.builtins.hex": [],
    "...pygal.pygal.typeshed_builtins.builtins.id": [],
    "...pygal.pygal.typeshed_builtins.builtins.input": [],
    "...pygal.pygal.typeshed_builtins.builtins._GetItemIterable.__getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.iter": [],
    "...pygal.pygal.typeshed_builtins.builtins.isinstance": [],
    "...pygal.pygal.typeshed_builtins.builtins.issubclass": [],
    "...pygal.pygal.typeshed_builtins.builtins.len": [],
    "...pygal.pygal.typeshed_builtins.builtins.license": [],
    "...pygal.pygal.typeshed_builtins.builtins.locals": [],
    "...pygal.pygal.typeshed_builtins.builtins.map": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.map.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.map.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.map.__next__": [],
    "...pygal.pygal.typeshed_builtins.builtins.max": [],
    "...pygal.pygal.typeshed_builtins.builtins.min": [],
    "...pygal.pygal.typeshed_builtins.builtins.next": [],
    "...pygal.pygal.typeshed_builtins.builtins.oct": [],
    "...pygal.pygal.typeshed_builtins.builtins.open": [],
    "...pygal.pygal.typeshed_builtins.builtins.ord": [],
    "...pygal.pygal.typeshed_builtins.builtins.print": [],
    "...pygal.pygal.typeshed_builtins.builtins._SupportsPow2.__pow__": [],
    "...pygal.pygal.typeshed_builtins.builtins._SupportsPow3NoneOnly.__pow__": [],
    "...pygal.pygal.typeshed_builtins.builtins._SupportsPow3.__pow__": [],
    "...pygal.pygal.typeshed_builtins.builtins.pow": [],
    "...pygal.pygal.typeshed_builtins.builtins.quit": [],
    "...pygal.pygal.typeshed_builtins.builtins.reversed": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.reversed.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.reversed.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.reversed.__next__": [],
    "...pygal.pygal.typeshed_builtins.builtins.reversed.__length_hint__": [],
    "...pygal.pygal.typeshed_builtins.builtins.repr": [],
    "...pygal.pygal.typeshed_builtins.builtins._SupportsRound1.__round__": [],
    "...pygal.pygal.typeshed_builtins.builtins._SupportsRound2.__round__": [],
    "...pygal.pygal.typeshed_builtins.builtins.round": [],
    "...pygal.pygal.typeshed_builtins.builtins.setattr": [],
    "...pygal.pygal.typeshed_builtins.builtins.sorted": [],
    "...pygal.pygal.typeshed_builtins.builtins.sum": [],
    "...pygal.pygal.typeshed_builtins.builtins.vars": [],
    "...pygal.pygal.typeshed_builtins.builtins.zip": ["typing.overload"],
    "...pygal.pygal.typeshed_builtins.builtins.zip.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.zip.__iter__": [],
    "...pygal.pygal.typeshed_builtins.builtins.zip.__next__": [],
    "...pygal.pygal.typeshed_builtins.builtins.__import__": [],
    "...pygal.pygal.typeshed_builtins.builtins.__build_class__": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseException.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseException.__setstate__": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseException.with_traceback": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseException.add_note": [],
    "...pygal.pygal.typeshed_builtins.builtins.AttributeError.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.ImportError.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.UnicodeDecodeError.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.UnicodeEncodeError.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.UnicodeTranslateError.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.message": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.exceptions": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.subgroup": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.split": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.derive": [],
    "...pygal.pygal.typeshed_builtins.builtins.BaseExceptionGroup.__class_getitem__": [],
    "...pygal.pygal.typeshed_builtins.builtins.ExceptionGroup.__new__": [],
    "...pygal.pygal.typeshed_builtins.builtins.ExceptionGroup.__init__": [],
    "...pygal.pygal.typeshed_builtins.builtins.ExceptionGroup": [
        "...pygal.pygal.typeshed_builtins.builtins.property",
        "typing.overload",
    ],
    "...pygal.pygal.typeshed_builtins.builtins.ExceptionGroup.exceptions": [],
    "...pygal.pygal.typeshed_builtins.builtins.ExceptionGroup.subgroup": [],
    "...pygal.pygal.typeshed_builtins.builtins.ExceptionGroup.split": [],
    "...pygal.pygal.serie": [],
    "...pygal.pygal.serie.Serie.__init__": [],
    "...pygal.pygal.serie.Serie": ["pygal.util.cached_property"],
    "...pygal.pygal.serie.Serie.safe_values": ["<builtin>.list", "<builtin>.filter"],
    "...pygal.pygal.serie.Serie.safe_values.<lambda1>": [],
    "...pygal.pygal.stats": [],
    "...pygal.pygal.stats.erfinv": [
        "math.log",
        "...pygal.pygal.graph.graph.Graph._order",
        "...pygal.pygal.stats.sqrt",
    ],
    "...pygal.pygal.stats.norm_ppf": [
        "...pygal.pygal.stats.erfinv",
        "...pygal.pygal.graph.graph.Graph._order",
        "...pygal.pygal.stats.sqrt",
        "<builtin>.ValueError",
    ],
    "...pygal.pygal.stats.ppf": [
        "scipy.stats.norm.ppf",
        "<builtin>.ImportError",
        "...pygal.pygal.stats.norm_ppf",
        "scipy.stats.t.ppf",
    ],
    "scipy.stats.t.ppf": [],
    "scipy.stats.norm.ppf": [],
    "...pygal.pygal.stats.confidence_interval_continuous": [
        "...pygal.pygal.graph.graph.Graph._order",
        "...pygal.pygal.stats.sqrt",
        "...pygal.pygal.stats.ppf",
    ],
    "...pygal.pygal.stats.confidence_interval_dichotomous": [
        "...pygal.pygal.graph.graph.Graph._order",
        "...pygal.pygal.stats.sqrt",
        "...pygal.pygal.stats.ppf",
    ],
    "...pygal.pygal.stats.confidence_interval_manual": [],
    "...pygal.pygal.__about__": [],
    "...pygal.pygal.etree": ["...pygal.pygal.etree.Etree.__init__"],
    "...pygal.pygal.etree.Etree.__init__": ["os.getenv"],
    "...pygal.pygal.etree.Etree.__getattribute__": [],
    "...pygal.pygal.etree.Etree.to_lxml": [],
    "...pygal.pygal.etree.Etree.to_etree": [],
    "...pygal.pygal.interpolate": [
        "pygal.XY",
        "...pygal.pygal.interpolate.cubic_interpolate",
        "<builtin>.zip",
        "...pygal.pygal.interpolate.quadratic_interpolate",
        "pygal.XY.render_in_browser",
        "...pygal.pygal.interpolate.lagrange_interpolate",
        "...pygal.pygal.interpolate.hermite_interpolate",
        "pygal.XY.add",
        "...pygal.pygal.interpolate.trigonometric_interpolate",
    ],
    "...pygal.pygal.interpolate.quadratic_interpolate": [
        "<builtin>.len",
        "<builtin>.range",
        "<builtin>.zip",
    ],
    "...pygal.pygal.interpolate.cubic_interpolate": [
        "<builtin>.reversed",
        "<builtin>.len",
        "<builtin>.range",
        "<builtin>.zip",
    ],
    "...pygal.pygal.interpolate.hermite_interpolate": [
        "<builtin>.len",
        "<builtin>.range",
        "...pygal.pygal.interpolate.hermite_interpolate.p",
        "<builtin>.zip",
    ],
    "...pygal.pygal.interpolate.hermite_interpolate.p": [],
    "...pygal.pygal.interpolate.lagrange_interpolate": [
        "<builtin>.len",
        "<builtin>.range",
        "<builtin>.zip",
    ],
    "...pygal.pygal.interpolate.trigonometric_interpolate": [
        "<builtin>.len",
        "math.sin",
        "<builtin>.range",
        "<builtin>.zip",
    ],
    "pygal.XY": [],
    "pygal.XY.add": [],
    "pygal.XY.render_in_browser": [],
    "...pygal.pygal.table": [],
    "...pygal.pygal.table.HTML.__getattribute__": ["<builtin>.getattr"],
    "...pygal.pygal.table.Table.__init__": [],
    "...pygal.pygal.table.Table.render": [
        "lxml.html.tostring.decode.append",
        "pygal.util.template",
        "lxml.html.tostring.decode",
        "lxml.html.tostring.append",
        "<builtin>.len",
        "...pygal.pygal.table.Table.render.<lambda1>",
        "uuid.uuid4",
        "<builtin>.zip",
        "<builtin>.max",
        "<builtin>.list",
        "lxml.html.tostring",
        "<builtin>.enumerate",
    ],
    "...pygal.pygal.table.Table.render.<lambda1>": [],
    "lxml.html.tostring.decode.append": [],
    "lxml.html.tostring.append": [],
    "lxml.html.tostring": [],
    "lxml.html.tostring.decode": [],
    "...pygal.pygal._compat": ["<builtin>.eval", "datetime.tzinfo.__init__"],
    "...pygal.pygal._compat.EllipsisGetter.__getitem__": [],
    "...pygal.pygal._compat.is_list_like": ["<builtin>.isinstance"],
    "...pygal.pygal._compat.is_str": ["<builtin>.isinstance"],
    "...pygal.pygal._compat.to_str": ["...pygal.pygal._compat.is_str"],
    "...pygal.pygal._compat.to_unicode": ["<builtin>.isinstance"],
    "...pygal.pygal._compat.u": [],
    "...pygal.pygal._compat.UTC.tzname": [],
    "...pygal.pygal._compat.UTC.utcoffset": ["datetime.timedelta"],
    "...pygal.pygal._compat.UTC.dst": [],
    "datetime.tzinfo.__init__": [],
    "...pygal.pygal._compat.timestamp": ["datetime.datetime", "<builtin>.hasattr"],
    "...pygal.pygal.state": [],
    "...pygal.pygal.state.State.__init__": ["pygal.util.merge"],
    "...pygal.pygal.adapters": [],
    "...pygal.pygal.adapters.positive": ["pygal._compat.is_str"],
    "...pygal.pygal.adapters.not_zero": [],
    "...pygal.pygal.adapters.none_to_zero": [],
    "...pygal.pygal.adapters.decimal_to_float": [
        "<builtin>.float",
        "<builtin>.isinstance",
    ],
    "...pygal.pygal.colors": [],
    "...pygal.pygal.colors.normalize_float": ["<builtin>.round", "<builtin>.abs"],
    "...pygal.pygal.colors.rgb_to_hsl": [
        "<builtin>.max",
        "<builtin>.min",
        "<builtin>.map",
        "<builtin>.tuple",
    ],
    "...pygal.pygal.colors.hsl_to_rgb": ["<builtin>.map"],
    "...pygal.pygal.colors.hsl_to_rgb.h_to_rgb": [],
    "...pygal.pygal.colors.hsl_to_rgb.<lambda1>": ["<builtin>.round"],
    "...pygal.pygal.colors.parse_color": [
        "<builtin>.len",
        "<builtin>.int",
        "<builtin>.float",
        "<builtin>.zip",
    ],
    "...pygal.pygal.colors.unparse_color": ["<builtin>.int"],
    "...pygal.pygal.colors.is_foreground_light": [
        "...pygal.pygal.colors.parse_color",
        "...pygal.pygal.colors.rgb_to_hsl",
    ],
    "...pygal.pygal.colors.<lambda1>": ["<builtin>.max", "<builtin>.min"],
    "...pygal.pygal.colors._adjust": [
        "...pygal.pygal.colors.<lambda1>",
        "<builtin>.list",
    ],
    "...pygal.pygal.colors.adjust": [
        "...pygal.pygal.colors.parse_color",
        "...pygal.pygal.colors.rgb_to_hsl",
        "...pygal.pygal.colors._adjust",
        "...pygal.pygal.colors.hsl_to_rgb",
        "...pygal.pygal.colors.unparse_color",
    ],
    "...pygal.pygal.colors.rotate": ["...pygal.pygal.colors.adjust"],
    "...pygal.pygal.colors.saturate": ["...pygal.pygal.colors.adjust"],
    "...pygal.pygal.colors.desaturate": ["...pygal.pygal.colors.adjust"],
    "...pygal.pygal.colors.lighten": ["...pygal.pygal.colors.adjust"],
    "...pygal.pygal.colors.darken": ["...pygal.pygal.colors.adjust"],
}
