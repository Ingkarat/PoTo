{
 "1": {
  "name": "__DEFAULT__",
  "type": "NoneType",
  "class": "unknown",
  "approach": "annotation",
  "file_path": "zfsp/pyndata/field.py",
  "lineno": "27",
  "column": "4",
  "context": "he default value for this field.\n    \n    '''\n    __DEFAULT__ = None\n    __SHOW__ = True\n\n    def __init__(self, defaul",
  "context_lines": "    If you override :meth:`__init__`, be sure to call Field's version.\n\n    Keyword Arguments:\n        default: The default value for this field.\n    \n    '''\n    __DEFAULT__ = None\n    __SHOW__ = True\n\n    def __init__(self, default=None):\n        self.default = default or self.__DEFAULT__\n        self.__index__ = __nextfield__()\n",
  "slicing": "    __DEFAULT__ = None\n"
 },
 "2": {
  "name": "new_cls",
  "type": "StructMeta",
  "class": "customized",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/structure.py",
  "lineno": "52",
  "column": "8",
  "context": "    fields.sort(key=lambda x:x.__index__)\n        new_cls = type.__new__(cls, cls_name, bases, attrs)\n        new_cls.field_defaults = field_defaults\n  ",
  "context_lines": "                if name[0] == '_':\n                    field.__SHOW__ = False\n                bitfields.append(field)\n        fields.sort(key=lambda x:x.__index__)\n        new_cls = type.__new__(cls, cls_name, bases, attrs)\n        new_cls.field_defaults = field_defaults\n        new_cls.fields = fields\n        new_cls.bitfields = bitfields\n        return new_cls\n\n",
  "slicing": [
   "        fields = []\n",
   "        bitfields = []\n",
   "        field_defaults = {}\n",
   "        for name, field in attrs.items():\n",
   "            if isinstance(field, Struct):\n",
   "                field = StructField(field)\n",
   "                attrs[name] = field\n",
   "            if isinstance(field, Field):\n",
   "                field.name = name\n",
   "                if name[0] == '_':\n",
   "                    field.__SHOW__ = False\n",
   "                field_defaults[name] = field.default\n",
   "                fields.append(field)\n",
   "            elif isinstance(field, BitField):\n",
   "                field.name = name\n",
   "                if name[0] == '_':\n",
   "                    field.__SHOW__ = False\n",
   "                bitfields.append(field)\n",
   "        fields.sort(key=lambda x:x.__index__)\n",
   "        new_cls = type.__new__(cls, cls_name, bases, attrs)\n",
   "        new_cls.field_defaults = field_defaults\n",
   "        new_cls.fields = fields\n",
   "        new_cls.bitfields = bitfields\n",
   "        return new_cls\n",
   "        for k, v in kwargs.items():\n",
   "            if hasattr(self, k):\n",
   "                setattr(self, k, v)\n",
   "                raise AttributeError(\"struct {} has no attribute {}\".format(self.__class__.__name__, k))\n",
   "        fields = [field.name+'='+repr(getattr(self, field.name)) for field in self.fields if field.__SHOW__]\n",
   "        fields.extend(field.name+'='+repr(field.__get__(self)) for field in self.bitfields if field.__SHOW__)\n",
   "        ret = '{0}({1})'.format(type(self).__name__, ', '.join(fields))\n",
   "        return ret\n",
   "            out.append(field.pack(field.__get__(self), self))\n",
   "            setattr(self, field.name, field.unpack(reader, self))\n"
  ]
 },
 "3": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/structure.py",
  "lineno": "67",
  "column": "4",
  "context": "ack`.\n\n    '''\n    __metaclass__ = StructMeta\n    __ENDIAN__ = 'little'\n\n    def __init__(self, initial=None, **kwargs):\n ",
  "context_lines": "    on a class which subclasses :class:`Struct` will automagically be used in\n    definition order to :meth:`pack` or :meth:`unpack`.\n\n    '''\n    __metaclass__ = StructMeta\n    __ENDIAN__ = 'little'\n\n    def __init__(self, initial=None, **kwargs):\n        self.__index__ = __nextfield__()\n        if initial:\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "4": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "21",
  "column": "4",
  "context": "m before\n            returning them.\n\n    '''\n    __TYPE__ = 'b'\n    __DEFAULT__ = 0\n    __ENDIAN__ = None\n\n    def",
  "context_lines": "        enum (enum.Enum):\n            If set, attempts to convert values to members of the enum before\n            returning them.\n\n    '''\n    __TYPE__ = 'b'\n    __DEFAULT__ = 0\n    __ENDIAN__ = None\n\n    def __init__(self, endian=None, enum=None, *args, **kwargs):\n        super(integer, self).__init__(*args, **kwargs)\n",
  "slicing": "    __TYPE__ = 'b'\n"
 },
 "5": {
  "name": "__DEFAULT__",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "22",
  "column": "4",
  "context": "  returning them.\n\n    '''\n    __TYPE__ = 'b'\n    __DEFAULT__ = 0\n    __ENDIAN__ = None\n\n    def __init__(self, endi",
  "context_lines": "            If set, attempts to convert values to members of the enum before\n            returning them.\n\n    '''\n    __TYPE__ = 'b'\n    __DEFAULT__ = 0\n    __ENDIAN__ = None\n\n    def __init__(self, endian=None, enum=None, *args, **kwargs):\n        super(integer, self).__init__(*args, **kwargs)\n        self.__ENDIAN__ = endian\n",
  "slicing": "    __DEFAULT__ = 0\n"
 },
 "6": {
  "name": "__ENDIAN__",
  "type": "NoneType",
  "class": "unknown",
  "approach": "annotation",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "23",
  "column": "4",
  "context": "   '''\n    __TYPE__ = 'b'\n    __DEFAULT__ = 0\n    __ENDIAN__ = None\n\n    def __init__(self, endian=None, enum=None, *a",
  "context_lines": "            returning them.\n\n    '''\n    __TYPE__ = 'b'\n    __DEFAULT__ = 0\n    __ENDIAN__ = None\n\n    def __init__(self, endian=None, enum=None, *args, **kwargs):\n        super(integer, self).__init__(*args, **kwargs)\n        self.__ENDIAN__ = endian\n",
  "slicing": "    __ENDIAN__ = None\n"
 },
 "7": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "54",
  "column": "21",
  "context": "t:\n            return value\n\nclass int8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(i",
  "context_lines": "        try:\n            return self.enum(value)\n        except:\n            return value\n\nclass int8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class int8(integer): __TYPE__ = 'b'\n"
  ]
 },
 "8": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "55",
  "column": "22",
  "context": "t8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(i",
  "context_lines": "            return self.enum(value)\n        except:\n            return value\n\nclass int8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class int16(integer): __TYPE__ = 'h'\n"
  ]
 },
 "9": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "56",
  "column": "22",
  "context": "16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(",
  "context_lines": "        except:\n            return value\n\nclass int8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class int32(integer): __TYPE__ = 'i'\n"
  ]
 },
 "10": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "57",
  "column": "22",
  "context": "32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16",
  "context_lines": "            return value\n\nclass int8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class int64(integer): __TYPE__ = 'q'\n"
  ]
 },
 "11": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "59",
  "column": "22",
  "context": "4(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32",
  "context_lines": "class int8(integer): __TYPE__ = 'b'\nclass int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\nclass uint64(integer): __TYPE__ = 'Q'\n\n__all__ = [\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class uint8(integer): __TYPE__ = 'B'\n"
  ]
 },
 "12": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "60",
  "column": "23",
  "context": "8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\nclass uint64",
  "context_lines": "class int16(integer): __TYPE__ = 'h'\nclass int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\nclass uint64(integer): __TYPE__ = 'Q'\n\n__all__ = [\n    'integer',\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class uint16(integer): __TYPE__ = 'H'\n"
  ]
 },
 "13": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "61",
  "column": "23",
  "context": "6(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\nclass uint64(integer): __TYPE__ = 'Q'\n\n__all__ = [",
  "context_lines": "class int32(integer): __TYPE__ = 'i'\nclass int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\nclass uint64(integer): __TYPE__ = 'Q'\n\n__all__ = [\n    'integer',\n    'int8',\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class uint32(integer): __TYPE__ = 'I'\n"
  ]
 },
 "14": {
  "name": "__TYPE__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/integer.py",
  "lineno": "62",
  "column": "23",
  "context": "2(integer): __TYPE__ = 'I'\nclass uint64(integer): __TYPE__ = 'Q'\n\n__all__ = [\n    'integer',\n    'int8',\n    'int16",
  "context_lines": "class int64(integer): __TYPE__ = 'q'\n\nclass uint8(integer): __TYPE__ = 'B'\nclass uint16(integer): __TYPE__ = 'H'\nclass uint32(integer): __TYPE__ = 'I'\nclass uint64(integer): __TYPE__ = 'Q'\n\n__all__ = [\n    'integer',\n    'int8',\n",
  "slicing": [
   "        value = int(value)\n",
   "        return struct.pack(self.endian(_struct)+self.__TYPE__, value)\n",
   "        data = reader.read(self.size)\n",
   "        if len(data) != self.size:\n",
   "                self.size, repr(data))\n",
   "        value = struct.unpack(self.endian(_struct)+self.__TYPE__, data)[0]\n",
   "            return self.enum(value)\n",
   "            return value\n",
   "class uint64(integer): __TYPE__ = 'Q'\n"
  ]
 },
 "15": {
  "name": "default",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/bitfield.py",
  "lineno": "23",
  "column": "4",
  "context": "         enum before returning them.\n\n    '''\n    default = 0\n    __SHOW__ = True\n    def __init__(self, field, ",
  "context_lines": "            automatically positioned BitFields.\n        enum (enum.Enum): If set, attempts to convert values to members of the\n            enum before returning them.\n\n    '''\n    default = 0\n    __SHOW__ = True\n    def __init__(self, field, size, shift=None, enum=None):\n        if shift == None:\n            shift = field.current_offset\n",
  "slicing": "    default = 0\n"
 },
 "16": {
  "name": "shift",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/pyndata/bitfield.py",
  "lineno": "27",
  "column": "12",
  "context": "enum=None):\n        if shift == None:\n            shift = field.current_offset\n            field.current_offset += size\n        s",
  "context_lines": "    default = 0\n    __SHOW__ = True\n    def __init__(self, field, size, shift=None, enum=None):\n        if shift == None:\n            shift = field.current_offset\n            field.current_offset += size\n        self.__index__ = __nextfield__()\n        self.field = field\n        self.mask = ((1 << size)-1) << shift\n",
  "slicing": [
   "            shift = field.current_offset\n",
   "        self.mask = ((1 << size)-1) << shift\n",
   "        self.shift = shift\n"
  ]
 },
 "17": {
  "name": "UNKNOWN",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "9",
  "column": "4",
  "context": "EA = 112 << 10\n\n\nclass NVTypes(enum.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UIN",
  "context_lines": "import xdrlib\n\nimport enum\n\nNVAREA = 112 << 10\n\n\nclass NVTypes(enum.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n",
  "slicing": "    UNKNOWN = 0\n"
 },
 "18": {
  "name": "BOOLEAN",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "10",
  "column": "4",
  "context": "\nclass NVTypes(enum.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT3",
  "context_lines": "import enum\n\nNVAREA = 112 << 10\n\n\nclass NVTypes(enum.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n",
  "slicing": "    BOOLEAN = 1\n"
 },
 "19": {
  "name": "BYTE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "11",
  "column": "4",
  "context": "num.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UIN",
  "context_lines": "NVAREA = 112 << 10\n\n\nclass NVTypes(enum.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n",
  "slicing": "    BYTE = 2\n"
 },
 "20": {
  "name": "INT16",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "12",
  "column": "4",
  "context": "\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    IN",
  "context_lines": "class NVTypes(enum.IntEnum):\n    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n",
  "slicing": "    INT16 = 3\n"
 },
 "21": {
  "name": "UINT16",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "13",
  "column": "4",
  "context": " 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UIN",
  "context_lines": "    UNKNOWN = 0\n    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n",
  "slicing": "    UINT16 = 4\n"
 },
 "22": {
  "name": "INT32",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "14",
  "column": "4",
  "context": "= 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    ST",
  "context_lines": "    BOOLEAN = 1\n    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n",
  "slicing": "    INT32 = 5\n"
 },
 "23": {
  "name": "UINT32",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "15",
  "column": "4",
  "context": " 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BY",
  "context_lines": "    BYTE = 2\n    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n",
  "slicing": "    UINT32 = 6\n"
 },
 "24": {
  "name": "INT64",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "16",
  "column": "4",
  "context": "3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n",
  "context_lines": "    INT16 = 3\n    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n",
  "slicing": "    INT64 = 7\n"
 },
 "25": {
  "name": "UINT64",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "17",
  "column": "4",
  "context": " 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY",
  "context_lines": "    UINT16 = 4\n    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n",
  "slicing": "    UINT64 = 8\n"
 },
 "26": {
  "name": "STRING",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "18",
  "column": "4",
  "context": "5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT1",
  "context_lines": "    INT32 = 5\n    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n",
  "slicing": "    STRING = 9\n"
 },
 "27": {
  "name": "BYTE_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "19",
  "column": "4",
  "context": "6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT",
  "context_lines": "    UINT32 = 6\n    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n",
  "slicing": "    BYTE_ARRAY = 10\n"
 },
 "28": {
  "name": "INT16_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "20",
  "column": "4",
  "context": "UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UIN",
  "context_lines": "    INT64 = 7\n    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n",
  "slicing": "    INT16_ARRAY = 11\n"
 },
 "29": {
  "name": "UINT16_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "21",
  "column": "4",
  "context": " = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT",
  "context_lines": "    UINT64 = 8\n    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n",
  "slicing": "    UINT16_ARRAY = 12\n"
 },
 "30": {
  "name": "INT32_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "22",
  "column": "4",
  "context": "10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UIN",
  "context_lines": "    STRING = 9\n    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n",
  "slicing": "    INT32_ARRAY = 13\n"
 },
 "31": {
  "name": "UINT32_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "23",
  "column": "4",
  "context": "11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STR",
  "context_lines": "    BYTE_ARRAY = 10\n    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n",
  "slicing": "    UINT32_ARRAY = 14\n"
 },
 "32": {
  "name": "INT64_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "24",
  "column": "4",
  "context": "12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HR",
  "context_lines": "    INT16_ARRAY = 11\n    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n",
  "slicing": "    INT64_ARRAY = 15\n"
 },
 "33": {
  "name": "UINT64_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "25",
  "column": "4",
  "context": "13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST =",
  "context_lines": "    UINT16_ARRAY = 12\n    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n",
  "slicing": "    UINT64_ARRAY = 16\n"
 },
 "34": {
  "name": "STRING_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "26",
  "column": "4",
  "context": "14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY =",
  "context_lines": "    INT32_ARRAY = 13\n    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n",
  "slicing": "    STRING_ARRAY = 17\n"
 },
 "35": {
  "name": "HRTIME",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "27",
  "column": "4",
  "context": "5\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_",
  "context_lines": "    UINT32_ARRAY = 14\n    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n",
  "slicing": "    HRTIME = 18\n"
 },
 "36": {
  "name": "NVLIST",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "28",
  "column": "4",
  "context": "AY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    I",
  "context_lines": "    INT64_ARRAY = 15\n    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n",
  "slicing": "    NVLIST = 19\n"
 },
 "37": {
  "name": "NVLIST_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "29",
  "column": "4",
  "context": "NG_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 2",
  "context_lines": "    UINT64_ARRAY = 16\n    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n",
  "slicing": "    NVLIST_ARRAY = 20\n"
 },
 "38": {
  "name": "BOOLEAN_VALUE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "30",
  "column": "4",
  "context": "ME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 2",
  "context_lines": "    STRING_ARRAY = 17\n    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\n",
  "slicing": "    BOOLEAN_VALUE = 21\n"
 },
 "39": {
  "name": "INT8",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "31",
  "column": "4",
  "context": "\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARR",
  "context_lines": "    HRTIME = 18\n    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass NVList(xdrlib.Unpacker):\n",
  "slicing": "    INT8 = 22\n"
 },
 "40": {
  "name": "UINT8",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "32",
  "column": "4",
  "context": "RAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass",
  "context_lines": "    NVLIST = 19\n    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass NVList(xdrlib.Unpacker):\n    def unpack_nvlist(self):\n",
  "slicing": "    UINT8 = 23\n"
 },
 "41": {
  "name": "BOOLEAN_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "33",
  "column": "4",
  "context": "OLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass NVList(xdrlib.Unpacker",
  "context_lines": "    NVLIST_ARRAY = 20\n    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass NVList(xdrlib.Unpacker):\n    def unpack_nvlist(self):\n        if self.unpack_uint() != 16842752:\n",
  "slicing": "    BOOLEAN_ARRAY = 24\n"
 },
 "42": {
  "name": "INT8_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/nvlist/__init__.py",
  "lineno": "34",
  "column": "4",
  "context": "T8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass NVList(xdrlib.Unpacker):\n    def unpack_nv",
  "context_lines": "    BOOLEAN_VALUE = 21\n    INT8 = 22\n    UINT8 = 23\n    BOOLEAN_ARRAY = 24\n    INT8_ARRAY = 25\n\n\nclass NVList(xdrlib.Unpacker):\n    def unpack_nvlist(self):\n        if self.unpack_uint() != 16842752:\n",
  "slicing": "    INT8_ARRAY = 25\n"
 },
 "43": {
  "name": "INHERIT",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "7",
  "column": "4",
  "context": "ION = 5000\n\n\nclass Compression(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n",
  "context_lines": "import enum\n\nPOOL_VERSION = 5000\n\n\nclass Compression(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n",
  "slicing": "    INHERIT = 0\n"
 },
 "44": {
  "name": "ON",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "8",
  "column": "4",
  "context": "ss Compression(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 ",
  "context_lines": "import enum\n\nPOOL_VERSION = 5000\n\n\nclass Compression(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n",
  "slicing": "    ON = 1\n"
 },
 "45": {
  "name": "OFF",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "9",
  "column": "4",
  "context": "ion(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP",
  "context_lines": "POOL_VERSION = 5000\n\n\nclass Compression(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n",
  "slicing": "    OFF = 2\n"
 },
 "46": {
  "name": "LZJB",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "10",
  "column": "4",
  "context": "Enum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZ",
  "context_lines": "class Compression(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n",
  "slicing": "    LZJB = 3\n"
 },
 "47": {
  "name": "EMPTY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "11",
  "column": "4",
  "context": "HERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    G",
  "context_lines": "    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n",
  "slicing": "    EMPTY = 4\n"
 },
 "48": {
  "name": "GZIP_1",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "12",
  "column": "4",
  "context": "ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    G",
  "context_lines": "    ON = 1\n    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n",
  "slicing": "    GZIP_1 = 5\n"
 },
 "49": {
  "name": "GZIP_2",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "13",
  "column": "4",
  "context": "= 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    G",
  "context_lines": "    OFF = 2\n    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n",
  "slicing": "    GZIP_2 = 6\n"
 },
 "50": {
  "name": "GZIP_3",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "14",
  "column": "4",
  "context": "3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    ",
  "context_lines": "    LZJB = 3\n    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n",
  "slicing": "    GZIP_3 = 7\n"
 },
 "51": {
  "name": "GZIP_4",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "15",
  "column": "4",
  "context": "\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n   ",
  "context_lines": "    EMPTY = 4\n    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n",
  "slicing": "    GZIP_4 = 8\n"
 },
 "52": {
  "name": "GZIP_5",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "16",
  "column": "4",
  "context": "\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n  ",
  "context_lines": "    GZIP_1 = 5\n    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n",
  "slicing": "    GZIP_5 = 9\n"
 },
 "53": {
  "name": "GZIP_6",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "17",
  "column": "4",
  "context": "\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n  ",
  "context_lines": "    GZIP_2 = 6\n    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n",
  "slicing": "    GZIP_6 = 10\n"
 },
 "54": {
  "name": "GZIP_7",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "18",
  "column": "4",
  "context": "    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    L",
  "context_lines": "    GZIP_3 = 7\n    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\n",
  "slicing": "    GZIP_7 = 11\n"
 },
 "55": {
  "name": "GZIP_8",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "19",
  "column": "4",
  "context": "   GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass ",
  "context_lines": "    GZIP_4 = 8\n    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n",
  "slicing": "    GZIP_8 = 12\n"
 },
 "56": {
  "name": "GZIP_9",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "20",
  "column": "4",
  "context": "  GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.In",
  "context_lines": "    GZIP_5 = 9\n    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n",
  "slicing": "    GZIP_9 = 13\n"
 },
 "57": {
  "name": "ZLE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "21",
  "column": "4",
  "context": "  GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    I",
  "context_lines": "    GZIP_6 = 10\n    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n",
  "slicing": "    ZLE = 14\n"
 },
 "58": {
  "name": "LZ4",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "22",
  "column": "4",
  "context": "\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n  ",
  "context_lines": "    GZIP_7 = 11\n    GZIP_8 = 12\n    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n",
  "slicing": "    LZ4 = 15\n"
 },
 "59": {
  "name": "INHERIT",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "26",
  "column": "4",
  "context": "\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEAD",
  "context_lines": "    GZIP_9 = 13\n    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n",
  "slicing": "    INHERIT = 0\n"
 },
 "60": {
  "name": "ON",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "27",
  "column": "4",
  "context": "class Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ",
  "context_lines": "    ZLE = 14\n    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n",
  "slicing": "    ON = 1\n"
 },
 "61": {
  "name": "OFF",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "28",
  "column": "4",
  "context": "sum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n  ",
  "context_lines": "    LZ4 = 15\n\n\nclass Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n",
  "slicing": "    OFF = 2\n"
 },
 "62": {
  "name": "LABEL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "29",
  "column": "4",
  "context": "Enum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 =",
  "context_lines": "class Checksum(enum.IntEnum):\n    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n",
  "slicing": "    LABEL = 3\n"
 },
 "63": {
  "name": "GANG_HEADER",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "30",
  "column": "4",
  "context": "ERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = ",
  "context_lines": "    INHERIT = 0\n    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n",
  "slicing": "    GANG_HEADER = 4\n"
 },
 "64": {
  "name": "ZILOG",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "31",
  "column": "4",
  "context": "    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 =",
  "context_lines": "    ON = 1\n    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n",
  "slicing": "    ZILOG = 5\n"
 },
 "65": {
  "name": "FLETCHER_2",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "32",
  "column": "4",
  "context": "  LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n ",
  "context_lines": "    OFF = 2\n    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\n",
  "slicing": "    FLETCHER_2 = 6\n"
 },
 "66": {
  "name": "FLETCHER_4",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "33",
  "column": "4",
  "context": "G_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\n",
  "context_lines": "    LABEL = 3\n    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n",
  "slicing": "    FLETCHER_4 = 7\n"
 },
 "67": {
  "name": "SHA256",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "34",
  "column": "4",
  "context": "LOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSet",
  "context_lines": "    GANG_HEADER = 4\n    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n",
  "slicing": "    SHA256 = 8\n"
 },
 "68": {
  "name": "ZILOG2",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "35",
  "column": "4",
  "context": "TCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEn",
  "context_lines": "    ZILOG = 5\n    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n",
  "slicing": "    ZILOG2 = 9\n"
 },
 "69": {
  "name": "NOPARITY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "36",
  "column": "4",
  "context": " FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n",
  "context_lines": "    FLETCHER_2 = 6\n    FLETCHER_4 = 7\n    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n",
  "slicing": "    NOPARITY = 10\n"
 },
 "70": {
  "name": "NONE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "40",
  "column": "4",
  "context": "ITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryC",
  "context_lines": "    SHA256 = 8\n    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n",
  "slicing": "    NONE = 0\n"
 },
 "71": {
  "name": "META",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "41",
  "column": "4",
  "context": "ass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.En",
  "context_lines": "    ZILOG2 = 9\n    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n    read_all_dvas = True\n\n\n",
  "slicing": "    META = 1\n"
 },
 "72": {
  "name": "ZFS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "42",
  "column": "4",
  "context": "Type(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n    rea",
  "context_lines": "    NOPARITY = 10\n\n\nclass ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n    read_all_dvas = True\n\n\nclass ObjectType(enum.IntEnum):\n",
  "slicing": "    ZFS = 2\n"
 },
 "73": {
  "name": "ZVOL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "43",
  "column": "4",
  "context": "tEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n    read_all_dvas = ",
  "context_lines": "class ObjectSetType(enum.IntEnum):\n    NONE = 0\n    META = 1\n    ZFS = 2\n    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n    read_all_dvas = True\n\n\nclass ObjectType(enum.IntEnum):\n",
  "slicing": "    ZVOL = 3\n"
 },
 "74": {
  "name": "NONE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "51",
  "column": "4",
  "context": "dvas = True\n\n\nclass ObjectType(enum.IntEnum):\n    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_",
  "context_lines": "    ZVOL = 3\n\n\nclass TryConfig(enum.Enum):\n    read_all_dvas = True\n\n\nclass ObjectType(enum.IntEnum):\n    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n",
  "slicing": "    NONE = 0\n"
 },
 "75": {
  "name": "OBJECT_DIRECTORY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "52",
  "column": "4",
  "context": "\nclass ObjectType(enum.IntEnum):\n    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACK",
  "context_lines": "class TryConfig(enum.Enum):\n    read_all_dvas = True\n\n\nclass ObjectType(enum.IntEnum):\n    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n",
  "slicing": "    OBJECT_DIRECTORY = 1         # ZAP\n"
 },
 "76": {
  "name": "OBJECT_ARRAY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "53",
  "column": "4",
  "context": "NE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by n",
  "context_lines": "    read_all_dvas = True\n\n\nclass ObjectType(enum.IntEnum):\n    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n",
  "slicing": "    OBJECT_ARRAY = 2             # UINT64\n"
 },
 "77": {
  "name": "PACKED_NVLIST",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "54",
  "column": "4",
  "context": "ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOB",
  "context_lines": "class ObjectType(enum.IntEnum):\n    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n",
  "slicing": "    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n"
 },
 "78": {
  "name": "PACKED_NVLIST_SIZE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "55",
  "column": "4",
  "context": "          # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOB",
  "context_lines": "    NONE = 0\n    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n",
  "slicing": "    PACKED_NVLIST_SIZE = 4       # UINT64\n"
 },
 "79": {
  "name": "BPOBJ",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "56",
  "column": "4",
  "context": "ck)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPAC",
  "context_lines": "    OBJECT_DIRECTORY = 1         # ZAP\n    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n",
  "slicing": "    BPOBJ = 5                    # UINT64\n"
 },
 "80": {
  "name": "BPOBJ_HDR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "57",
  "column": "4",
  "context": "T64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPAC",
  "context_lines": "    OBJECT_ARRAY = 2             # UINT64\n    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n",
  "slicing": "    BPOBJ_HDR = 6                # UINT64\n"
 },
 "81": {
  "name": "SPACE_MAP_HEADER",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "58",
  "column": "4",
  "context": "T64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTE",
  "context_lines": "    PACKED_NVLIST = 3            # UINT8 (XDR by nvlist_pack/unpack)\n    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n",
  "slicing": "    SPACE_MAP_HEADER = 7         # UINT64\n"
 },
 "82": {
  "name": "SPACE_MAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "59",
  "column": "4",
  "context": "T64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNOD",
  "context_lines": "    PACKED_NVLIST_SIZE = 4       # UINT64\n    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n",
  "slicing": "    SPACE_MAP = 8                # UINT64\n"
 },
 "83": {
  "name": "INTENT_LOG",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "60",
  "column": "4",
  "context": "T64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSE",
  "context_lines": "    BPOBJ = 5                    # UINT64\n    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n",
  "slicing": "    INTENT_LOG = 9               # UINT64\n"
 },
 "84": {
  "name": "DNODE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "61",
  "column": "4",
  "context": "T64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_",
  "context_lines": "    BPOBJ_HDR = 6                # UINT64\n    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n",
  "slicing": "    DNODE = 10                   # DNODE\n"
 },
 "85": {
  "name": "OBJSET",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "62",
  "column": "4",
  "context": "NT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_",
  "context_lines": "    SPACE_MAP_HEADER = 7         # UINT64\n    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n",
  "slicing": "    OBJSET = 11                  # OBJSET\n"
 },
 "86": {
  "name": "DSL_DIR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "63",
  "column": "4",
  "context": "ODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_",
  "context_lines": "    SPACE_MAP = 8                # UINT64\n    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n",
  "slicing": "    DSL_DIR = 12                 # UINT64\n"
 },
 "87": {
  "name": "DSL_DIR_CHILD_MAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "64",
  "column": "4",
  "context": "SET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PRO",
  "context_lines": "    INTENT_LOG = 9               # UINT64\n    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n",
  "slicing": "    DSL_DIR_CHILD_MAP = 13       # ZAP\n"
 },
 "88": {
  "name": "DSL_DS_SNAP_MAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "65",
  "column": "4",
  "context": "UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DAT",
  "context_lines": "    DNODE = 10                   # DNODE\n    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n",
  "slicing": "    DSL_DS_SNAP_MAP = 14         # ZAP\n"
 },
 "89": {
  "name": "DSL_PROPS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "66",
  "column": "4",
  "context": " # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNOD",
  "context_lines": "    OBJSET = 11                  # OBJSET\n    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n",
  "slicing": "    DSL_PROPS = 15               # ZAP\n"
 },
 "90": {
  "name": "DSL_DATASET",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "67",
  "column": "4",
  "context": " # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDAC",
  "context_lines": "    DSL_DIR = 12                 # UINT64\n    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n",
  "slicing": "    DSL_DATASET = 16             # UINT64\n"
 },
 "91": {
  "name": "ZNODE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "68",
  "column": "4",
  "context": "ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLA",
  "context_lines": "    DSL_DIR_CHILD_MAP = 13       # ZAP\n    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n",
  "slicing": "    ZNODE = 17                   # ZNODE\n"
 },
 "92": {
  "name": "OLDACL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "69",
  "column": "4",
  "context": "NT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIREC",
  "context_lines": "    DSL_DS_SNAP_MAP = 14         # ZAP\n    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n",
  "slicing": "    OLDACL = 18                  # Old ACL\n"
 },
 "93": {
  "name": "PLAIN_FILE_CONTENTS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "70",
  "column": "4",
  "context": "DE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_",
  "context_lines": "    DSL_PROPS = 15               # ZAP\n    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n",
  "slicing": "    PLAIN_FILE_CONTENTS = 19     # UINT8\n"
 },
 "94": {
  "name": "DIRECTORY_CONTENTS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "71",
  "column": "4",
  "context": " ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKE",
  "context_lines": "    DSL_DATASET = 16             # UINT64\n    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n",
  "slicing": "    DIRECTORY_CONTENTS = 20      # ZAP\n"
 },
 "95": {
  "name": "MASTER_NODE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "72",
  "column": "4",
  "context": " UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = ",
  "context_lines": "    ZNODE = 17                   # ZNODE\n    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n",
  "slicing": "    MASTER_NODE = 21             # ZAP\n"
 },
 "96": {
  "name": "UNLINKED_SET",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "73",
  "column": "4",
  "context": " # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_",
  "context_lines": "    OLDACL = 18                  # Old ACL\n    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n",
  "slicing": "    UNLINKED_SET = 22            # ZAP\n"
 },
 "97": {
  "name": "ZVOL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "74",
  "column": "4",
  "context": " # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_O",
  "context_lines": "    PLAIN_FILE_CONTENTS = 19     # UINT8\n    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n",
  "slicing": "    ZVOL = 23                    # UINT8\n"
 },
 "98": {
  "name": "ZVOL_PROP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "75",
  "column": "4",
  "context": " ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT6",
  "context_lines": "    DIRECTORY_CONTENTS = 20      # ZAP\n    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n",
  "slicing": "    ZVOL_PROP = 24               # ZAP\n"
 },
 "99": {
  "name": "PLAIN_OTHER",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "76",
  "column": "4",
  "context": " UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_",
  "context_lines": "    MASTER_NODE = 21             # ZAP\n    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n",
  "slicing": "    PLAIN_OTHER = 25             # UINT8\n"
 },
 "100": {
  "name": "UINT64_OTHER",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "77",
  "column": "4",
  "context": " ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_L",
  "context_lines": "    UNLINKED_SET = 22            # ZAP\n    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n",
  "slicing": "    UINT64_OTHER = 26            # UINT64\n"
 },
 "101": {
  "name": "ZAP_OTHER",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "78",
  "column": "4",
  "context": "NT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HIS",
  "context_lines": "    ZVOL = 23                    # UINT8\n    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n",
  "slicing": "    ZAP_OTHER = 27               # ZAP\n"
 },
 "102": {
  "name": "ERROR_LOG",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "79",
  "column": "4",
  "context": "UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_H",
  "context_lines": "    ZVOL_PROP = 24               # ZAP\n    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n",
  "slicing": "    ERROR_LOG = 28               # ZAP\n"
 },
 "103": {
  "name": "SPA_HISTORY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "80",
  "column": "4",
  "context": " # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n",
  "context_lines": "    PLAIN_OTHER = 25             # UINT8\n    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n",
  "slicing": "    SPA_HISTORY = 29             # UINT8\n"
 },
 "104": {
  "name": "SPA_HISTORY_OFFSETS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "81",
  "column": "4",
  "context": " ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PER",
  "context_lines": "    UINT64_OTHER = 26            # UINT64\n    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n",
  "slicing": "    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n"
 },
 "105": {
  "name": "POOL_PROPS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "82",
  "column": "4",
  "context": "SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 3",
  "context_lines": "    ZAP_OTHER = 27               # ZAP\n    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n",
  "slicing": "    POOL_PROPS = 31              # ZAP\n"
 },
 "106": {
  "name": "DSL_PERMS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "83",
  "column": "4",
  "context": "phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL ",
  "context_lines": "    ERROR_LOG = 28               # ZAP\n    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n",
  "slicing": "    DSL_PERMS = 32               # ZAP\n"
 },
 "107": {
  "name": "ACL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "84",
  "column": "4",
  "context": " # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID",
  "context_lines": "    SPA_HISTORY = 29             # UINT8\n    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n",
  "slicing": "    ACL = 33                     # ACL\n"
 },
 "108": {
  "name": "SYSACL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "85",
  "column": "4",
  "context": " # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Pac",
  "context_lines": "    SPA_HISTORY_OFFSETS = 30     # spa_his_phys_t\n    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n",
  "slicing": "    SYSACL = 34                  # SYSACL\n"
 },
 "109": {
  "name": "FUID",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "86",
  "column": "4",
  "context": "ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size",
  "context_lines": "    POOL_PROPS = 31              # ZAP\n    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n",
  "slicing": "    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n"
 },
 "110": {
  "name": "FUID_SIZE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "87",
  "column": "4",
  "context": "           # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QU",
  "context_lines": "    DSL_PERMS = 32               # ZAP\n    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n",
  "slicing": "    FUID_SIZE = 36               # FUID table size UINT64\n"
 },
 "111": {
  "name": "NEXT_CLONES",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "88",
  "column": "4",
  "context": "E = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGRO",
  "context_lines": "    ACL = 33                     # ACL\n    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n",
  "slicing": "    NEXT_CLONES = 37             # ZAP\n"
 },
 "112": {
  "name": "SCAN_QUEUE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "89",
  "column": "4",
  "context": "UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGRO",
  "context_lines": "    SYSACL = 34                  # SYSACL\n    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n",
  "slicing": "    SCAN_QUEUE = 38              # ZAP\n"
 },
 "113": {
  "name": "USERGROUP_USED",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "90",
  "column": "4",
  "context": " # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREF",
  "context_lines": "    FUID = 35                    # FUID table (Packed NVLIST UINT8)\n    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n",
  "slicing": "    USERGROUP_USED = 39          # ZAP\n"
 },
 "114": {
  "name": "USERGROUP_QUOTA",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "91",
  "column": "4",
  "context": " # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP",
  "context_lines": "    FUID_SIZE = 36               # FUID table size UINT64\n    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n",
  "slicing": "    USERGROUP_QUOTA = 40         # ZAP\n"
 },
 "115": {
  "name": "USERREFS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "92",
  "column": "4",
  "context": " # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STA",
  "context_lines": "    NEXT_CLONES = 37             # ZAP\n    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n",
  "slicing": "    USERREFS = 41                # ZAP\n"
 },
 "116": {
  "name": "DDT_ZAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "93",
  "column": "4",
  "context": " # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44",
  "context_lines": "    SCAN_QUEUE = 38              # ZAP\n    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n",
  "slicing": "    DDT_ZAP = 42                 # ZAP\n"
 },
 "117": {
  "name": "DDT_STATS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "94",
  "column": "4",
  "context": " # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n   ",
  "context_lines": "    USERGROUP_USED = 39          # ZAP\n    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n",
  "slicing": "    DDT_STATS = 43               # ZAP\n"
 },
 "118": {
  "name": "SA",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "95",
  "column": "4",
  "context": " # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR",
  "context_lines": "    USERGROUP_QUOTA = 40         # ZAP\n    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n",
  "slicing": "    SA = 44                      # System attr\n"
 },
 "119": {
  "name": "SA_MASTER_NODE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "96",
  "column": "4",
  "context": "   SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR",
  "context_lines": "    USERREFS = 41                # ZAP\n    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n",
  "slicing": "    SA_MASTER_NODE = 45          # ZAP\n"
 },
 "120": {
  "name": "SA_ATTR_REGISTRATION",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "97",
  "column": "4",
  "context": "m attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XL",
  "context_lines": "    DDT_ZAP = 42                 # ZAP\n    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n",
  "slicing": "    SA_ATTR_REGISTRATION = 46    # ZAP\n"
 },
 "121": {
  "name": "SA_ATTR_LAYOUTS",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "98",
  "column": "4",
  "context": " # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP =",
  "context_lines": "    DDT_STATS = 43               # ZAP\n    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n",
  "slicing": "    SA_ATTR_LAYOUTS = 47         # ZAP\n"
 },
 "122": {
  "name": "SCAN_XLATE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "99",
  "column": "4",
  "context": " # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP f",
  "context_lines": "    SA = 44                      # System attr\n    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n",
  "slicing": "    SCAN_XLATE = 48              # ZAP\n"
 },
 "123": {
  "name": "DEDUP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "100",
  "column": "4",
  "context": " # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIS",
  "context_lines": "    SA_MASTER_NODE = 45          # ZAP\n    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n",
  "slicing": "    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n"
 },
 "124": {
  "name": "DEADLIST",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "101",
  "column": "4",
  "context": "         # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_",
  "context_lines": "    SA_ATTR_REGISTRATION = 46    # ZAP\n    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\n",
  "slicing": "    DEADLIST = 50                # ZAP\n"
 },
 "125": {
  "name": "DEADLIST_HDR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "102",
  "column": "4",
  "context": "eate()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_S",
  "context_lines": "    SA_ATTR_LAYOUTS = 47         # ZAP\n    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n",
  "slicing": "    DEADLIST_HDR = 51            # UINT64\n"
 },
 "126": {
  "name": "DSL_CLONES",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "103",
  "column": "4",
  "context": "ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEAT",
  "context_lines": "    SCAN_XLATE = 48              # ZAP\n    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n",
  "slicing": "    DSL_CLONES = 52              # ZAP\n"
 },
 "127": {
  "name": "BPOBJ_SUBOBJ",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "104",
  "column": "4",
  "context": "UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZIL",
  "context_lines": "    DEDUP = 49                   # fake dedup BP from ddt_bp_create()\n    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n",
  "slicing": "    BPOBJ_SUBOBJ = 53            # UINT64\n"
 },
 "128": {
  "name": "FEATURE_DESCRIPTION",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "105",
  "column": "4",
  "context": "ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1    ",
  "context_lines": "    DEADLIST = 50                # ZAP\n    DEADLIST_HDR = 51            # UINT64\n    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n",
  "slicing": "    FEATURE_DESCRIPTION = 196    # ZAP\n"
 },
 "129": {
  "name": "CREATE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "109",
  "column": "4",
  "context": " 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = ",
  "context_lines": "    DSL_CLONES = 52              # ZAP\n    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n",
  "slicing": "    CREATE = 1     # Create file\n"
 },
 "130": {
  "name": "MKDIR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "110",
  "column": "4",
  "context": "um.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYML",
  "context_lines": "    BPOBJ_SUBOBJ = 53            # UINT64\n    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n",
  "slicing": "    MKDIR = 2      # Make directory\n"
 },
 "131": {
  "name": "MKXATTR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "111",
  "column": "4",
  "context": "eate file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a fil",
  "context_lines": "    FEATURE_DESCRIPTION = 196    # ZAP\n\n\nclass ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n",
  "slicing": "    MKXATTR = 3    # Make XATTR directory\n"
 },
 "132": {
  "name": "SYMLINK",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "112",
  "column": "4",
  "context": "ory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6    ",
  "context_lines": "class ZILTypes(enum.IntEnum):\n    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n",
  "slicing": "    SYMLINK = 4    # Create symbolic link to a file\n"
 },
 "133": {
  "name": "REMOVE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "113",
  "column": "4",
  "context": "MLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7",
  "context_lines": "    CREATE = 1     # Create file\n    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n",
  "slicing": "    REMOVE = 5     # Remove file\n"
 },
 "134": {
  "name": "RMDIR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "114",
  "column": "4",
  "context": "nk to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n  ",
  "context_lines": "    MKDIR = 2      # Make directory\n    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n",
  "slicing": "    RMDIR = 6      # Remove directory\n"
 },
 "135": {
  "name": "LINK",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "115",
  "column": "4",
  "context": "ve file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9  ",
  "context_lines": "    MKXATTR = 3    # Make XATTR directory\n    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n",
  "slicing": "    LINK = 7       # Create hard link to a file\n"
 },
 "136": {
  "name": "RENAME",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "116",
  "column": "4",
  "context": "  LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10 ",
  "context_lines": "    SYMLINK = 4    # Create symbolic link to a file\n    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\n",
  "slicing": "    RENAME = 8     # Rename a file\n"
 },
 "137": {
  "name": "WRITE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "117",
  "column": "4",
  "context": " to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR =",
  "context_lines": "    REMOVE = 5     # Remove file\n    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n",
  "slicing": "    WRITE = 9      # File write\n"
 },
 "138": {
  "name": "TRUNCATE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "118",
  "column": "4",
  "context": "Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL =",
  "context_lines": "    RMDIR = 6      # Remove directory\n    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n",
  "slicing": "    TRUNCATE = 10  # Truncate a file\n"
 },
 "139": {
  "name": "SETATTR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "119",
  "column": "4",
  "context": "le write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.",
  "context_lines": "    LINK = 7       # Create hard link to a file\n    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n",
  "slicing": "    SETATTR = 11   # Set file attributes\n"
 },
 "140": {
  "name": "ACL",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "120",
  "column": "4",
  "context": "file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << ",
  "context_lines": "    RENAME = 8     # Rename a file\n    WRITE = 9      # File write\n    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n",
  "slicing": "    ACL = 12       # Set acl\n"
 },
 "141": {
  "name": "ZAPHeader",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "124",
  "column": "4",
  "context": "2       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n    MicroZAP = (1 << 63) + 3",
  "context_lines": "    TRUNCATE = 10  # Truncate a file\n    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n",
  "slicing": "    ZAPHeader = (1 << 63) + 1\n"
 },
 "142": {
  "name": "ZAPLeaf",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "125",
  "column": "4",
  "context": "ype(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n    MicroZAP = (1 << 63) + 3\n",
  "context_lines": "    SETATTR = 11   # Set file attributes\n    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n",
  "slicing": "    ZAPLeaf = 1 << 63\n"
 },
 "143": {
  "name": "MicroZAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/constants.py",
  "lineno": "126",
  "column": "4",
  "context": "PHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n    MicroZAP = (1 << 63) + 3\n",
  "context_lines": "    ACL = 12       # Set acl\n\n\nclass ZapType(enum.Enum):\n    ZAPHeader = (1 << 63) + 1\n    ZAPLeaf = 1 << 63\n    MicroZAP = (1 << 63) + 3\n",
  "slicing": "    MicroZAP = (1 << 63) + 3\n"
 },
 "144": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/fatzap.py",
  "lineno": "20",
  "column": "4",
  "context": "ogger(__name__)\n\n\nclass PointerTable(Struct):\n    __ENDIAN__ = 'little'\n    block = uint64()\n    num_blocks = uint64()\n   ",
  "context_lines": "from pyndata import *\n\nfrom .. import constants\n\nlogger = logging.getLogger(__name__)\n\n\nclass PointerTable(Struct):\n    __ENDIAN__ = 'little'\n    block = uint64()\n    num_blocks = uint64()\n    shift = uint64()\n    next_block = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "145": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/fatzap.py",
  "lineno": "29",
  "column": "4",
  "context": "copied = uint64()\n\n\nclass LeafHeader(Struct):\n    __ENDIAN__ = 'little'\n    header = uint64(enum=constants.ZapType)\n    ne",
  "context_lines": "    shift = uint64()\n    next_block = uint64()\n    blocks_copied = uint64()\n\n\nclass LeafHeader(Struct):\n    __ENDIAN__ = 'little'\n    header = uint64(enum=constants.ZapType)\n    next = uint64()\n    prefix = uint64()\n    magic = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "146": {
  "name": "ZAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/fatzap.py",
  "lineno": "44",
  "column": "8",
  "context": "der(Struct):\n\n    class MAGIC(enum.Enum):\n        ZAP = 0x2F52AB2AB\n\n    __ENDIAN__ = 'little'\n    block_type = uint64",
  "context_lines": "    freelist = uint16()\n    _padding = padding(length=2)\n\n\nclass FatZAPHeader(Struct):\n\n    class MAGIC(enum.Enum):\n        ZAP = 0x2F52AB2AB\n\n    __ENDIAN__ = 'little'\n    block_type = uint64(enum=constants.ZapType)\n    magic = uint64(enum=MAGIC)\n",
  "slicing": "        ZAP = 0x2F52AB2AB\n"
 },
 "147": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/fatzap.py",
  "lineno": "46",
  "column": "4",
  "context": " MAGIC(enum.Enum):\n        ZAP = 0x2F52AB2AB\n\n    __ENDIAN__ = 'little'\n    block_type = uint64(enum=constants.ZapType)\n  ",
  "context_lines": "    _padding = padding(length=2)\n\n\nclass FatZAPHeader(Struct):\n\n    class MAGIC(enum.Enum):\n        ZAP = 0x2F52AB2AB\n\n    __ENDIAN__ = 'little'\n    block_type = uint64(enum=constants.ZapType)\n    magic = uint64(enum=MAGIC)\n    ptr_info = PointerTable()\n    first_free = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "148": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/fatzap.py",
  "lineno": "57",
  "column": "4",
  "context": "   salt = uint64()\n\n\nclass LeafChunk(Struct):\n    __ENDIAN__ = 'little'\n    chunk_type = uint8()\n    data = bytestring(len",
  "context_lines": "    num_leafs = uint64()\n    num_entries = uint64()\n    salt = uint64()\n\n\nclass LeafChunk(Struct):\n    __ENDIAN__ = 'little'\n    chunk_type = uint8()\n    data = bytestring(length=23)\n\n\nclass LeafType(Struct):\n    pass\n\n\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "149": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "18",
  "column": "4",
  "context": "nts\nfrom . import fatzap\n\n\nclass dva(Struct):\n    __ENDIAN__ = 'little'\n\n    _first = uint64()\n    vdev = BitField(_first,",
  "context_lines": "from pyndata import uint8\n\nfrom .. import constants\nfrom . import fatzap\n\n\nclass dva(Struct):\n    __ENDIAN__ = 'little'\n\n    _first = uint64()\n    vdev = BitField(_first, 32, 32)\n    grid = BitField(_first, 8, 23)\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "150": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "33",
  "column": "4",
  "context": "9, self.asize << 9)\n\n\nclass Blockptr(Struct):\n    __ENDIAN__ = 'little'\n\n    dvas = array(dva(), length=3)\n    _prop = uin",
  "context_lines": "    offset = BitField(_offset, 63, 0)\n\n    def __repr__(self):\n        return '{}:{:X}:{:X}'.format(self.vdev, self.offset << 9, self.asize << 9)\n\n\nclass Blockptr(Struct):\n    __ENDIAN__ = 'little'\n\n    dvas = array(dva(), length=3)\n    _prop = uint64()\n    logical_size = BitField(_prop, 16, 0)\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "151": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "60",
  "column": "4",
  "context": "raw_blkptr)\n\n\nclass EmbeddedBlockptr(Struct):\n    __ENDIAN__ = 'little'\n\n    data1 = bytestring(length=6*8)\n    _prop = ui",
  "context_lines": "    def to_embedded(self):\n        raw_blkptr = self.pack()\n        return EmbeddedBlockptr(raw_blkptr)\n\n\nclass EmbeddedBlockptr(Struct):\n    __ENDIAN__ = 'little'\n\n    data1 = bytestring(length=6*8)\n    _prop = uint64()\n    logical_size = BitField(_prop, 25)\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "152": {
  "name": "MAGIC",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "86",
  "column": "4",
  "context": "       return data\n\n\nclass GangBlock(Struct):\n    MAGIC = 0x210da7ab10c7a11\n    blocks = array(Blockptr(), length=3)\n    _pad ",
  "context_lines": "        data = self.data1 + self.data2 + self.data3\n        assert len(data) == 112\n        return data\n\n\nclass GangBlock(Struct):\n    MAGIC = 0x210da7ab10c7a11\n    blocks = array(Blockptr(), length=3)\n    _pad = padding(length=88)\n    magic = uint64()\n    checksum = array(uint64(), 4)\n\n\n",
  "slicing": "    MAGIC = 0x210da7ab10c7a11\n"
 },
 "153": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "94",
  "column": "4",
  "context": "array(uint64(), 4)\n\n\nclass Uberblock(Struct):\n    __ENDIAN__ = 'little'\n    MAGIC = 0x00bab10c\n\n    magic = uint64()\n    v",
  "context_lines": "    _pad = padding(length=88)\n    magic = uint64()\n    checksum = array(uint64(), 4)\n\n\nclass Uberblock(Struct):\n    __ENDIAN__ = 'little'\n    MAGIC = 0x00bab10c\n\n    magic = uint64()\n    version = uint64()\n    txg = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "154": {
  "name": "MAGIC",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "95",
  "column": "4",
  "context": " Uberblock(Struct):\n    __ENDIAN__ = 'little'\n    MAGIC = 0x00bab10c\n\n    magic = uint64()\n    version = uint64()\n    t",
  "context_lines": "    magic = uint64()\n    checksum = array(uint64(), 4)\n\n\nclass Uberblock(Struct):\n    __ENDIAN__ = 'little'\n    MAGIC = 0x00bab10c\n\n    magic = uint64()\n    version = uint64()\n    txg = uint64()\n",
  "slicing": "    MAGIC = 0x00bab10c\n"
 },
 "155": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "115",
  "column": "4",
  "context": "ms\n        return True\n\n\nclass DNode(Struct):\n    __ENDIAN__ = 'little'\n\n    node_type = uint8(enum=constants.ObjectType)\n",
  "context_lines": "            return False\n        # TODO: validate checksums\n        return True\n\n\nclass DNode(Struct):\n    __ENDIAN__ = 'little'\n\n    node_type = uint8(enum=constants.ObjectType)\n    indirect_blockshift = uint8()\n    indirect_levels = uint8()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "156": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "163",
  "column": "4",
  "context": "\n    seq = uint64()\n\n\nclass ObjsetV1(Struct):\n    __ENDIAN__ = 'little'\n\n    meta_dnode = DNode()\n    zil_header = ZILHead",
  "context_lines": "    length = uint64()\n    txg = uint64()\n    seq = uint64()\n\n\nclass ObjsetV1(Struct):\n    __ENDIAN__ = 'little'\n\n    meta_dnode = DNode()\n    zil_header = ZILHeader()\n    os_type = uint64(enum=constants.ObjectSetType)\n\n\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "157": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "174",
  "column": "4",
  "context": "\nObjset = ObjsetV1\n\n\nclass ObjsetV15(Struct):\n    __ENDIAN__ = 'little'\n\n    meta_dnode = DNode()\n    zil_header = ZILHead",
  "context_lines": "    zil_header = ZILHeader()\n    os_type = uint64(enum=constants.ObjectSetType)\n\n\nObjset = ObjsetV1\n\n\nclass ObjsetV15(Struct):\n    __ENDIAN__ = 'little'\n\n    meta_dnode = DNode()\n    zil_header = ZILHeader()\n    os_type = uint64(enum=constants.ObjectSetType)\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "158": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "217",
  "column": "4",
  "context": " indirect_cache[size]\n\n\nclass DSLDir(Struct):\n    __ENDIAN__ = 'little'\n\n    creation_time = uint64()\n    head_dataset = u",
  "context_lines": "        IndirectBlock.__name__ = 'Indirect' + str(size)\n\n        indirect_cache[size] = IndirectBlock\n\n    return indirect_cache[size]\n\n\nclass DSLDir(Struct):\n    __ENDIAN__ = 'little'\n\n    creation_time = uint64()\n    head_dataset = uint64()\n    parent = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "159": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "233",
  "column": "4",
  "context": "ng(length=21 * 8)\n\n\nclass DSLDataset(Struct):\n    __ENDIAN__ = 'little'\n\n    dir = uint64()\n    prev_snapshot = uint64()\n ",
  "context_lines": "    quota = uint64()\n    props_zap = uint64()\n    _pad = padding(length=21 * 8)\n\n\nclass DSLDataset(Struct):\n    __ENDIAN__ = 'little'\n\n    dir = uint64()\n    prev_snapshot = uint64()\n    prev_snapshot_txg = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "160": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/__init__.py",
  "lineno": "256",
  "column": "4",
  "context": "ng(length=8 * 8)\n\n\nclass BPObjHeader(Struct):\n    __ENDIAN__ = 'little'\n\n    length = uint64()\n    unknown = array(uint16(",
  "context_lines": "    flags = uint64()\n    bp = Blockptr()\n    _pad = padding(length=8 * 8)\n\n\nclass BPObjHeader(Struct):\n    __ENDIAN__ = 'little'\n\n    length = uint64()\n    unknown = array(uint16(), length=20)\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "161": {
  "name": "ZAPLeaf",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "6",
  "column": "4",
  "context": "lstring, BitField\n\n\nclass ZapType(enum.Enum):\n    ZAPLeaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 <<",
  "context_lines": "import enum\nfrom pyndata import Struct, uint64, padding, uint32, uint16, nullstring, BitField\n\n\nclass ZapType(enum.Enum):\n    ZAPLeaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 << 63) + 3\n\n\nclass MicroZAPHeader(Struct):\n    __ENDIAN__ = 'little'\n\n",
  "slicing": "    ZAPLeaf = (1 << 63)\n"
 },
 "162": {
  "name": "ZAPHeader",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "7",
  "column": "4",
  "context": "s ZapType(enum.Enum):\n    ZAPLeaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 << 63) + 3\n\n\nclass MicroZAPHeade",
  "context_lines": "import enum\nfrom pyndata import Struct, uint64, padding, uint32, uint16, nullstring, BitField\n\n\nclass ZapType(enum.Enum):\n    ZAPLeaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 << 63) + 3\n\n\nclass MicroZAPHeader(Struct):\n    __ENDIAN__ = 'little'\n\n    block_type = uint64(enum=ZapType)\n",
  "slicing": "    ZAPHeader = (1 << 63) + 1\n"
 },
 "163": {
  "name": "MicroZAP",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "8",
  "column": "4",
  "context": "eaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 << 63) + 3\n\n\nclass MicroZAPHeader(Struct):\n    __ENDIAN__ = '",
  "context_lines": "from pyndata import Struct, uint64, padding, uint32, uint16, nullstring, BitField\n\n\nclass ZapType(enum.Enum):\n    ZAPLeaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 << 63) + 3\n\n\nclass MicroZAPHeader(Struct):\n    __ENDIAN__ = 'little'\n\n    block_type = uint64(enum=ZapType)\n",
  "slicing": "    MicroZAP = (1 << 63) + 3\n"
 },
 "164": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "12",
  "column": "4",
  "context": "(1 << 63) + 3\n\n\nclass MicroZAPHeader(Struct):\n    __ENDIAN__ = 'little'\n\n    block_type = uint64(enum=ZapType)\n    salt = ",
  "context_lines": "    ZAPLeaf = (1 << 63)\n    ZAPHeader = (1 << 63) + 1\n    MicroZAP = (1 << 63) + 3\n\n\nclass MicroZAPHeader(Struct):\n    __ENDIAN__ = 'little'\n\n    block_type = uint64(enum=ZapType)\n    salt = uint64()\n    flags = uint64()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "165": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "21",
  "column": "4",
  "context": "length=5 * 8)\n\n\nclass MicroZAPCommon(Struct):\n    __ENDIAN__ = 'little'\n\n    _pad = uint16()\n    collision = uint32()\n    ",
  "context_lines": "    salt = uint64()\n    flags = uint64()\n    _pad = padding(length=5 * 8)\n\n\nclass MicroZAPCommon(Struct):\n    __ENDIAN__ = 'little'\n\n    _pad = uint16()\n    collision = uint32()\n    name = nullstring(padded=True, max_length=50)\n\n\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "166": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "29",
  "column": "4",
  "context": "rue, max_length=50)\n\n\nclass MicroZAP(Struct):\n    __ENDIAN__ = 'little'\n\n    value = uint64()\n    hdr = MicroZAPCommon()\n\n",
  "context_lines": "    _pad = uint16()\n    collision = uint32()\n    name = nullstring(padded=True, max_length=50)\n\n\nclass MicroZAP(Struct):\n    __ENDIAN__ = 'little'\n\n    value = uint64()\n    hdr = MicroZAPCommon()\n\n\nclass SARegistrationMicroZAP(Struct):\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "167": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/ondisk/zap.py",
  "lineno": "36",
  "column": "4",
  "context": "mon()\n\n\nclass SARegistrationMicroZAP(Struct):\n    __ENDIAN__ = 'little'\n\n    _value = uint64()\n    attr_num = BitField(_va",
  "context_lines": "    __ENDIAN__ = 'little'\n\n    value = uint64()\n    hdr = MicroZAPCommon()\n\n\nclass SARegistrationMicroZAP(Struct):\n    __ENDIAN__ = 'little'\n\n    _value = uint64()\n    attr_num = BitField(_value, 8, 0)\n    byteswap = BitField(_value, 8, 16)\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "168": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/directory.py",
  "lineno": "21",
  "column": "4",
  "context": "uct):\n    # this is not a real on-disk struct\n    __ENDIAN__ = 'little'\n\n    name = pyndata.nullstring(max_length=256)\n   ",
  "context_lines": "from .attributes import PosixType\n\nlogger = logging.getLogger(__name__)\n\n\nclass DirectoryEntry(pyndata.Struct):\n    # this is not a real on-disk struct\n    __ENDIAN__ = 'little'\n\n    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = False\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "169": {
  "name": "name",
  "type": "pyndata.nullstring",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/directory.py",
  "lineno": "23",
  "column": "4",
  "context": "eal on-disk struct\n    __ENDIAN__ = 'little'\n\n    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = ",
  "context_lines": "logger = logging.getLogger(__name__)\n\n\nclass DirectoryEntry(pyndata.Struct):\n    # this is not a real on-disk struct\n    __ENDIAN__ = 'little'\n\n    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = False\n    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n    number = pyndata.BitField(value, 48)\n\n\n",
  "slicing": [
   "    name = pyndata.nullstring(max_length=256)\n",
   "    value = pyndata.uint64()\n",
   "    value.__SHOW__ = False\n",
   "    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n",
   "    number = pyndata.BitField(value, 48)\n",
   "        return name in self.entries\n",
   "        joined_path = os.path.join(self.path, name)\n",
   "        if name not in self.resolved_entries:\n",
   "                entry_value = self.entries[name]\n",
   "                entry = DirectoryEntry(name=name, value=entry_value)\n",
   "                obj = self.objectset[entry.number]\n",
   "                if isinstance(obj, (Directory, zfs.posix.File)):\n",
   "                    obj.path = joined_path\n",
   "                self.resolved_entries[name] = obj\n",
   "                logger.warning('directory lookup failed for {}'.format(joined_path))\n",
   "                raise FileNotFoundError(joined_path)\n",
   "        return self.resolved_entries[name]\n"
  ]
 },
 "170": {
  "name": "value",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/directory.py",
  "lineno": "24",
  "column": "4",
  "context": "    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = False\n    object_type = pynda",
  "context_lines": "class DirectoryEntry(pyndata.Struct):\n    # this is not a real on-disk struct\n    __ENDIAN__ = 'little'\n\n    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = False\n    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n    number = pyndata.BitField(value, 48)\n\n\nclass Directory(PosixObject):\n",
  "slicing": [
   "    value = pyndata.uint64()\n",
   "    value.__SHOW__ = False\n",
   "    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n",
   "    number = pyndata.BitField(value, 48)\n"
  ]
 },
 "171": {
  "name": "object_type",
  "type": "pyndata.BitField",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/directory.py",
  "lineno": "26",
  "column": "4",
  "context": "= pyndata.uint64()\n    value.__SHOW__ = False\n    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n    number = pyndata.BitField(value, 48)\n\n\nclass D",
  "context_lines": "    __ENDIAN__ = 'little'\n\n    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = False\n    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n    number = pyndata.BitField(value, 48)\n\n\nclass Directory(PosixObject):\n    def __init__(self, dnode, entries, dataset, objectset, path=None):\n        super().__init__(dnode, dataset)\n",
  "slicing": [
   "    value = pyndata.uint64()\n",
   "    value.__SHOW__ = False\n",
   "    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n",
   "    number = pyndata.BitField(value, 48)\n"
  ]
 },
 "172": {
  "name": "number",
  "type": "pyndata.BitField",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/directory.py",
  "lineno": "27",
  "column": "4",
  "context": "yndata.BitField(value, 4, 60, enum=PosixType)\n    number = pyndata.BitField(value, 48)\n\n\nclass Directory(PosixObject):\n    def __init__(s",
  "context_lines": "    name = pyndata.nullstring(max_length=256)\n    value = pyndata.uint64()\n    value.__SHOW__ = False\n    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n    number = pyndata.BitField(value, 48)\n\n\nclass Directory(PosixObject):\n    def __init__(self, dnode, entries, dataset, objectset, path=None):\n        super().__init__(dnode, dataset)\n",
  "slicing": [
   "    value = pyndata.uint64()\n",
   "    value.__SHOW__ = False\n",
   "    object_type = pyndata.BitField(value, 4, 60, enum=PosixType)\n",
   "    number = pyndata.BitField(value, 48)\n"
  ]
 },
 "173": {
  "name": "magic",
  "type": "pyndata.bytestring",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/systemattributes.py",
  "lineno": "69",
  "column": "4",
  "context": "\n\nclass SystemAttributeMagic(pyndata.Struct):\n    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndat",
  "context_lines": "    'ZPL_DACL_ACES': dacl_entries,\n    'ZPL_SYMLINK': symlink,\n}\n\n\nclass SystemAttributeMagic(pyndata.Struct):\n    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n\n\n",
  "slicing": [
   "logger = logging.getLogger(__name__)\n",
   "def simple_attribute(data, attrs):\n",
   "    attr = simple_attribute(data, attrs)\n",
   "    logger.info(attr)\n",
   "    return attr\n",
   "def eat_remainder(data, attrs):\n",
   "    d = data.read()\n",
   "    return d\n",
   "    return eat_remainder(data, attrs).decode('utf-8')\n",
   "    if 'ZPL_DACL_COUNT' not in attrs:\n",
   "        logger.error('found acl entry but no count!')\n",
   "    count = attrs['ZPL_DACL_COUNT']\n",
   "    acls = []\n",
   "    for x in range(count):\n",
   "        acls.append(data.read(8))\n",
   "    logger.debug(f'{data.tell()}/{len(data.getvalue())}')\n",
   "    return acls\n",
   "def no_attrs(f):\n",
   "        return f(data)\n",
   "    'ZPL_MODE': no_attrs(Mode),\n",
   "    'ZPL_ATIME': no_attrs(Timestamp),\n",
   "    'ZPL_MTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CRTIME': no_attrs(Timestamp),\n",
   "    magic = pyndata.bytestring(length=4)\n",
   "        attributes = {}\n",
   "        logger.debug(repr(data[:4]))\n",
   "        data = BytesIO(data)\n",
   "        attributes['header'] = hdr = SystemAttributeMagic(data)\n",
   "        logger.debug(hdr)\n",
   "        for attr in self.dataset.attributes(str(hdr.layout)):\n",
   "            name = attr['name']\n",
   "            logger.debug(f'processing attr {name}')\n",
   "            if attr['length'] > 0:\n",
   "                d = data.read(attr['length'])\n",
   "                d = data\n",
   "            if name not in SYSTEM_ATTRIBUTES:\n",
   "                logger.debug('unknown attribute {}'.format(attr))\n",
   "            attributes[name] = SYSTEM_ATTRIBUTES.get(name, eat_remainder)(d, attrs=attributes)\n",
   "        return attributes\n"
  ]
 },
 "174": {
  "name": "layout",
  "type": "pyndata.uint8",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/systemattributes.py",
  "lineno": "70",
  "column": "4",
  "context": "ct):\n    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pynd",
  "context_lines": "    'ZPL_SYMLINK': symlink,\n}\n\n\nclass SystemAttributeMagic(pyndata.Struct):\n    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n\n\nclass SystemAttributes(object):\n",
  "slicing": [
   "logger = logging.getLogger(__name__)\n",
   "def simple_attribute(data, attrs):\n",
   "    attr = simple_attribute(data, attrs)\n",
   "    logger.info(attr)\n",
   "    return attr\n",
   "def eat_remainder(data, attrs):\n",
   "    d = data.read()\n",
   "    return d\n",
   "    return eat_remainder(data, attrs).decode('utf-8')\n",
   "    if 'ZPL_DACL_COUNT' not in attrs:\n",
   "        logger.error('found acl entry but no count!')\n",
   "    count = attrs['ZPL_DACL_COUNT']\n",
   "    acls = []\n",
   "    for x in range(count):\n",
   "        acls.append(data.read(8))\n",
   "    logger.debug(f'{data.tell()}/{len(data.getvalue())}')\n",
   "    return acls\n",
   "def no_attrs(f):\n",
   "        return f(data)\n",
   "    'ZPL_MODE': no_attrs(Mode),\n",
   "    'ZPL_ATIME': no_attrs(Timestamp),\n",
   "    'ZPL_MTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CRTIME': no_attrs(Timestamp),\n",
   "    layout = pyndata.uint8()\n",
   "        attributes = {}\n",
   "        logger.debug(repr(data[:4]))\n",
   "        data = BytesIO(data)\n",
   "        attributes['header'] = hdr = SystemAttributeMagic(data)\n",
   "        logger.debug(hdr)\n",
   "        for attr in self.dataset.attributes(str(hdr.layout)):\n",
   "            name = attr['name']\n",
   "            logger.debug(f'processing attr {name}')\n",
   "            if attr['length'] > 0:\n",
   "                d = data.read(attr['length'])\n",
   "                d = data\n",
   "            if name not in SYSTEM_ATTRIBUTES:\n",
   "                logger.debug('unknown attribute {}'.format(attr))\n",
   "            attributes[name] = SYSTEM_ATTRIBUTES.get(name, eat_remainder)(d, attrs=attributes)\n",
   "        return attributes\n"
  ]
 },
 "175": {
  "name": "unknown1",
  "type": "pyndata.uint8",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/systemattributes.py",
  "lineno": "71",
  "column": "4",
  "context": "string(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unkno",
  "context_lines": "}\n\n\nclass SystemAttributeMagic(pyndata.Struct):\n    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n\n\nclass SystemAttributes(object):\n    def __init__(self, dataset):\n",
  "slicing": [
   "logger = logging.getLogger(__name__)\n",
   "def simple_attribute(data, attrs):\n",
   "    attr = simple_attribute(data, attrs)\n",
   "    logger.info(attr)\n",
   "    return attr\n",
   "def eat_remainder(data, attrs):\n",
   "    d = data.read()\n",
   "    return d\n",
   "    return eat_remainder(data, attrs).decode('utf-8')\n",
   "    if 'ZPL_DACL_COUNT' not in attrs:\n",
   "        logger.error('found acl entry but no count!')\n",
   "    count = attrs['ZPL_DACL_COUNT']\n",
   "    acls = []\n",
   "    for x in range(count):\n",
   "        acls.append(data.read(8))\n",
   "    logger.debug(f'{data.tell()}/{len(data.getvalue())}')\n",
   "    return acls\n",
   "def no_attrs(f):\n",
   "        return f(data)\n",
   "    'ZPL_MODE': no_attrs(Mode),\n",
   "    'ZPL_ATIME': no_attrs(Timestamp),\n",
   "    'ZPL_MTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CRTIME': no_attrs(Timestamp),\n",
   "    unknown1 = pyndata.uint8()\n",
   "        attributes = {}\n",
   "        logger.debug(repr(data[:4]))\n",
   "        data = BytesIO(data)\n",
   "        attributes['header'] = hdr = SystemAttributeMagic(data)\n",
   "        logger.debug(hdr)\n",
   "        for attr in self.dataset.attributes(str(hdr.layout)):\n",
   "            name = attr['name']\n",
   "            logger.debug(f'processing attr {name}')\n",
   "            if attr['length'] > 0:\n",
   "                d = data.read(attr['length'])\n",
   "                d = data\n",
   "            if name not in SYSTEM_ATTRIBUTES:\n",
   "                logger.debug('unknown attribute {}'.format(attr))\n",
   "            attributes[name] = SYSTEM_ATTRIBUTES.get(name, eat_remainder)(d, attrs=attributes)\n",
   "        return attributes\n"
  ]
 },
 "176": {
  "name": "unknown2",
  "type": "pyndata.padding",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/systemattributes.py",
  "lineno": "72",
  "column": "4",
  "context": "yndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s,",
  "context_lines": "class SystemAttributeMagic(pyndata.Struct):\n    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n\n\nclass SystemAttributes(object):\n    def __init__(self, dataset):\n        self.dataset = dataset\n\n",
  "slicing": [
   "logger = logging.getLogger(__name__)\n",
   "def simple_attribute(data, attrs):\n",
   "    attr = simple_attribute(data, attrs)\n",
   "    logger.info(attr)\n",
   "    return attr\n",
   "def eat_remainder(data, attrs):\n",
   "    d = data.read()\n",
   "    return d\n",
   "    return eat_remainder(data, attrs).decode('utf-8')\n",
   "    if 'ZPL_DACL_COUNT' not in attrs:\n",
   "        logger.error('found acl entry but no count!')\n",
   "    count = attrs['ZPL_DACL_COUNT']\n",
   "    acls = []\n",
   "    for x in range(count):\n",
   "        acls.append(data.read(8))\n",
   "    logger.debug(f'{data.tell()}/{len(data.getvalue())}')\n",
   "    return acls\n",
   "def no_attrs(f):\n",
   "        return f(data)\n",
   "    'ZPL_MODE': no_attrs(Mode),\n",
   "    'ZPL_ATIME': no_attrs(Timestamp),\n",
   "    'ZPL_MTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CRTIME': no_attrs(Timestamp),\n",
   "    unknown2 = pyndata.padding(length=2)\n",
   "        attributes = {}\n",
   "        logger.debug(repr(data[:4]))\n",
   "        data = BytesIO(data)\n",
   "        attributes['header'] = hdr = SystemAttributeMagic(data)\n",
   "        logger.debug(hdr)\n",
   "        for attr in self.dataset.attributes(str(hdr.layout)):\n",
   "            name = attr['name']\n",
   "            logger.debug(f'processing attr {name}')\n",
   "            if attr['length'] > 0:\n",
   "                d = data.read(attr['length'])\n",
   "                d = data\n",
   "            if name not in SYSTEM_ATTRIBUTES:\n",
   "                logger.debug('unknown attribute {}'.format(attr))\n",
   "            attributes[name] = SYSTEM_ATTRIBUTES.get(name, eat_remainder)(d, attrs=attributes)\n",
   "        return attributes\n"
  ]
 },
 "177": {
  "name": "unknown3",
  "type": "pyndata.bytestring",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/systemattributes.py",
  "lineno": "73",
  "column": "4",
  "context": "t8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n\n\nclass SystemAttributes(object):\n    def __init__",
  "context_lines": "    magic = pyndata.bytestring(length=4)\n    layout = pyndata.uint8()\n    unknown1 = pyndata.uint8()\n    unknown2 = pyndata.padding(length=2)\n    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n\n\nclass SystemAttributes(object):\n    def __init__(self, dataset):\n        self.dataset = dataset\n\n",
  "slicing": [
   "logger = logging.getLogger(__name__)\n",
   "def simple_attribute(data, attrs):\n",
   "    attr = simple_attribute(data, attrs)\n",
   "    logger.info(attr)\n",
   "    return attr\n",
   "def eat_remainder(data, attrs):\n",
   "    d = data.read()\n",
   "    return d\n",
   "    return eat_remainder(data, attrs).decode('utf-8')\n",
   "    if 'ZPL_DACL_COUNT' not in attrs:\n",
   "        logger.error('found acl entry but no count!')\n",
   "    count = attrs['ZPL_DACL_COUNT']\n",
   "    acls = []\n",
   "    for x in range(count):\n",
   "        acls.append(data.read(8))\n",
   "    logger.debug(f'{data.tell()}/{len(data.getvalue())}')\n",
   "    return acls\n",
   "def no_attrs(f):\n",
   "        return f(data)\n",
   "    'ZPL_MODE': no_attrs(Mode),\n",
   "    'ZPL_ATIME': no_attrs(Timestamp),\n",
   "    'ZPL_MTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CTIME': no_attrs(Timestamp),\n",
   "    'ZPL_CRTIME': no_attrs(Timestamp),\n",
   "    unknown3 = pyndata.bytestring(length=lambda s, x=None: 8 if s.unknown1 == 8 else 0)\n",
   "        attributes = {}\n",
   "        logger.debug(repr(data[:4]))\n",
   "        data = BytesIO(data)\n",
   "        attributes['header'] = hdr = SystemAttributeMagic(data)\n",
   "        logger.debug(hdr)\n",
   "        for attr in self.dataset.attributes(str(hdr.layout)):\n",
   "            name = attr['name']\n",
   "            logger.debug(f'processing attr {name}')\n",
   "            if attr['length'] > 0:\n",
   "                d = data.read(attr['length'])\n",
   "                d = data\n",
   "            if name not in SYSTEM_ATTRIBUTES:\n",
   "                logger.debug('unknown attribute {}'.format(attr))\n",
   "            attributes[name] = SYSTEM_ATTRIBUTES.get(name, eat_remainder)(d, attrs=attributes)\n",
   "        return attributes\n"
  ]
 },
 "178": {
  "name": "FIFO",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "10",
  "column": "4",
  "context": "ogger(__name__)\n\n\nclass PosixType(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n",
  "context_lines": "import enum\nimport pyndata\n\nlogger = logging.getLogger(__name__)\n\n\nclass PosixType(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n",
  "slicing": "    FIFO = 1\n"
 },
 "179": {
  "name": "CHARACTER",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "11",
  "column": "4",
  "context": "_)\n\n\nclass PosixType(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE =",
  "context_lines": "import pyndata\n\nlogger = logging.getLogger(__name__)\n\n\nclass PosixType(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n",
  "slicing": "    CHARACTER = 2\n"
 },
 "180": {
  "name": "DIRECTORY",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "12",
  "column": "4",
  "context": "pe(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 1",
  "context_lines": "logger = logging.getLogger(__name__)\n\n\nclass PosixType(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n",
  "slicing": "    DIRECTORY = 4\n"
 },
 "181": {
  "name": "BLOCK",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "13",
  "column": "4",
  "context": " FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET =",
  "context_lines": "class PosixType(enum.Enum):\n    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n",
  "slicing": "    BLOCK = 6\n"
 },
 "182": {
  "name": "REGULAR_FILE",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "14",
  "column": "4",
  "context": "CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n   ",
  "context_lines": "    FIFO = 1\n    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\n",
  "slicing": "    REGULAR_FILE = 8\n"
 },
 "183": {
  "name": "SYMLINK",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "15",
  "column": "4",
  "context": "ECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclas",
  "context_lines": "    CHARACTER = 2\n    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n",
  "slicing": "    SYMLINK = 10\n"
 },
 "184": {
  "name": "SOCKET",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "16",
  "column": "4",
  "context": "OCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.S",
  "context_lines": "    DIRECTORY = 4\n    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n",
  "slicing": "    SOCKET = 12\n"
 },
 "185": {
  "name": "DOOR",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "17",
  "column": "4",
  "context": "LAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __",
  "context_lines": "    BLOCK = 6\n    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n",
  "slicing": "    DOOR = 13\n"
 },
 "186": {
  "name": "PORT",
  "type": "int",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "18",
  "column": "4",
  "context": "   SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'li",
  "context_lines": "    REGULAR_FILE = 8\n    SYMLINK = 10\n    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n",
  "slicing": "    PORT = 14\n"
 },
 "187": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "22",
  "column": "4",
  "context": "3\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.Bi",
  "context_lines": "    SOCKET = 12\n    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "188": {
  "name": "mode",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "23",
  "column": "4",
  "context": "de(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown",
  "context_lines": "    DOOR = 13\n    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n"
  ]
 },
 "189": {
  "name": "perms",
  "type": "pyndata.BitField",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "24",
  "column": "4",
  "context": "DIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_t",
  "context_lines": "    PORT = 14\n\n\nclass Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n"
  ]
 },
 "190": {
  "name": "unknown",
  "type": "pyndata.BitField",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "25",
  "column": "4",
  "context": "nt64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=Pos",
  "context_lines": "class Mode(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n"
  ]
 },
 "191": {
  "name": "file_type",
  "type": "pyndata.BitField",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "26",
  "column": "4",
  "context": ", 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ ",
  "context_lines": "    __ENDIAN__ = 'little'\n    mode = pyndata.uint64()\n    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n"
  ]
 },
 "192": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "30",
  "column": "4",
  "context": "PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = p",
  "context_lines": "    perms = pyndata.BitField(mode, 10)\n    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "193": {
  "name": "seconds",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "31",
  "column": "4",
  "context": "mp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeAC",
  "context_lines": "    unknown = pyndata.BitField(mode, 2)\n    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    seconds = pyndata.uint64()\n"
  ]
 },
 "194": {
  "name": "nanoseconds",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "32",
  "column": "4",
  "context": "N__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndat",
  "context_lines": "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n\n\nclass Timestamp(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    nanoseconds = pyndata.uint64()\n"
  ]
 },
 "195": {
  "name": "who",
  "type": "pyndata.uint32",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "36",
  "column": "4",
  "context": "ta.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyn",
  "context_lines": "    __ENDIAN__ = 'little'\n    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    who = pyndata.uint32()\n"
  ]
 },
 "196": {
  "name": "access_mask",
  "type": "pyndata.uint32",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "37",
  "column": "4",
  "context": "E(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.ui",
  "context_lines": "    seconds = pyndata.uint64()\n    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    access_mask = pyndata.uint32()\n"
  ]
 },
 "197": {
  "name": "flags",
  "type": "pyndata.uint16",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "38",
  "column": "4",
  "context": "a.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pynda",
  "context_lines": "    nanoseconds = pyndata.uint64()\n\n\nclass ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    flags = pyndata.uint16()\n"
  ]
 },
 "198": {
  "name": "type",
  "type": "pyndata.uint16",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "39",
  "column": "4",
  "context": "pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_obj",
  "context_lines": "class ZNodeACE(pyndata.Struct):\n    who = pyndata.uint32()\n    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    type = pyndata.uint16()\n"
  ]
 },
 "199": {
  "name": "external_object",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "43",
  "column": "4",
  "context": "ta.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata",
  "context_lines": "    access_mask = pyndata.uint32()\n    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    external_object = pyndata.uint64()\n"
  ]
 },
 "200": {
  "name": "count",
  "type": "pyndata.uint32",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "44",
  "column": "4",
  "context": "ruct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pynd",
  "context_lines": "    flags = pyndata.uint16()\n    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n"
  ]
 },
 "201": {
  "name": "version",
  "type": "pyndata.uint16",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "45",
  "column": "4",
  "context": "pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces ",
  "context_lines": "    type = pyndata.uint16()\n\n\nclass ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n    __ENDIAN__ = 'little'\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    version = pyndata.uint16()\n"
  ]
 },
 "202": {
  "name": "_padding",
  "type": "pyndata.padding",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "46",
  "column": "4",
  "context": "ndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n",
  "context_lines": "class ZNodeACL(pyndata.Struct):\n    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    ZPL_ATIME = Timestamp()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    _padding = pyndata.padding(length=2)\n"
  ]
 },
 "203": {
  "name": "aces",
  "type": "pyndata.array",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "47",
  "column": "4",
  "context": "16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n    __ENDI",
  "context_lines": "    external_object = pyndata.uint64()\n    count = pyndata.uint32()\n    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    ZPL_ATIME = Timestamp()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n"
  ]
 },
 "204": {
  "name": "__ENDIAN__",
  "type": "str",
  "class": "build-in",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "51",
  "column": "4",
  "context": "ount)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    ZPL_ATIME = Timestamp()\n    ZPL_MTIME = Timest",
  "context_lines": "    version = pyndata.uint16()\n    _padding = pyndata.padding(length=2)\n    aces = pyndata.array(ZNodeACE, length=count)\n\n\nclass DefaultAttrsV1(pyndata.Struct):\n    __ENDIAN__ = 'little'\n    ZPL_ATIME = Timestamp()\n    ZPL_MTIME = Timestamp()\n    ZPL_CTIME = Timestamp()\n    ZPL_CRTIME = Timestamp()\n",
  "slicing": "    __ENDIAN__ = 'little'\n"
 },
 "205": {
  "name": "ZPL_GEN",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "56",
  "column": "4",
  "context": "ME = Timestamp()\n    ZPL_CRTIME = Timestamp()\n    ZPL_GEN = pyndata.uint64()\n    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint6",
  "context_lines": "    ZPL_ATIME = Timestamp()\n    ZPL_MTIME = Timestamp()\n    ZPL_CTIME = Timestamp()\n    ZPL_CRTIME = Timestamp()\n    ZPL_GEN = pyndata.uint64()\n    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_GEN = pyndata.uint64()\n"
  ]
 },
 "206": {
  "name": "ZPL_SIZE",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "58",
  "column": "4",
  "context": "_GEN = pyndata.uint64()\n    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = ",
  "context_lines": "    ZPL_CTIME = Timestamp()\n    ZPL_CRTIME = Timestamp()\n    ZPL_GEN = pyndata.uint64()\n    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_SIZE = pyndata.uint64()\n"
  ]
 },
 "207": {
  "name": "ZPL_PARENT",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "59",
  "column": "4",
  "context": "MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = p",
  "context_lines": "    ZPL_CRTIME = Timestamp()\n    ZPL_GEN = pyndata.uint64()\n    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_PARENT = pyndata.uint64()\n"
  ]
 },
 "208": {
  "name": "ZPL_LINKS",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "60",
  "column": "4",
  "context": "ta.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = py",
  "context_lines": "    ZPL_GEN = pyndata.uint64()\n    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_LINKS = pyndata.uint64()\n"
  ]
 },
 "209": {
  "name": "ZPL_XATTR",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "61",
  "column": "4",
  "context": "ata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = py",
  "context_lines": "    ZPL_MODE = Mode()\n    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_XATTR = pyndata.uint64()\n"
  ]
 },
 "210": {
  "name": "ZPL_RDEV",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "62",
  "column": "4",
  "context": "ata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyn",
  "context_lines": "    ZPL_SIZE = pyndata.uint64()\n    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), length=4)\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_RDEV = pyndata.uint64()\n"
  ]
 },
 "211": {
  "name": "ZPL_FLAGS",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "63",
  "column": "4",
  "context": "data.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pynda",
  "context_lines": "    ZPL_PARENT = pyndata.uint64()\n    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), length=4)\n    acl = ZNodeACL()\n\n\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_FLAGS = pyndata.uint64()\n"
  ]
 },
 "212": {
  "name": "ZPL_UID",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "64",
  "column": "4",
  "context": "ata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pynda",
  "context_lines": "    ZPL_LINKS = pyndata.uint64()\n    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), length=4)\n    acl = ZNodeACL()\n\n\ndef FixedAttributes(data):\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_UID = pyndata.uint64()\n"
  ]
 },
 "213": {
  "name": "ZPL_GID",
  "type": "pyndata.uint64",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "65",
  "column": "4",
  "context": "ndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), leng",
  "context_lines": "    ZPL_XATTR = pyndata.uint64()\n    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), length=4)\n    acl = ZNodeACL()\n\n\ndef FixedAttributes(data):\n    attrs = DefaultAttrsV1(data)\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    ZPL_GID = pyndata.uint64()\n"
  ]
 },
 "214": {
  "name": "padding",
  "type": "pyndata.array",
  "class": "imported",
  "approach": "Pysonar2",
  "file_path": "zfsp/zfs/posix/attributes/__init__.py",
  "lineno": "66",
  "column": "4",
  "context": "ndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), length=4)\n    acl = ZNodeACL()\n\n\ndef FixedAttributes(data):\n",
  "context_lines": "    ZPL_RDEV = pyndata.uint64()\n    ZPL_FLAGS = pyndata.uint64()\n    ZPL_UID = pyndata.uint64()\n    ZPL_GID = pyndata.uint64()\n    padding = pyndata.array(pyndata.uint64(), length=4)\n    acl = ZNodeACL()\n\n\ndef FixedAttributes(data):\n    attrs = DefaultAttrsV1(data)\n    return attrs.field_items\n\n\n",
  "slicing": [
   "    mode = pyndata.uint64()\n",
   "    perms = pyndata.BitField(mode, 10)\n",
   "    unknown = pyndata.BitField(mode, 2)\n",
   "    file_type = pyndata.BitField(mode, 4, enum=PosixType)\n",
   "    count = pyndata.uint32()\n",
   "    aces = pyndata.array(ZNodeACE, length=count)\n",
   "    padding = pyndata.array(pyndata.uint64(), length=4)\n"
  ]
 }
}